//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	_fwd_kernel             // -- Begin function _fwd_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @_fwd_kernel
.visible .entry _fwd_kernel(
	.param .u64 .ptr .global .align 1 _fwd_kernel_param_0,
	.param .u64 .ptr .global .align 1 _fwd_kernel_param_1,
	.param .u64 .ptr .global .align 1 _fwd_kernel_param_2,
	.param .u64 .ptr .global .align 1 _fwd_kernel_param_3,
	.param .u64 .ptr .global .align 1 _fwd_kernel_param_4,
	.param .u64 .ptr .global .align 1 _fwd_kernel_param_5,
	.param .f32 _fwd_kernel_param_6,
	.param .u64 .ptr .global .align 1 _fwd_kernel_param_7,
	.param .u64 .ptr .global .align 1 _fwd_kernel_param_8,
	.param .u64 .ptr .global .align 1 _fwd_kernel_param_9,
	.param .u64 .ptr .global .align 1 _fwd_kernel_param_10,
	.param .u64 .ptr .global .align 1 _fwd_kernel_param_11,
	.param .u32 _fwd_kernel_param_12,
	.param .u32 _fwd_kernel_param_13,
	.param .u32 _fwd_kernel_param_14,
	.param .u32 _fwd_kernel_param_15,
	.param .u32 _fwd_kernel_param_16,
	.param .u32 _fwd_kernel_param_17,
	.param .u32 _fwd_kernel_param_18,
	.param .u32 _fwd_kernel_param_19,
	.param .u32 _fwd_kernel_param_20,
	.param .u32 _fwd_kernel_param_21,
	.param .u32 _fwd_kernel_param_22,
	.param .u32 _fwd_kernel_param_23,
	.param .u32 _fwd_kernel_param_24,
	.param .u32 _fwd_kernel_param_25,
	.param .u32 _fwd_kernel_param_26
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<477>;
	.reg .b16 	%rs<657>;
	.reg .b32 	%r<1774>;
	.reg .f32 	%f<6208>;
	.reg .b64 	%rd<539>;
	.loc	1 36 0                          // prefix_prefill.py:36:0
$L__func_begin0:
	.loc	1 36 0                          // prefix_prefill.py:36:0

// %bb.0:
	ld.param.u32 	%r282, [_fwd_kernel_param_24];
	ld.param.u32 	%r281, [_fwd_kernel_param_21];
	ld.param.f32 	%f1313, [_fwd_kernel_param_6];
	ld.param.u64 	%rd136, [_fwd_kernel_param_4];
	ld.param.u64 	%rd135, [_fwd_kernel_param_3];
	ld.param.u64 	%rd149, [_fwd_kernel_param_0];
$L__tmp0:
	.loc	1 86 30                         // prefix_prefill.py:86:30
	// begin inline asm
	mov.u32 %r283, %ctaid.x;
	// end inline asm
	.loc	1 87 29                         // prefix_prefill.py:87:29
	// begin inline asm
	mov.u32 %r284, %ctaid.y;
	// end inline asm
	.loc	1 88 28                         // prefix_prefill.py:88:28
	// begin inline asm
	mov.u32 %r285, %ctaid.z;
	// end inline asm
	.loc	1 90 30                         // prefix_prefill.py:90:30
	mul.hi.s32 	%r353, %r284, -1840700269;
	mad.lo.s32 	%r354, %r284, 1, %r353;
	shr.u32 	%r355, %r354, 31;
	shr.s32 	%r356, %r354, 2;
	add.s32 	%r2, %r356, %r355;
	ld.param.u64 	%rd150, [_fwd_kernel_param_5];
	.loc	1 92 43                         // prefix_prefill.py:92:43
	mul.wide.s32 	%rd151, %r283, 4;
	ld.param.u64 	%rd152, [_fwd_kernel_param_10];
	add.s64 	%rd138, %rd152, %rd151;
	mov.pred 	%p437, -1;
	.loc	1 92 32                         // prefix_prefill.py:92:32
	// begin inline asm
	mov.u32 %r286, 0x0;
	@%p437 ld.global.b32 { %r286 }, [ %rd138 + 0 ];
	// end inline asm
	ld.param.u64 	%rd153, [_fwd_kernel_param_9];
	.loc	1 93 57                         // prefix_prefill.py:93:57
	add.s64 	%rd139, %rd153, %rd151;
	.loc	1 93 43                         // prefix_prefill.py:93:43
	// begin inline asm
	mov.u32 %r287, 0x0;
	@%p437 ld.global.b32 { %r287 }, [ %rd139 + 0 ];
	// end inline asm
	.loc	1 94 68                         // prefix_prefill.py:94:68
	add.s64 	%rd140, %rd139, 4;
	.loc	1 94 42                         // prefix_prefill.py:94:42
	// begin inline asm
	mov.u32 %r288, 0x0;
	@%p437 ld.global.b32 { %r288 }, [ %rd140 + 0 ];
	// end inline asm
	.loc	1 96 27                         // prefix_prefill.py:96:27
	sub.s32 	%r4, %r288, %r287;
	ld.param.u32 	%r357, [_fwd_kernel_param_12];
	.loc	1 97 44                         // prefix_prefill.py:97:44
	sub.s32 	%r5, %r286, %r4;
	ld.param.u32 	%r358, [_fwd_kernel_param_13];
	.loc	1 104 32                        // prefix_prefill.py:104:32
	shl.b32 	%r6, %r285, 7;
	ld.param.u32 	%r359, [_fwd_kernel_param_14];
	.loc	1 110 26                        // prefix_prefill.py:110:26
	mov.u32 	%r7, %tid.x;
	shl.b32 	%r8, %r7, 3;
	and.b32  	%r9, %r8, 8;
	and.b32  	%r10, %r8, 56;
	shr.u32 	%r11, %r7, 5;
	and.b32  	%r12, %r7, 8;
	bfe.u32 	%r360, %r7, 1, 4;
	ld.param.u32 	%r361, [_fwd_kernel_param_22];
	and.b32  	%r13, %r7, 32;
	ld.param.u32 	%r362, [_fwd_kernel_param_23];
	shr.u32 	%r363, %r13, 1;
	and.b32  	%r14, %r7, 64;
	ld.param.u32 	%r364, [_fwd_kernel_param_25];
	shr.u32 	%r365, %r14, 1;
	ld.param.u32 	%r366, [_fwd_kernel_param_26];
	or.b32  	%r367, %r363, %r360;
	or.b32  	%r15, %r367, %r365;
	.loc	1 114 46                        // prefix_prefill.py:114:46
	bfe.u32 	%r16, %r7, 3, 4;
	or.b32  	%r17, %r16, 16;
	or.b32  	%r18, %r16, 32;
	or.b32  	%r19, %r16, 48;
	bfe.u32 	%r368, %r7, 2, 3;
	or.b32  	%r369, %r363, %r368;
	or.b32  	%r20, %r369, %r365;
	or.b32  	%r21, %r20, 8;
	.loc	1 114 33                        // prefix_prefill.py:114:33
	or.b32  	%r22, %r6, %r16;
	or.b32  	%r23, %r6, %r17;
	or.b32  	%r24, %r6, %r18;
	or.b32  	%r25, %r6, %r19;
	or.b32  	%r26, %r22, 64;
	or.b32  	%r27, %r22, 80;
	or.b32  	%r28, %r22, 96;
	or.b32  	%r29, %r22, 112;
	.loc	1 116 45                        // prefix_prefill.py:116:45
	add.s32 	%r34, %r287, %r22;
	add.s32 	%r35, %r287, %r23;
	add.s32 	%r36, %r287, %r24;
	add.s32 	%r37, %r287, %r25;
	add.s32 	%r38, %r287, %r26;
	add.s32 	%r39, %r287, %r27;
	add.s32 	%r40, %r287, %r28;
	add.s32 	%r41, %r287, %r29;
	.loc	1 117 43                        // prefix_prefill.py:117:43
	shl.b32 	%r370, %r7, 1;
	and.b32  	%r42, %r370, 6;
	.loc	1 117 13                        // prefix_prefill.py:117:13
	mad.lo.s32 	%r371, %r284, %r359, %r10;
	.loc	1 117 36                        // prefix_prefill.py:117:36
	mad.lo.s32 	%r372, %r34, %r358, %r371;
	mad.lo.s32 	%r373, %r35, %r358, %r371;
	mad.lo.s32 	%r374, %r36, %r358, %r371;
	mad.lo.s32 	%r375, %r37, %r358, %r371;
	mad.lo.s32 	%r376, %r38, %r358, %r371;
	mad.lo.s32 	%r377, %r39, %r358, %r371;
	mad.lo.s32 	%r378, %r40, %r358, %r371;
	mad.lo.s32 	%r379, %r41, %r358, %r371;
	.loc	1 125 35                        // prefix_prefill.py:125:35
	setp.lt.s32 	%p4, %r22, %r4;
	setp.lt.s32 	%p9, %r23, %r4;
	setp.lt.s32 	%p14, %r24, %r4;
	setp.lt.s32 	%p19, %r25, %r4;
	setp.lt.s32 	%p24, %r26, %r4;
	setp.lt.s32 	%p29, %r27, %r4;
	setp.lt.s32 	%p34, %r28, %r4;
	setp.lt.s32 	%p39, %r29, %r4;
	.loc	1 123 20                        // prefix_prefill.py:123:20
	mul.wide.s32 	%rd154, %r372, 2;
	add.s64 	%rd141, %rd149, %rd154;
	mul.wide.s32 	%rd155, %r373, 2;
	add.s64 	%rd142, %rd149, %rd155;
	mul.wide.s32 	%rd156, %r374, 2;
	add.s64 	%rd143, %rd149, %rd156;
	mul.wide.s32 	%rd157, %r375, 2;
	add.s64 	%rd144, %rd149, %rd157;
	mul.wide.s32 	%rd158, %r376, 2;
	add.s64 	%rd145, %rd149, %rd158;
	mul.wide.s32 	%rd159, %r377, 2;
	add.s64 	%rd146, %rd149, %rd159;
	mul.wide.s32 	%rd160, %r378, 2;
	add.s64 	%rd147, %rd149, %rd160;
	mul.wide.s32 	%rd161, %r379, 2;
	add.s64 	%rd148, %rd149, %rd161;
	mov.b32 	%r293, 0;
	.loc	1 123 16                        // prefix_prefill.py:123:16
	// begin inline asm
	mov.u32 %r289, 0x0;
	mov.u32 %r290, 0x0;
	mov.u32 %r291, 0x0;
	mov.u32 %r292, 0x0;
	@%p4 ld.global.v4.b32 { %r289, %r290, %r291, %r292 }, [ %rd141 + 0 ];
	@!%p4 mov.u32 %r289, %r293;
	@!%p4 mov.u32 %r290, %r293;
	@!%p4 mov.u32 %r291, %r293;
	@!%p4 mov.u32 %r292, %r293;
	// end inline asm
	// begin inline asm
	mov.u32 %r297, 0x0;
	mov.u32 %r298, 0x0;
	mov.u32 %r299, 0x0;
	mov.u32 %r300, 0x0;
	@%p9 ld.global.v4.b32 { %r297, %r298, %r299, %r300 }, [ %rd142 + 0 ];
	@!%p9 mov.u32 %r297, %r293;
	@!%p9 mov.u32 %r298, %r293;
	@!%p9 mov.u32 %r299, %r293;
	@!%p9 mov.u32 %r300, %r293;
	// end inline asm
	// begin inline asm
	mov.u32 %r305, 0x0;
	mov.u32 %r306, 0x0;
	mov.u32 %r307, 0x0;
	mov.u32 %r308, 0x0;
	@%p14 ld.global.v4.b32 { %r305, %r306, %r307, %r308 }, [ %rd143 + 0 ];
	@!%p14 mov.u32 %r305, %r293;
	@!%p14 mov.u32 %r306, %r293;
	@!%p14 mov.u32 %r307, %r293;
	@!%p14 mov.u32 %r308, %r293;
	// end inline asm
	// begin inline asm
	mov.u32 %r313, 0x0;
	mov.u32 %r314, 0x0;
	mov.u32 %r315, 0x0;
	mov.u32 %r316, 0x0;
	@%p19 ld.global.v4.b32 { %r313, %r314, %r315, %r316 }, [ %rd144 + 0 ];
	@!%p19 mov.u32 %r313, %r293;
	@!%p19 mov.u32 %r314, %r293;
	@!%p19 mov.u32 %r315, %r293;
	@!%p19 mov.u32 %r316, %r293;
	// end inline asm
	// begin inline asm
	mov.u32 %r321, 0x0;
	mov.u32 %r322, 0x0;
	mov.u32 %r323, 0x0;
	mov.u32 %r324, 0x0;
	@%p24 ld.global.v4.b32 { %r321, %r322, %r323, %r324 }, [ %rd145 + 0 ];
	@!%p24 mov.u32 %r321, %r293;
	@!%p24 mov.u32 %r322, %r293;
	@!%p24 mov.u32 %r323, %r293;
	@!%p24 mov.u32 %r324, %r293;
	// end inline asm
	// begin inline asm
	mov.u32 %r329, 0x0;
	mov.u32 %r330, 0x0;
	mov.u32 %r331, 0x0;
	mov.u32 %r332, 0x0;
	@%p29 ld.global.v4.b32 { %r329, %r330, %r331, %r332 }, [ %rd146 + 0 ];
	@!%p29 mov.u32 %r329, %r293;
	@!%p29 mov.u32 %r330, %r293;
	@!%p29 mov.u32 %r331, %r293;
	@!%p29 mov.u32 %r332, %r293;
	// end inline asm
	// begin inline asm
	mov.u32 %r337, 0x0;
	mov.u32 %r338, 0x0;
	mov.u32 %r339, 0x0;
	mov.u32 %r340, 0x0;
	@%p34 ld.global.v4.b32 { %r337, %r338, %r339, %r340 }, [ %rd147 + 0 ];
	@!%p34 mov.u32 %r337, %r293;
	@!%p34 mov.u32 %r338, %r293;
	@!%p34 mov.u32 %r339, %r293;
	@!%p34 mov.u32 %r340, %r293;
	// end inline asm
	// begin inline asm
	mov.u32 %r345, 0x0;
	mov.u32 %r346, 0x0;
	mov.u32 %r347, 0x0;
	mov.u32 %r348, 0x0;
	@%p39 ld.global.v4.b32 { %r345, %r346, %r347, %r348 }, [ %rd148 + 0 ];
	@!%p39 mov.u32 %r345, %r293;
	@!%p39 mov.u32 %r346, %r293;
	@!%p39 mov.u32 %r347, %r293;
	@!%p39 mov.u32 %r348, %r293;
	// end inline asm
	xor.b32  	%r412, %r8, %r7;
	and.b32  	%r413, %r412, 56;
	shl.b32 	%r414, %r16, 6;
	or.b32  	%r44, %r413, %r414;
	shl.b32 	%r415, %r44, 1;
	mov.u32 	%r416, global_smem;
	add.s32 	%r417, %r416, %r415;
	st.shared.v4.b32 	[%r417], {%r289, %r290, %r291, %r292};
	st.shared.v4.b32 	[%r417+2048], {%r297, %r298, %r299, %r300};
	st.shared.v4.b32 	[%r417+4096], {%r305, %r306, %r307, %r308};
	st.shared.v4.b32 	[%r417+6144], {%r313, %r314, %r315, %r316};
	st.shared.v4.b32 	[%r417+8192], {%r321, %r322, %r323, %r324};
	st.shared.v4.b32 	[%r417+10240], {%r329, %r330, %r331, %r332};
	st.shared.v4.b32 	[%r417+12288], {%r337, %r338, %r339, %r340};
	st.shared.v4.b32 	[%r417+14336], {%r345, %r346, %r347, %r348};
	.loc	1 138 41                        // prefix_prefill.py:138:41
	mul.lo.s32 	%r418, %r283, %r357;
	.loc	1 138 29                        // prefix_prefill.py:138:29
	mul.wide.s32 	%rd162, %r418, 4;
	add.s64 	%rd1, %rd150, %rd162;
	.loc	1 142 60                        // prefix_prefill.py:142:60
	mul.lo.s32 	%r45, %r2, %r361;
	.loc	1 143 32                        // prefix_prefill.py:143:32
	bfe.u32 	%r419, %r8, 3, 3;
	.loc	1 143 37                        // prefix_prefill.py:143:37
	mul.lo.s32 	%r46, %r362, %r419;
	.loc	1 149 31                        // prefix_prefill.py:149:31
	mul.lo.s32 	%r47, %r2, %r364;
	.loc	1 150 35                        // prefix_prefill.py:150:35
	mul.lo.s32 	%r48, %r366, %r15;
	.loc	1 151 27                        // prefix_prefill.py:151:27
	or.b32  	%r49, %r9, 1;
	or.b32  	%r50, %r9, 2;
	or.b32  	%r51, %r9, 3;
	or.b32  	%r52, %r9, 4;
	or.b32  	%r53, %r9, 5;
	or.b32  	%r54, %r9, 6;
	or.b32  	%r55, %r9, 7;
	.loc	1 135 28                        // prefix_prefill.py:135:28
	add.s32 	%r420, %r5, 15;
	and.b32  	%r1763, %r420, -64;
	setp.lt.s32 	%p44, %r1763, 1;
	mov.f32 	%f5916, 0fFF800000;
	mov.f32 	%f6060, 0f3F800000;
	mov.f32 	%f5924, 0f00000000;
	add.s32 	%r1717, %r45, %r46;
	add.s32 	%r1718, %r47, %r48;
	and.b32  	%r1719, %r11, 134217724;
	shl.b32 	%r1720, %r20, 3;
	shl.b32 	%r1721, %r21, 3;
	xor.b32  	%r1722, %r9, %r12;
	shl.b32 	%r1723, %r15, 5;
	mov.u16 	%rs194, 0;
	mov.f32 	%f5925, %f5924;
	mov.f32 	%f5926, %f5924;
	mov.f32 	%f5927, %f5924;
	mov.f32 	%f5928, %f5924;
	mov.f32 	%f5929, %f5924;
	mov.f32 	%f5930, %f5924;
	mov.f32 	%f5931, %f5924;
	mov.f32 	%f5932, %f5924;
	mov.f32 	%f5933, %f5924;
	mov.f32 	%f5934, %f5924;
	mov.f32 	%f5935, %f5924;
	mov.f32 	%f5936, %f5924;
	mov.f32 	%f5937, %f5924;
	mov.f32 	%f5938, %f5924;
	mov.f32 	%f5939, %f5924;
	mov.f32 	%f5940, %f5924;
	mov.f32 	%f5941, %f5924;
	mov.f32 	%f5942, %f5924;
	mov.f32 	%f5943, %f5924;
	mov.f32 	%f5944, %f5924;
	mov.f32 	%f5945, %f5924;
	mov.f32 	%f5946, %f5924;
	mov.f32 	%f5947, %f5924;
	mov.f32 	%f5948, %f5924;
	mov.f32 	%f5949, %f5924;
	mov.f32 	%f5950, %f5924;
	mov.f32 	%f5951, %f5924;
	mov.f32 	%f5952, %f5924;
	mov.f32 	%f5953, %f5924;
	mov.f32 	%f5954, %f5924;
	mov.f32 	%f5955, %f5924;
	mov.f32 	%f5956, %f5924;
	mov.f32 	%f5957, %f5924;
	mov.f32 	%f5958, %f5924;
	mov.f32 	%f5959, %f5924;
	mov.f32 	%f5960, %f5924;
	mov.f32 	%f5961, %f5924;
	mov.f32 	%f5962, %f5924;
	mov.f32 	%f5963, %f5924;
	mov.f32 	%f5964, %f5924;
	mov.f32 	%f5965, %f5924;
	mov.f32 	%f5966, %f5924;
	mov.f32 	%f5967, %f5924;
	mov.f32 	%f5968, %f5924;
	mov.f32 	%f5969, %f5924;
	mov.f32 	%f5970, %f5924;
	mov.f32 	%f5971, %f5924;
	mov.f32 	%f5972, %f5924;
	mov.f32 	%f5973, %f5924;
	mov.f32 	%f5974, %f5924;
	mov.f32 	%f5975, %f5924;
	mov.f32 	%f5976, %f5924;
	mov.f32 	%f5977, %f5924;
	mov.f32 	%f5978, %f5924;
	mov.f32 	%f5979, %f5924;
	mov.f32 	%f5980, %f5924;
	mov.f32 	%f5981, %f5924;
	mov.f32 	%f5982, %f5924;
	mov.f32 	%f5983, %f5924;
	mov.f32 	%f5984, %f5924;
	mov.f32 	%f5985, %f5924;
	mov.f32 	%f5986, %f5924;
	mov.f32 	%f5987, %f5924;
	mov.f32 	%f6061, %f6060;
	mov.f32 	%f6062, %f6060;
	mov.f32 	%f6063, %f6060;
	mov.f32 	%f5917, %f5916;
	mov.f32 	%f5918, %f5916;
	mov.f32 	%f5919, %f5916;
	@%p44 bra 	$L__BB0_4;
// %bb.1:                               // %.lr.ph
	.loc	1 0 28                          // prefix_prefill.py:0:28
	add.s32 	%r425, %r416, 16384;
	add.s32 	%r58, %r425, %r415;
	shr.u32 	%r426, %r416, 4;
	cvt.u64.u32 	%rd163, %r426;
	and.b64  	%rd164, %rd163, 16383;
	or.b64  	%rd2, %rd164, 4611686293372403712;
	shr.u32 	%r427, %r425, 4;
	cvt.u64.u32 	%rd165, %r427;
	and.b64  	%rd166, %rd165, 16383;
	or.b64  	%rd3, %rd166, 4611686293313683456;
	add.s64 	%rd4, %rd164, 4611686293372403714;
	add.s64 	%rd5, %rd166, 4611686293313683458;
	add.s64 	%rd6, %rd164, 4611686293372403716;
	add.s64 	%rd7, %rd166, 4611686293313683460;
	add.s64 	%rd8, %rd164, 4611686293372403718;
	add.s64 	%rd9, %rd166, 4611686293313683462;
	add.s64 	%rd10, %rd164, 4611686293372404224;
	add.s64 	%rd11, %rd164, 4611686293372404226;
	add.s64 	%rd12, %rd164, 4611686293372404228;
	add.s64 	%rd13, %rd164, 4611686293372404230;
	add.s32 	%r60, %r425, %r1720;
	add.s32 	%r61, %r425, %r1721;
	shl.b32 	%r431, %r1722, 1;
	or.b32  	%r433, %r1723, %r431;
	add.s32 	%r62, %r425, %r433;
	or.b64  	%rd14, %rd166, -4611685949699522560;
	shl.b32 	%r434, %r16, 3;
	add.s32 	%r63, %r1717, %r434;
	mov.f32 	%f6060, 0f3F800000;
	mov.f32 	%f5916, 0fFF800000;
	mov.f32 	%f5924, 0f00000000;
	mov.u64 	%rd537, %rd1;
	mov.f32 	%f5925, %f5924;
	mov.f32 	%f5926, %f5924;
	mov.f32 	%f5927, %f5924;
	mov.f32 	%f5928, %f5924;
	mov.f32 	%f5929, %f5924;
	mov.f32 	%f5930, %f5924;
	mov.f32 	%f5931, %f5924;
	mov.f32 	%f5932, %f5924;
	mov.f32 	%f5933, %f5924;
	mov.f32 	%f5934, %f5924;
	mov.f32 	%f5935, %f5924;
	mov.f32 	%f5936, %f5924;
	mov.f32 	%f5937, %f5924;
	mov.f32 	%f5938, %f5924;
	mov.f32 	%f5939, %f5924;
	mov.f32 	%f5940, %f5924;
	mov.f32 	%f5941, %f5924;
	mov.f32 	%f5942, %f5924;
	mov.f32 	%f5943, %f5924;
	mov.f32 	%f5944, %f5924;
	mov.f32 	%f5945, %f5924;
	mov.f32 	%f5946, %f5924;
	mov.f32 	%f5947, %f5924;
	mov.f32 	%f5948, %f5924;
	mov.f32 	%f5949, %f5924;
	mov.f32 	%f5950, %f5924;
	mov.f32 	%f5951, %f5924;
	mov.f32 	%f5952, %f5924;
	mov.f32 	%f5953, %f5924;
	mov.f32 	%f5954, %f5924;
	mov.f32 	%f5955, %f5924;
	mov.f32 	%f5956, %f5924;
	mov.f32 	%f5957, %f5924;
	mov.f32 	%f5958, %f5924;
	mov.f32 	%f5959, %f5924;
	mov.f32 	%f5960, %f5924;
	mov.f32 	%f5961, %f5924;
	mov.f32 	%f5962, %f5924;
	mov.f32 	%f5963, %f5924;
	mov.f32 	%f5964, %f5924;
	mov.f32 	%f5965, %f5924;
	mov.f32 	%f5966, %f5924;
	mov.f32 	%f5967, %f5924;
	mov.f32 	%f5968, %f5924;
	mov.f32 	%f5969, %f5924;
	mov.f32 	%f5970, %f5924;
	mov.f32 	%f5971, %f5924;
	mov.f32 	%f5972, %f5924;
	mov.f32 	%f5973, %f5924;
	mov.f32 	%f5974, %f5924;
	mov.f32 	%f5975, %f5924;
	mov.f32 	%f5976, %f5924;
	mov.f32 	%f5977, %f5924;
	mov.f32 	%f5978, %f5924;
	mov.f32 	%f5979, %f5924;
	mov.f32 	%f5980, %f5924;
	mov.f32 	%f5981, %f5924;
	mov.f32 	%f5982, %f5924;
	mov.f32 	%f5983, %f5924;
	mov.f32 	%f5984, %f5924;
	mov.f32 	%f5985, %f5924;
	mov.f32 	%f5986, %f5924;
	mov.f32 	%f5987, %f5924;
	mov.u32 	%r1730, %r293;
	mov.f32 	%f5917, %f5916;
	mov.f32 	%f5918, %f5916;
	mov.f32 	%f5919, %f5916;
	mov.f32 	%f6061, %f6060;
	mov.f32 	%f6062, %f6060;
	mov.f32 	%f6063, %f6060;
	bra.uni 	$L__BB0_2;
$L__BB0_28:                             //   in Loop: Header=BB0_2 Depth=1
	add.s32 	%r192, %r778, %r49;
	add.s32 	%r193, %r778, %r50;
	add.s32 	%r194, %r778, %r51;
	add.s32 	%r195, %r778, %r52;
	add.s32 	%r196, %r778, %r53;
	add.s32 	%r197, %r778, %r54;
	add.s32 	%r198, %r778, %r55;
	.loc	1 202 28                        // prefix_prefill.py:202:28
	add.s32 	%r837, %r1728, 48;
	add.s32 	%r838, %r1728, 49;
	add.s32 	%r839, %r1728, 50;
	add.s32 	%r840, %r1728, 51;
	add.s32 	%r841, %r1728, 52;
	add.s32 	%r842, %r1728, 53;
	add.s32 	%r843, %r1728, 54;
	.loc	1 202 50                        // prefix_prefill.py:202:50
	add.s32 	%r844, %r1728, 55;
	setp.lt.s32 	%p195, %r837, %r5;
	setp.lt.s32 	%p197, %r838, %r5;
	setp.lt.s32 	%p199, %r839, %r5;
	setp.lt.s32 	%p201, %r840, %r5;
	setp.lt.s32 	%p203, %r841, %r5;
	setp.lt.s32 	%p205, %r842, %r5;
	setp.lt.s32 	%p207, %r843, %r5;
	setp.lt.s32 	%p209, %r844, %r5;
	.loc	1 200 26                        // prefix_prefill.py:200:26
	add.s64 	%rd317, %rd136, %rd529;
	mul.wide.s32 	%rd326, %r192, 2;
	add.s64 	%rd318, %rd136, %rd326;
	mul.wide.s32 	%rd327, %r193, 2;
	add.s64 	%rd319, %rd136, %rd327;
	mul.wide.s32 	%rd328, %r194, 2;
	add.s64 	%rd320, %rd136, %rd328;
	mul.wide.s32 	%rd329, %r195, 2;
	add.s64 	%rd321, %rd136, %rd329;
	mul.wide.s32 	%rd330, %r196, 2;
	add.s64 	%rd322, %rd136, %rd330;
	mul.wide.s32 	%rd331, %r197, 2;
	add.s64 	%rd323, %rd136, %rd331;
	mul.wide.s32 	%rd332, %r198, 2;
	add.s64 	%rd324, %rd136, %rd332;
	.loc	1 200 16                        // prefix_prefill.py:200:16
	// begin inline asm
	mov.u16 %rs145, 0x0;
	@%p195 ld.global.b16 { %rs145 }, [ %rd317 + 0 ];
	@!%p195 mov.u16 %rs145, %rs194;
	// end inline asm
	// begin inline asm
	mov.u16 %rs147, 0x0;
	@%p197 ld.global.b16 { %rs147 }, [ %rd318 + 0 ];
	@!%p197 mov.u16 %rs147, %rs194;
	// end inline asm
	// begin inline asm
	mov.u16 %rs149, 0x0;
	@%p199 ld.global.b16 { %rs149 }, [ %rd319 + 0 ];
	@!%p199 mov.u16 %rs149, %rs194;
	// end inline asm
	// begin inline asm
	mov.u16 %rs151, 0x0;
	@%p201 ld.global.b16 { %rs151 }, [ %rd320 + 0 ];
	@!%p201 mov.u16 %rs151, %rs194;
	// end inline asm
	// begin inline asm
	mov.u16 %rs153, 0x0;
	@%p203 ld.global.b16 { %rs153 }, [ %rd321 + 0 ];
	@!%p203 mov.u16 %rs153, %rs194;
	// end inline asm
	// begin inline asm
	mov.u16 %rs155, 0x0;
	@%p205 ld.global.b16 { %rs155 }, [ %rd322 + 0 ];
	@!%p205 mov.u16 %rs155, %rs194;
	// end inline asm
	// begin inline asm
	mov.u16 %rs157, 0x0;
	@%p207 ld.global.b16 { %rs157 }, [ %rd323 + 0 ];
	@!%p207 mov.u16 %rs157, %rs194;
	// end inline asm
	// begin inline asm
	mov.u16 %rs159, 0x0;
	@%p209 ld.global.b16 { %rs159 }, [ %rd324 + 0 ];
	@!%p209 mov.u16 %rs159, %rs194;
	// end inline asm
	mov.b32 	%r1759, {%rs145, %rs147};
	mov.b32 	%r1760, {%rs149, %rs151};
	mov.b32 	%r1761, {%rs153, %rs155};
	mov.b32 	%r1762, {%rs157, %rs159};
$L__BB0_30:                             //   in Loop: Header=BB0_2 Depth=1
	.loc	1 197 11                        // prefix_prefill.py:197:11
	bar.sync 	0;
	st.shared.v4.b32 	[%r62], {%r1759, %r1760, %r1761, %r1762};
	.loc	1 211 17                        // prefix_prefill.py:211:17
	mov.b32 	%r849, %f3124;
	// begin inline asm
	cvt.rn.bf16.f32 %rs161, %r849;
	// end inline asm
	mov.b32 	%r850, %f3126;
	// begin inline asm
	cvt.rn.bf16.f32 %rs162, %r850;
	// end inline asm
	mov.b32 	%r851, %f3128;
	// begin inline asm
	cvt.rn.bf16.f32 %rs163, %r851;
	// end inline asm
	mov.b32 	%r852, %f3130;
	// begin inline asm
	cvt.rn.bf16.f32 %rs164, %r852;
	// end inline asm
	mov.b32 	%r853, %f3132;
	// begin inline asm
	cvt.rn.bf16.f32 %rs165, %r853;
	// end inline asm
	mov.b32 	%r854, %f3134;
	// begin inline asm
	cvt.rn.bf16.f32 %rs166, %r854;
	// end inline asm
	mov.b32 	%r855, %f3136;
	// begin inline asm
	cvt.rn.bf16.f32 %rs167, %r855;
	// end inline asm
	mov.b32 	%r856, %f3138;
	// begin inline asm
	cvt.rn.bf16.f32 %rs168, %r856;
	// end inline asm
	mov.b32 	%r857, %f3140;
	// begin inline asm
	cvt.rn.bf16.f32 %rs169, %r857;
	// end inline asm
	mov.b32 	%r858, %f3142;
	// begin inline asm
	cvt.rn.bf16.f32 %rs170, %r858;
	// end inline asm
	mov.b32 	%r859, %f3144;
	// begin inline asm
	cvt.rn.bf16.f32 %rs171, %r859;
	// end inline asm
	mov.b32 	%r860, %f3146;
	// begin inline asm
	cvt.rn.bf16.f32 %rs172, %r860;
	// end inline asm
	mov.b32 	%r861, %f3148;
	// begin inline asm
	cvt.rn.bf16.f32 %rs173, %r861;
	// end inline asm
	mov.b32 	%r862, %f3150;
	// begin inline asm
	cvt.rn.bf16.f32 %rs174, %r862;
	// end inline asm
	mov.b32 	%r863, %f3152;
	// begin inline asm
	cvt.rn.bf16.f32 %rs175, %r863;
	// end inline asm
	mov.b32 	%r864, %f3154;
	// begin inline asm
	cvt.rn.bf16.f32 %rs176, %r864;
	// end inline asm
	.loc	1 213 24                        // prefix_prefill.py:213:24
	// begin inline asm
	fence.proxy.async.shared::cta;
	// end inline asm
	bar.sync 	0;
	mov.b32 	%r873, {%rs161, %rs162};
	mov.b32 	%r874, {%rs163, %rs164};
	mov.b32 	%r875, {%rs165, %rs166};
	mov.b32 	%r876, {%rs167, %rs168};
	mov.b32 	%r877, {%rs169, %rs170};
	mov.b32 	%r878, {%rs171, %rs172};
	mov.b32 	%r879, {%rs173, %rs174};
	mov.b32 	%r880, {%rs175, %rs176};
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f5924,%f5925,%f5926,%f5927,%f5928,%f5929,%f5930,%f5931,%f5932,%f5933,%f5934,%f5935,%f5936,%f5937,%f5938,%f5939,%f5940,%f5941,%f5942,%f5943,%f5944,%f5945,%f5946,%f5947,%f5948,%f5949,%f5950,%f5951,%f5952,%f5953,%f5954,%f5955}, {%r873,%r874,%r875,%r876}, %rd14, %p437, 1, 1, 0;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f5956,%f5957,%f5958,%f5959,%f5960,%f5961,%f5962,%f5963,%f5964,%f5965,%f5966,%f5967,%f5968,%f5969,%f5970,%f5971,%f5972,%f5973,%f5974,%f5975,%f5976,%f5977,%f5978,%f5979,%f5980,%f5981,%f5982,%f5983,%f5984,%f5985,%f5986,%f5987}, {%r877,%r878,%r879,%r880}, %rd14, %p437, 1, 1, 0;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	// begin inline asm
	// wait for regs: %f5924,%f5925,%f5926,%f5927,%f5928,%f5929,%f5930,%f5931,%f5932,%f5933,%f5934,%f5935,%f5936,%f5937,%f5938,%f5939,%f5940,%f5941,%f5942,%f5943,%f5944,%f5945,%f5946,%f5947,%f5948,%f5949,%f5950,%f5951,%f5952,%f5953,%f5954,%f5955,%f5956,%f5957,%f5958,%f5959,%f5960,%f5961,%f5962,%f5963,%f5964,%f5965,%f5966,%f5967,%f5968,%f5969,%f5970,%f5971,%f5972,%f5973,%f5974,%f5975,%f5976,%f5977,%f5978,%f5979,%f5980,%f5981,%f5982,%f5983,%f5984,%f5985,%f5986,%f5987
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	1 215 28                        // prefix_prefill.py:215:28
	fma.rn.f32 	%f6060, %f633, %f3156, %f657;
	fma.rn.f32 	%f6061, %f634, %f3158, %f658;
	fma.rn.f32 	%f6062, %f635, %f3160, %f659;
	fma.rn.f32 	%f6063, %f636, %f3162, %f660;
	.loc	1 135 28                        // prefix_prefill.py:135:28
	add.s64 	%rd537, %rd537, 16;
	setp.lt.s32 	%p213, %r1730, %r1763;
	@%p213 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_4;
$L__BB0_2:                              // =>This Inner Loop Header: Depth=1
	.loc	1 138 21                        // prefix_prefill.py:138:21
	// begin inline asm
	mov.u32 %r435, 0x0;
	@%p437 ld.global.b32 { %r435 }, [ %rd537 + 0 ];
	// end inline asm
	.loc	1 144 24                        // prefix_prefill.py:144:24
	add.s32 	%r72, %r42, %r1730;
	add.s32 	%r73, %r72, 1;
	add.s32 	%r74, %r72, 8;
	.loc	1 144 12                        // prefix_prefill.py:144:12
	add.s32 	%r75, %r72, 9;
	mad.lo.s32 	%r76, %r435, %r281, %r63;
	.loc	1 150 17                        // prefix_prefill.py:150:17
	mad.lo.s32 	%r436, %r435, %r282, %r1718;
	.loc	1 151 17                        // prefix_prefill.py:151:17
	add.s32 	%r77, %r436, %r9;
	.loc	1 153 34                        // prefix_prefill.py:153:34
	add.s32 	%r85, %r1730, 16;
	setp.le.s32 	%p46, %r85, %r5;
	add.s32 	%r1729, %r16, %r1730;
	mul.wide.s32 	%rd536, %r76, 2;
	@%p46 bra 	$L__BB0_8;
// %bb.3:                               //   in Loop: Header=BB0_2 Depth=1
	.loc	1 158 50                        // prefix_prefill.py:158:50
	setp.lt.s32 	%p48, %r1729, %r5;
	.loc	1 156 26                        // prefix_prefill.py:156:26
	add.s64 	%rd170, %rd135, %rd536;
	mov.b32 	%r445, 0;
	.loc	1 156 16                        // prefix_prefill.py:156:16
	// begin inline asm
	mov.u32 %r1731, 0x0;
	mov.u32 %r1732, 0x0;
	mov.u32 %r1733, 0x0;
	mov.u32 %r1734, 0x0;
	@%p48 ld.global.v4.b32 { %r1731, %r1732, %r1733, %r1734 }, [ %rd170 + 0 ];
	@!%p48 mov.u32 %r1731, %r445;
	@!%p48 mov.u32 %r1732, %r445;
	@!%p48 mov.u32 %r1733, %r445;
	@!%p48 mov.u32 %r1734, %r445;
	// end inline asm
	.loc	1 153 11                        // prefix_prefill.py:153:11
	bra.uni 	$L__BB0_9;
$L__BB0_8:                              //   in Loop: Header=BB0_2 Depth=1
	.loc	1 161 39                        // prefix_prefill.py:161:39
	add.s64 	%rd168, %rd135, %rd536;
	.loc	1 161 29                        // prefix_prefill.py:161:29
	// begin inline asm
	mov.u32 %r1731, 0x0;
	mov.u32 %r1732, 0x0;
	mov.u32 %r1733, 0x0;
	mov.u32 %r1734, 0x0;
	@%p437 ld.global.v4.b32 { %r1731, %r1732, %r1733, %r1734 }, [ %rd168 + 0 ];
	// end inline asm
$L__BB0_9:                              //   in Loop: Header=BB0_2 Depth=1
	.loc	1 153 11                        // prefix_prefill.py:153:11
	bar.sync 	0;
	st.shared.v4.b32 	[%r58], {%r1731, %r1732, %r1733, %r1734};
	.loc	1 169 23                        // prefix_prefill.py:169:23
	// begin inline asm
	fence.proxy.async.shared::cta;
	// end inline asm
	bar.sync 	0;
	shfl.sync.idx.b32	%r486, %r1719, 0, 31, -1;
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	shl.b32 	%r487, %r486, 7;
	and.b32  	%r488, %r487, 384;
	cvt.u64.u32 	%rd188, %r488;
	add.s64 	%rd172, %rd2, %rd188;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f1356,%f1357,%f1358,%f1359,%f1360,%f1361,%f1362,%f1363}, %rd172, %rd3, 0, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd174, %rd4, %rd188;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f1356,%f1357,%f1358,%f1359,%f1360,%f1361,%f1362,%f1363}, %rd174, %rd5, %p437, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd176, %rd6, %rd188;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f1356,%f1357,%f1358,%f1359,%f1360,%f1361,%f1362,%f1363}, %rd176, %rd7, %p437, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd178, %rd8, %rd188;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f1356,%f1357,%f1358,%f1359,%f1360,%f1361,%f1362,%f1363}, %rd178, %rd9, %p437, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd180, %rd10, %rd188;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f1412,%f1413,%f1414,%f1415,%f1416,%f1417,%f1418,%f1419}, %rd180, %rd3, 0, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd182, %rd11, %rd188;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f1412,%f1413,%f1414,%f1415,%f1416,%f1417,%f1418,%f1419}, %rd182, %rd5, %p437, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd184, %rd12, %rd188;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f1412,%f1413,%f1414,%f1415,%f1416,%f1417,%f1418,%f1419}, %rd184, %rd7, %p437, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd186, %rd13, %rd188;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f1412,%f1413,%f1414,%f1415,%f1416,%f1417,%f1418,%f1419}, %rd186, %rd9, %p437, 1, 1, 0, 0;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	// begin inline asm
	// wait for regs: %f1356,%f1357,%f1358,%f1359,%f1360,%f1361,%f1362,%f1363,%f1412,%f1413,%f1414,%f1415,%f1416,%f1417,%f1418,%f1419
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	1 170 55                        // prefix_prefill.py:170:55
	setp.lt.s32 	%p76, %r72, %r5;
	setp.lt.s32 	%p77, %r73, %r5;
	setp.lt.s32 	%p78, %r74, %r5;
	setp.lt.s32 	%p79, %r75, %r5;
	.loc	1 171 22                        // prefix_prefill.py:171:22
	selp.f32 	%f1516, %f1356, 0fFF800000, %p76;
	selp.f32 	%f1517, %f1357, 0fFF800000, %p77;
	selp.f32 	%f1518, %f1358, 0fFF800000, %p76;
	selp.f32 	%f1519, %f1359, 0fFF800000, %p77;
	selp.f32 	%f1520, %f1360, 0fFF800000, %p78;
	selp.f32 	%f1521, %f1361, 0fFF800000, %p79;
	selp.f32 	%f1522, %f1362, 0fFF800000, %p78;
	selp.f32 	%f1523, %f1363, 0fFF800000, %p79;
	selp.f32 	%f1524, %f1412, 0fFF800000, %p76;
	selp.f32 	%f1525, %f1413, 0fFF800000, %p77;
	selp.f32 	%f1526, %f1414, 0fFF800000, %p76;
	selp.f32 	%f1527, %f1415, 0fFF800000, %p77;
	selp.f32 	%f1528, %f1416, 0fFF800000, %p78;
	selp.f32 	%f1529, %f1417, 0fFF800000, %p79;
	selp.f32 	%f1530, %f1418, 0fFF800000, %p78;
	selp.f32 	%f1531, %f1419, 0fFF800000, %p79;
	.loc	1 172 14                        // prefix_prefill.py:172:14
	mul.f32 	%f1532, %f1313, %f1516;
	mul.f32 	%f1533, %f1313, %f1517;
	mul.f32 	%f1534, %f1313, %f1518;
	mul.f32 	%f1535, %f1313, %f1519;
	mul.f32 	%f1536, %f1313, %f1520;
	mul.f32 	%f1537, %f1313, %f1521;
	mul.f32 	%f1538, %f1313, %f1522;
	mul.f32 	%f1539, %f1313, %f1523;
	mul.f32 	%f1540, %f1313, %f1524;
	mul.f32 	%f1541, %f1313, %f1525;
	mul.f32 	%f1542, %f1313, %f1526;
	mul.f32 	%f1543, %f1313, %f1527;
	mul.f32 	%f1544, %f1313, %f1528;
	mul.f32 	%f1545, %f1313, %f1529;
	mul.f32 	%f1546, %f1313, %f1530;
	mul.f32 	%f1547, %f1313, %f1531;
$L__tmp1:
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f1548, %f1532, %f1533;
	max.f32 	%f1549, %f1534, %f1535;
	max.f32 	%f1550, %f1548, %f1536;
	max.f32 	%f1551, %f1550, %f1537;
	max.f32 	%f1552, %f1549, %f1538;
	max.f32 	%f1553, %f1552, %f1539;
	max.f32 	%f1554, %f1540, %f1541;
	max.f32 	%f1555, %f1542, %f1543;
	max.f32 	%f1556, %f1554, %f1544;
	max.f32 	%f1557, %f1556, %f1545;
	max.f32 	%f1558, %f1555, %f1546;
	max.f32 	%f1559, %f1558, %f1547;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r489, %f1551;
	shfl.sync.bfly.b32	%r490, %r489, 2, 31, -1;
	mov.b32 	%f1560, %r490;
	mov.b32 	%r491, %f1553;
	mov.b32 	%r492, %f1557;
	mov.b32 	%r493, %f1559;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f1561, %f1551, %f1560;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r494, %f1561;
	shfl.sync.bfly.b32	%r495, %r494, 1, 31, -1;
	shfl.sync.bfly.b32	%r496, %r491, 2, 31, -1;
	mov.b32 	%f1562, %r496;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f1563, %f1553, %f1562;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r497, %f1563;
	shfl.sync.bfly.b32	%r498, %r497, 1, 31, -1;
	shfl.sync.bfly.b32	%r499, %r492, 2, 31, -1;
	mov.b32 	%f1564, %r499;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f1565, %f1557, %f1564;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r500, %f1565;
	shfl.sync.bfly.b32	%r501, %r500, 1, 31, -1;
	shfl.sync.bfly.b32	%r502, %r493, 2, 31, -1;
	mov.b32 	%f1566, %r502;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f1567, %f1559, %f1566;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r503, %f1567;
	shfl.sync.bfly.b32	%r504, %r503, 1, 31, -1;
	mov.b32 	%f1568, %r504;
	mov.b32 	%f1569, %r501;
	mov.b32 	%f1570, %r498;
	mov.b32 	%f1571, %r495;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f1572, %f1561, %f1571;
	max.f32 	%f1573, %f1563, %f1570;
	max.f32 	%f1574, %f1565, %f1569;
	max.f32 	%f1575, %f1567, %f1568;
$L__tmp2:
	.loc	1 190 31                        // prefix_prefill.py:190:31
	max.f32 	%f148, %f5919, %f1575;
	max.f32 	%f147, %f5918, %f1574;
	max.f32 	%f146, %f5917, %f1573;
	max.f32 	%f145, %f5916, %f1572;
	.loc	1 191 24                        // prefix_prefill.py:191:24
	neg.f32 	%f1576, %f145;
	fma.rn.f32 	%f1577, %f1313, %f1516, %f1576;
	fma.rn.f32 	%f1578, %f1313, %f1517, %f1576;
	neg.f32 	%f1579, %f146;
	fma.rn.f32 	%f1580, %f1313, %f1518, %f1579;
	fma.rn.f32 	%f1581, %f1313, %f1519, %f1579;
	fma.rn.f32 	%f1582, %f1313, %f1520, %f1576;
	fma.rn.f32 	%f1583, %f1313, %f1521, %f1576;
	fma.rn.f32 	%f1584, %f1313, %f1522, %f1579;
	fma.rn.f32 	%f1585, %f1313, %f1523, %f1579;
	neg.f32 	%f1586, %f147;
	fma.rn.f32 	%f1587, %f1313, %f1524, %f1586;
	fma.rn.f32 	%f1588, %f1313, %f1525, %f1586;
	neg.f32 	%f1589, %f148;
	fma.rn.f32 	%f1590, %f1313, %f1526, %f1589;
	fma.rn.f32 	%f1591, %f1313, %f1527, %f1589;
	fma.rn.f32 	%f1592, %f1313, %f1528, %f1586;
	fma.rn.f32 	%f1593, %f1313, %f1529, %f1586;
	fma.rn.f32 	%f1594, %f1313, %f1530, %f1589;
	fma.rn.f32 	%f1595, %f1313, %f1531, %f1589;
	.loc	1 191 19                        // prefix_prefill.py:191:19
	mul.f32 	%f1477, %f1577, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1476, %f1477;
	// end inline asm
	mul.f32 	%f1479, %f1578, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1478, %f1479;
	// end inline asm
	mul.f32 	%f1481, %f1580, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1480, %f1481;
	// end inline asm
	mul.f32 	%f1483, %f1581, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1482, %f1483;
	// end inline asm
	mul.f32 	%f1485, %f1582, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1484, %f1485;
	// end inline asm
	mul.f32 	%f1487, %f1583, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1486, %f1487;
	// end inline asm
	mul.f32 	%f1489, %f1584, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1488, %f1489;
	// end inline asm
	mul.f32 	%f1491, %f1585, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1490, %f1491;
	// end inline asm
	mul.f32 	%f1493, %f1587, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1492, %f1493;
	// end inline asm
	mul.f32 	%f1495, %f1588, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1494, %f1495;
	// end inline asm
	mul.f32 	%f1497, %f1590, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1496, %f1497;
	// end inline asm
	mul.f32 	%f1499, %f1591, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1498, %f1499;
	// end inline asm
	mul.f32 	%f1501, %f1592, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1500, %f1501;
	// end inline asm
	mul.f32 	%f1503, %f1593, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1502, %f1503;
	// end inline asm
	mul.f32 	%f1505, %f1594, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1504, %f1505;
	// end inline asm
	mul.f32 	%f1507, %f1595, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1506, %f1507;
	// end inline asm
$L__tmp3:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f1596, %f1476, %f1478;
	add.f32 	%f1597, %f1480, %f1482;
	add.f32 	%f1598, %f1596, %f1484;
	add.f32 	%f1599, %f1598, %f1486;
	add.f32 	%f1600, %f1597, %f1488;
	add.f32 	%f1601, %f1600, %f1490;
	add.f32 	%f1602, %f1492, %f1494;
	add.f32 	%f1603, %f1496, %f1498;
	add.f32 	%f1604, %f1602, %f1500;
	add.f32 	%f1605, %f1604, %f1502;
	add.f32 	%f1606, %f1603, %f1504;
	add.f32 	%f1607, %f1606, %f1506;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r505, %f1599;
	shfl.sync.bfly.b32	%r506, %r505, 2, 31, -1;
	mov.b32 	%f1608, %r506;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f1609, %f1599, %f1608;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r507, %f1609;
	shfl.sync.bfly.b32	%r508, %r507, 1, 31, -1;
	mov.b32 	%r509, %f1601;
	shfl.sync.bfly.b32	%r510, %r509, 2, 31, -1;
	mov.b32 	%f1610, %r510;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f1611, %f1601, %f1610;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r511, %f1611;
	shfl.sync.bfly.b32	%r512, %r511, 1, 31, -1;
	mov.b32 	%r513, %f1605;
	shfl.sync.bfly.b32	%r514, %r513, 2, 31, -1;
	mov.b32 	%f1612, %r514;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f1613, %f1605, %f1612;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r515, %f1613;
	shfl.sync.bfly.b32	%r516, %r515, 1, 31, -1;
	mov.b32 	%r517, %f1607;
	shfl.sync.bfly.b32	%r518, %r517, 2, 31, -1;
	mov.b32 	%f1614, %r518;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f1615, %f1607, %f1614;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r519, %f1615;
	shfl.sync.bfly.b32	%r520, %r519, 1, 31, -1;
$L__tmp4:
	.loc	1 193 29                        // prefix_prefill.py:193:29
	sub.f32 	%f1620, %f5919, %f148;
	sub.f32 	%f1621, %f5918, %f147;
	sub.f32 	%f1622, %f5917, %f146;
	sub.f32 	%f1623, %f5916, %f145;
	.loc	1 193 23                        // prefix_prefill.py:193:23
	mul.f32 	%f1509, %f1623, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1508, %f1509;
	// end inline asm
	mul.f32 	%f1511, %f1622, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1510, %f1511;
	// end inline asm
	mul.f32 	%f1513, %f1621, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1512, %f1513;
	// end inline asm
	mul.f32 	%f1515, %f1620, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1514, %f1515;
	// end inline asm
	.loc	1 194 20                        // prefix_prefill.py:194:20
	bar.sync 	0;
	mov.b32 	%r451, %f1508;
	// begin inline asm
	@%p437 st.shared.b32 [ %r60 + 0 ], %r451;
	// end inline asm
	// begin inline asm
	@%p437 st.shared.b32 [ %r60 + 0 ], %r451;
	// end inline asm
	mov.b32 	%r455, %f1510;
	// begin inline asm
	@%p437 st.shared.b32 [ %r61 + 0 ], %r455;
	// end inline asm
	// begin inline asm
	@%p437 st.shared.b32 [ %r61 + 0 ], %r455;
	// end inline asm
	// begin inline asm
	@%p437 st.shared.b32 [ %r60 + 0 ], %r451;
	// end inline asm
	// begin inline asm
	@%p437 st.shared.b32 [ %r60 + 0 ], %r451;
	// end inline asm
	// begin inline asm
	@%p437 st.shared.b32 [ %r61 + 0 ], %r455;
	// end inline asm
	// begin inline asm
	@%p437 st.shared.b32 [ %r61 + 0 ], %r455;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f1624, [%r60];
	ld.shared.f32 	%f1625, [%r61];
	bar.sync 	0;
	mov.b32 	%r467, %f1512;
	// begin inline asm
	@%p437 st.shared.b32 [ %r60 + 0 ], %r467;
	// end inline asm
	// begin inline asm
	@%p437 st.shared.b32 [ %r60 + 0 ], %r467;
	// end inline asm
	mov.b32 	%r471, %f1514;
	// begin inline asm
	@%p437 st.shared.b32 [ %r61 + 0 ], %r471;
	// end inline asm
	// begin inline asm
	@%p437 st.shared.b32 [ %r61 + 0 ], %r471;
	// end inline asm
	// begin inline asm
	@%p437 st.shared.b32 [ %r60 + 0 ], %r467;
	// end inline asm
	// begin inline asm
	@%p437 st.shared.b32 [ %r60 + 0 ], %r467;
	// end inline asm
	// begin inline asm
	@%p437 st.shared.b32 [ %r61 + 0 ], %r471;
	// end inline asm
	// begin inline asm
	@%p437 st.shared.b32 [ %r61 + 0 ], %r471;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f1626, [%r60];
	ld.shared.f32 	%f1627, [%r61];
	mul.f32 	%f1756, %f5924, %f1624;
	mul.f32 	%f1757, %f5925, %f1624;
	mul.f32 	%f1758, %f5926, %f1625;
	mul.f32 	%f1759, %f5927, %f1625;
	mul.f32 	%f1760, %f5928, %f1624;
	mul.f32 	%f1761, %f5929, %f1624;
	mul.f32 	%f1762, %f5930, %f1625;
	mul.f32 	%f1763, %f5931, %f1625;
	mul.f32 	%f1764, %f5932, %f1624;
	mul.f32 	%f1765, %f5933, %f1624;
	mul.f32 	%f1766, %f5934, %f1625;
	mul.f32 	%f1767, %f5935, %f1625;
	mul.f32 	%f1768, %f5936, %f1624;
	mul.f32 	%f1769, %f5937, %f1624;
	mul.f32 	%f1770, %f5938, %f1625;
	mul.f32 	%f1771, %f5939, %f1625;
	mul.f32 	%f1772, %f5940, %f1624;
	mul.f32 	%f1773, %f5941, %f1624;
	mul.f32 	%f1774, %f5942, %f1625;
	mul.f32 	%f1775, %f5943, %f1625;
	mul.f32 	%f1776, %f5944, %f1624;
	mul.f32 	%f1777, %f5945, %f1624;
	mul.f32 	%f1778, %f5946, %f1625;
	mul.f32 	%f1779, %f5947, %f1625;
	mul.f32 	%f1780, %f5948, %f1624;
	mul.f32 	%f1781, %f5949, %f1624;
	mul.f32 	%f1782, %f5950, %f1625;
	mul.f32 	%f1783, %f5951, %f1625;
	mul.f32 	%f1784, %f5952, %f1624;
	mul.f32 	%f1785, %f5953, %f1624;
	mul.f32 	%f1786, %f5954, %f1625;
	mul.f32 	%f1787, %f5955, %f1625;
	mul.f32 	%f1788, %f5956, %f1626;
	mul.f32 	%f1789, %f5957, %f1626;
	mul.f32 	%f1790, %f5958, %f1627;
	mul.f32 	%f1791, %f5959, %f1627;
	mul.f32 	%f1792, %f5960, %f1626;
	mul.f32 	%f1793, %f5961, %f1626;
	mul.f32 	%f1794, %f5962, %f1627;
	mul.f32 	%f1795, %f5963, %f1627;
	mul.f32 	%f1796, %f5964, %f1626;
	mul.f32 	%f1797, %f5965, %f1626;
	mul.f32 	%f1798, %f5966, %f1627;
	mul.f32 	%f1799, %f5967, %f1627;
	mul.f32 	%f1800, %f5968, %f1626;
	mul.f32 	%f1801, %f5969, %f1626;
	mul.f32 	%f1802, %f5970, %f1627;
	mul.f32 	%f1803, %f5971, %f1627;
	mul.f32 	%f1804, %f5972, %f1626;
	mul.f32 	%f1805, %f5973, %f1626;
	mul.f32 	%f1806, %f5974, %f1627;
	mul.f32 	%f1807, %f5975, %f1627;
	mul.f32 	%f1808, %f5976, %f1626;
	mul.f32 	%f1809, %f5977, %f1626;
	mul.f32 	%f1810, %f5978, %f1627;
	mul.f32 	%f1811, %f5979, %f1627;
	mul.f32 	%f1812, %f5980, %f1626;
	mul.f32 	%f1813, %f5981, %f1626;
	mul.f32 	%f1814, %f5982, %f1627;
	mul.f32 	%f1815, %f5983, %f1627;
	mul.f32 	%f1816, %f5984, %f1626;
	mul.f32 	%f1817, %f5985, %f1626;
	mul.f32 	%f1818, %f5986, %f1627;
	mul.f32 	%f1819, %f5987, %f1627;
	add.s32 	%r1728, %r9, %r1730;
	mul.wide.s32 	%rd535, %r77, 2;
	.loc	1 197 11                        // prefix_prefill.py:197:11
	@%p46 bra 	$L__BB0_11;
// %bb.10:                              //   in Loop: Header=BB0_2 Depth=1
	.loc	1 0 0                           // prefix_prefill.py:0:0
	add.s32 	%r78, %r436, %r49;
	add.s32 	%r79, %r436, %r50;
	add.s32 	%r80, %r436, %r51;
	add.s32 	%r81, %r436, %r52;
	add.s32 	%r82, %r436, %r53;
	add.s32 	%r83, %r436, %r54;
	add.s32 	%r84, %r436, %r55;
	.loc	1 202 28                        // prefix_prefill.py:202:28
	add.s32 	%r526, %r1728, 1;
	add.s32 	%r527, %r1728, 2;
	add.s32 	%r528, %r1728, 3;
	add.s32 	%r529, %r1728, 4;
	add.s32 	%r530, %r1728, 5;
	add.s32 	%r531, %r1728, 6;
	.loc	1 202 50                        // prefix_prefill.py:202:50
	add.s32 	%r532, %r1728, 7;
	setp.lt.s32 	%p81, %r1728, %r5;
	setp.lt.s32 	%p83, %r526, %r5;
	setp.lt.s32 	%p85, %r527, %r5;
	setp.lt.s32 	%p87, %r528, %r5;
	setp.lt.s32 	%p89, %r529, %r5;
	setp.lt.s32 	%p91, %r530, %r5;
	setp.lt.s32 	%p93, %r531, %r5;
	setp.lt.s32 	%p95, %r532, %r5;
	.loc	1 200 26                        // prefix_prefill.py:200:26
	add.s64 	%rd191, %rd136, %rd535;
	mul.wide.s32 	%rd200, %r78, 2;
	add.s64 	%rd192, %rd136, %rd200;
	mul.wide.s32 	%rd201, %r79, 2;
	add.s64 	%rd193, %rd136, %rd201;
	mul.wide.s32 	%rd202, %r80, 2;
	add.s64 	%rd194, %rd136, %rd202;
	mul.wide.s32 	%rd203, %r81, 2;
	add.s64 	%rd195, %rd136, %rd203;
	mul.wide.s32 	%rd204, %r82, 2;
	add.s64 	%rd196, %rd136, %rd204;
	mul.wide.s32 	%rd205, %r83, 2;
	add.s64 	%rd197, %rd136, %rd205;
	mul.wide.s32 	%rd206, %r84, 2;
	add.s64 	%rd198, %rd136, %rd206;
	.loc	1 200 16                        // prefix_prefill.py:200:16
	// begin inline asm
	mov.u16 %rs1, 0x0;
	@%p81 ld.global.b16 { %rs1 }, [ %rd191 + 0 ];
	@!%p81 mov.u16 %rs1, %rs194;
	// end inline asm
	// begin inline asm
	mov.u16 %rs3, 0x0;
	@%p83 ld.global.b16 { %rs3 }, [ %rd192 + 0 ];
	@!%p83 mov.u16 %rs3, %rs194;
	// end inline asm
	// begin inline asm
	mov.u16 %rs5, 0x0;
	@%p85 ld.global.b16 { %rs5 }, [ %rd193 + 0 ];
	@!%p85 mov.u16 %rs5, %rs194;
	// end inline asm
	// begin inline asm
	mov.u16 %rs7, 0x0;
	@%p87 ld.global.b16 { %rs7 }, [ %rd194 + 0 ];
	@!%p87 mov.u16 %rs7, %rs194;
	// end inline asm
	// begin inline asm
	mov.u16 %rs9, 0x0;
	@%p89 ld.global.b16 { %rs9 }, [ %rd195 + 0 ];
	@!%p89 mov.u16 %rs9, %rs194;
	// end inline asm
	// begin inline asm
	mov.u16 %rs11, 0x0;
	@%p91 ld.global.b16 { %rs11 }, [ %rd196 + 0 ];
	@!%p91 mov.u16 %rs11, %rs194;
	// end inline asm
	// begin inline asm
	mov.u16 %rs13, 0x0;
	@%p93 ld.global.b16 { %rs13 }, [ %rd197 + 0 ];
	@!%p93 mov.u16 %rs13, %rs194;
	// end inline asm
	// begin inline asm
	mov.u16 %rs15, 0x0;
	@%p95 ld.global.b16 { %rs15 }, [ %rd198 + 0 ];
	@!%p95 mov.u16 %rs15, %rs194;
	// end inline asm
	mov.b32 	%r1735, {%rs1, %rs3};
	mov.b32 	%r1736, {%rs5, %rs7};
	mov.b32 	%r1737, {%rs9, %rs11};
	mov.b32 	%r1738, {%rs13, %rs15};
	.loc	1 197 11                        // prefix_prefill.py:197:11
	bra.uni 	$L__BB0_12;
$L__BB0_11:                             //   in Loop: Header=BB0_2 Depth=1
	.loc	1 205 39                        // prefix_prefill.py:205:39
	add.s64 	%rd189, %rd136, %rd535;
	.loc	1 205 29                        // prefix_prefill.py:205:29
	// begin inline asm
	mov.u32 %r1735, 0x0;
	mov.u32 %r1736, 0x0;
	mov.u32 %r1737, 0x0;
	mov.u32 %r1738, 0x0;
	@%p437 ld.global.v4.b32 { %r1735, %r1736, %r1737, %r1738 }, [ %rd189 + 0 ];
	// end inline asm
$L__BB0_12:                             //   in Loop: Header=BB0_2 Depth=1
	.loc	1 197 11                        // prefix_prefill.py:197:11
	bar.sync 	0;
	st.shared.v4.b32 	[%r62], {%r1735, %r1736, %r1737, %r1738};
	.loc	1 211 17                        // prefix_prefill.py:211:17
	mov.b32 	%r537, %f1476;
	// begin inline asm
	cvt.rn.bf16.f32 %rs17, %r537;
	// end inline asm
	mov.b32 	%r538, %f1478;
	// begin inline asm
	cvt.rn.bf16.f32 %rs18, %r538;
	// end inline asm
	mov.b32 	%r539, %f1480;
	// begin inline asm
	cvt.rn.bf16.f32 %rs19, %r539;
	// end inline asm
	mov.b32 	%r540, %f1482;
	// begin inline asm
	cvt.rn.bf16.f32 %rs20, %r540;
	// end inline asm
	mov.b32 	%r541, %f1484;
	// begin inline asm
	cvt.rn.bf16.f32 %rs21, %r541;
	// end inline asm
	mov.b32 	%r542, %f1486;
	// begin inline asm
	cvt.rn.bf16.f32 %rs22, %r542;
	// end inline asm
	mov.b32 	%r543, %f1488;
	// begin inline asm
	cvt.rn.bf16.f32 %rs23, %r543;
	// end inline asm
	mov.b32 	%r544, %f1490;
	// begin inline asm
	cvt.rn.bf16.f32 %rs24, %r544;
	// end inline asm
	mov.b32 	%r545, %f1492;
	// begin inline asm
	cvt.rn.bf16.f32 %rs25, %r545;
	// end inline asm
	mov.b32 	%r546, %f1494;
	// begin inline asm
	cvt.rn.bf16.f32 %rs26, %r546;
	// end inline asm
	mov.b32 	%r547, %f1496;
	// begin inline asm
	cvt.rn.bf16.f32 %rs27, %r547;
	// end inline asm
	mov.b32 	%r548, %f1498;
	// begin inline asm
	cvt.rn.bf16.f32 %rs28, %r548;
	// end inline asm
	mov.b32 	%r549, %f1500;
	// begin inline asm
	cvt.rn.bf16.f32 %rs29, %r549;
	// end inline asm
	mov.b32 	%r550, %f1502;
	// begin inline asm
	cvt.rn.bf16.f32 %rs30, %r550;
	// end inline asm
	mov.b32 	%r551, %f1504;
	// begin inline asm
	cvt.rn.bf16.f32 %rs31, %r551;
	// end inline asm
	mov.b32 	%r552, %f1506;
	// begin inline asm
	cvt.rn.bf16.f32 %rs32, %r552;
	// end inline asm
	.loc	1 213 24                        // prefix_prefill.py:213:24
	// begin inline asm
	fence.proxy.async.shared::cta;
	// end inline asm
	bar.sync 	0;
	mov.b32 	%r562, {%rs17, %rs18};
	mov.b32 	%r563, {%rs19, %rs20};
	mov.b32 	%r564, {%rs21, %rs22};
	mov.b32 	%r565, {%rs23, %rs24};
	mov.b32 	%r566, {%rs25, %rs26};
	mov.b32 	%r567, {%rs27, %rs28};
	mov.b32 	%r568, {%rs29, %rs30};
	mov.b32 	%r569, {%rs31, %rs32};
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f1756,%f1757,%f1758,%f1759,%f1760,%f1761,%f1762,%f1763,%f1764,%f1765,%f1766,%f1767,%f1768,%f1769,%f1770,%f1771,%f1772,%f1773,%f1774,%f1775,%f1776,%f1777,%f1778,%f1779,%f1780,%f1781,%f1782,%f1783,%f1784,%f1785,%f1786,%f1787}, {%r562,%r563,%r564,%r565}, %rd14, %p437, 1, 1, 0;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f1788,%f1789,%f1790,%f1791,%f1792,%f1793,%f1794,%f1795,%f1796,%f1797,%f1798,%f1799,%f1800,%f1801,%f1802,%f1803,%f1804,%f1805,%f1806,%f1807,%f1808,%f1809,%f1810,%f1811,%f1812,%f1813,%f1814,%f1815,%f1816,%f1817,%f1818,%f1819}, {%r566,%r567,%r568,%r569}, %rd14, %p437, 1, 1, 0;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	// begin inline asm
	// wait for regs: %f1756,%f1757,%f1758,%f1759,%f1760,%f1761,%f1762,%f1763,%f1764,%f1765,%f1766,%f1767,%f1768,%f1769,%f1770,%f1771,%f1772,%f1773,%f1774,%f1775,%f1776,%f1777,%f1778,%f1779,%f1780,%f1781,%f1782,%f1783,%f1784,%f1785,%f1786,%f1787,%f1788,%f1789,%f1790,%f1791,%f1792,%f1793,%f1794,%f1795,%f1796,%f1797,%f1798,%f1799,%f1800,%f1801,%f1802,%f1803,%f1804,%f1805,%f1806,%f1807,%f1808,%f1809,%f1810,%f1811,%f1812,%f1813,%f1814,%f1815,%f1816,%f1817,%f1818,%f1819
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	1 138 21                        // prefix_prefill.py:138:21
	add.s64 	%rd209, %rd537, 4;
	// begin inline asm
	mov.u32 %r561, 0x0;
	@%p437 ld.global.b32 { %r561 }, [ %rd209 + 0 ];
	// end inline asm
	.loc	1 144 24                        // prefix_prefill.py:144:24
	add.s32 	%r110, %r72, 16;
	add.s32 	%r111, %r72, 17;
	add.s32 	%r112, %r72, 24;
	.loc	1 144 12                        // prefix_prefill.py:144:12
	add.s32 	%r113, %r72, 25;
	mad.lo.s32 	%r114, %r561, %r281, %r63;
	.loc	1 150 17                        // prefix_prefill.py:150:17
	mad.lo.s32 	%r570, %r561, %r282, %r1718;
	.loc	1 151 17                        // prefix_prefill.py:151:17
	add.s32 	%r115, %r570, %r9;
	.loc	1 153 34                        // prefix_prefill.py:153:34
	add.s32 	%r123, %r1730, 32;
	setp.le.s32 	%p100, %r123, %r5;
	mul.wide.s32 	%rd534, %r114, 2;
	.loc	1 153 11                        // prefix_prefill.py:153:11
	@%p100 bra 	$L__BB0_14;
// %bb.13:                              //   in Loop: Header=BB0_2 Depth=1
	.loc	1 158 50                        // prefix_prefill.py:158:50
	add.s32 	%r584, %r1729, 16;
	setp.lt.s32 	%p102, %r584, %r5;
	.loc	1 156 26                        // prefix_prefill.py:156:26
	add.s64 	%rd212, %rd135, %rd534;
	mov.b32 	%r579, 0;
	.loc	1 156 16                        // prefix_prefill.py:156:16
	// begin inline asm
	mov.u32 %r1739, 0x0;
	mov.u32 %r1740, 0x0;
	mov.u32 %r1741, 0x0;
	mov.u32 %r1742, 0x0;
	@%p102 ld.global.v4.b32 { %r1739, %r1740, %r1741, %r1742 }, [ %rd212 + 0 ];
	@!%p102 mov.u32 %r1739, %r579;
	@!%p102 mov.u32 %r1740, %r579;
	@!%p102 mov.u32 %r1741, %r579;
	@!%p102 mov.u32 %r1742, %r579;
	// end inline asm
	.loc	1 153 11                        // prefix_prefill.py:153:11
	bra.uni 	$L__BB0_15;
$L__BB0_14:                             //   in Loop: Header=BB0_2 Depth=1
	.loc	1 161 39                        // prefix_prefill.py:161:39
	add.s64 	%rd210, %rd135, %rd534;
	.loc	1 161 29                        // prefix_prefill.py:161:29
	// begin inline asm
	mov.u32 %r1739, 0x0;
	mov.u32 %r1740, 0x0;
	mov.u32 %r1741, 0x0;
	mov.u32 %r1742, 0x0;
	@%p437 ld.global.v4.b32 { %r1739, %r1740, %r1741, %r1742 }, [ %rd210 + 0 ];
	// end inline asm
$L__BB0_15:                             //   in Loop: Header=BB0_2 Depth=1
	.loc	1 0 0                           // prefix_prefill.py:0:0
	mov.b32 	%f1616, %r520;
	mov.b32 	%f1617, %r516;
	mov.b32 	%f1618, %r512;
	mov.b32 	%f1619, %r508;
	.loc	1 153 11                        // prefix_prefill.py:153:11
	bar.sync 	0;
	st.shared.v4.b32 	[%r58], {%r1739, %r1740, %r1741, %r1742};
	.loc	1 169 23                        // prefix_prefill.py:169:23
	// begin inline asm
	fence.proxy.async.shared::cta;
	// end inline asm
	bar.sync 	0;
	shfl.sync.idx.b32	%r589, %r1719, 0, 31, -1;
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	shl.b32 	%r590, %r589, 7;
	and.b32  	%r591, %r590, 384;
	cvt.u64.u32 	%rd230, %r591;
	add.s64 	%rd214, %rd2, %rd230;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f1908,%f1909,%f1910,%f1911,%f1912,%f1913,%f1914,%f1915}, %rd214, %rd3, 0, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd216, %rd4, %rd230;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f1908,%f1909,%f1910,%f1911,%f1912,%f1913,%f1914,%f1915}, %rd216, %rd5, %p437, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd218, %rd6, %rd230;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f1908,%f1909,%f1910,%f1911,%f1912,%f1913,%f1914,%f1915}, %rd218, %rd7, %p437, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd220, %rd8, %rd230;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f1908,%f1909,%f1910,%f1911,%f1912,%f1913,%f1914,%f1915}, %rd220, %rd9, %p437, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd222, %rd10, %rd230;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f1964,%f1965,%f1966,%f1967,%f1968,%f1969,%f1970,%f1971}, %rd222, %rd3, 0, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd224, %rd11, %rd230;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f1964,%f1965,%f1966,%f1967,%f1968,%f1969,%f1970,%f1971}, %rd224, %rd5, %p437, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd226, %rd12, %rd230;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f1964,%f1965,%f1966,%f1967,%f1968,%f1969,%f1970,%f1971}, %rd226, %rd7, %p437, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd228, %rd13, %rd230;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f1964,%f1965,%f1966,%f1967,%f1968,%f1969,%f1970,%f1971}, %rd228, %rd9, %p437, 1, 1, 0, 0;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	// begin inline asm
	// wait for regs: %f1908,%f1909,%f1910,%f1911,%f1912,%f1913,%f1914,%f1915,%f1964,%f1965,%f1966,%f1967,%f1968,%f1969,%f1970,%f1971
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	1 170 55                        // prefix_prefill.py:170:55
	setp.lt.s32 	%p114, %r110, %r5;
	setp.lt.s32 	%p115, %r111, %r5;
	setp.lt.s32 	%p116, %r112, %r5;
	setp.lt.s32 	%p117, %r113, %r5;
	.loc	1 171 22                        // prefix_prefill.py:171:22
	selp.f32 	%f2068, %f1908, 0fFF800000, %p114;
	selp.f32 	%f2069, %f1909, 0fFF800000, %p115;
	selp.f32 	%f2070, %f1910, 0fFF800000, %p114;
	selp.f32 	%f2071, %f1911, 0fFF800000, %p115;
	selp.f32 	%f2072, %f1912, 0fFF800000, %p116;
	selp.f32 	%f2073, %f1913, 0fFF800000, %p117;
	selp.f32 	%f2074, %f1914, 0fFF800000, %p116;
	selp.f32 	%f2075, %f1915, 0fFF800000, %p117;
	selp.f32 	%f2076, %f1964, 0fFF800000, %p114;
	selp.f32 	%f2077, %f1965, 0fFF800000, %p115;
	selp.f32 	%f2078, %f1966, 0fFF800000, %p114;
	selp.f32 	%f2079, %f1967, 0fFF800000, %p115;
	selp.f32 	%f2080, %f1968, 0fFF800000, %p116;
	selp.f32 	%f2081, %f1969, 0fFF800000, %p117;
	selp.f32 	%f2082, %f1970, 0fFF800000, %p116;
	selp.f32 	%f2083, %f1971, 0fFF800000, %p117;
	.loc	1 172 14                        // prefix_prefill.py:172:14
	mul.f32 	%f2084, %f1313, %f2068;
	mul.f32 	%f2085, %f1313, %f2069;
	mul.f32 	%f2086, %f1313, %f2070;
	mul.f32 	%f2087, %f1313, %f2071;
	mul.f32 	%f2088, %f1313, %f2072;
	mul.f32 	%f2089, %f1313, %f2073;
	mul.f32 	%f2090, %f1313, %f2074;
	mul.f32 	%f2091, %f1313, %f2075;
	mul.f32 	%f2092, %f1313, %f2076;
	mul.f32 	%f2093, %f1313, %f2077;
	mul.f32 	%f2094, %f1313, %f2078;
	mul.f32 	%f2095, %f1313, %f2079;
	mul.f32 	%f2096, %f1313, %f2080;
	mul.f32 	%f2097, %f1313, %f2081;
	mul.f32 	%f2098, %f1313, %f2082;
	mul.f32 	%f2099, %f1313, %f2083;
$L__tmp5:
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f2100, %f2084, %f2085;
	max.f32 	%f2101, %f2086, %f2087;
	max.f32 	%f2102, %f2100, %f2088;
	max.f32 	%f2103, %f2102, %f2089;
	max.f32 	%f2104, %f2101, %f2090;
	max.f32 	%f2105, %f2104, %f2091;
	max.f32 	%f2106, %f2092, %f2093;
	max.f32 	%f2107, %f2094, %f2095;
	max.f32 	%f2108, %f2106, %f2096;
	max.f32 	%f2109, %f2108, %f2097;
	max.f32 	%f2110, %f2107, %f2098;
	max.f32 	%f2111, %f2110, %f2099;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r592, %f2103;
	shfl.sync.bfly.b32	%r593, %r592, 2, 31, -1;
	mov.b32 	%f2112, %r593;
	mov.b32 	%r594, %f2105;
	mov.b32 	%r595, %f2109;
	mov.b32 	%r596, %f2111;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f2113, %f2103, %f2112;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r597, %f2113;
	shfl.sync.bfly.b32	%r598, %r597, 1, 31, -1;
	shfl.sync.bfly.b32	%r599, %r594, 2, 31, -1;
	mov.b32 	%f2114, %r599;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f2115, %f2105, %f2114;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r600, %f2115;
	shfl.sync.bfly.b32	%r601, %r600, 1, 31, -1;
	shfl.sync.bfly.b32	%r602, %r595, 2, 31, -1;
	mov.b32 	%f2116, %r602;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f2117, %f2109, %f2116;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r603, %f2117;
	shfl.sync.bfly.b32	%r604, %r603, 1, 31, -1;
	shfl.sync.bfly.b32	%r605, %r596, 2, 31, -1;
	mov.b32 	%f2118, %r605;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f2119, %f2111, %f2118;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r606, %f2119;
	shfl.sync.bfly.b32	%r607, %r606, 1, 31, -1;
	mov.b32 	%f2120, %r607;
	mov.b32 	%f2121, %r604;
	mov.b32 	%f2122, %r601;
	mov.b32 	%f2123, %r598;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f2124, %f2113, %f2123;
	max.f32 	%f2125, %f2115, %f2122;
	max.f32 	%f2126, %f2117, %f2121;
	max.f32 	%f2127, %f2119, %f2120;
$L__tmp6:
	.loc	1 190 31                        // prefix_prefill.py:190:31
	max.f32 	%f312, %f148, %f2127;
	max.f32 	%f311, %f147, %f2126;
	max.f32 	%f310, %f146, %f2125;
	max.f32 	%f309, %f145, %f2124;
	.loc	1 191 24                        // prefix_prefill.py:191:24
	neg.f32 	%f2128, %f309;
	fma.rn.f32 	%f2129, %f1313, %f2068, %f2128;
	fma.rn.f32 	%f2130, %f1313, %f2069, %f2128;
	neg.f32 	%f2131, %f310;
	fma.rn.f32 	%f2132, %f1313, %f2070, %f2131;
	fma.rn.f32 	%f2133, %f1313, %f2071, %f2131;
	fma.rn.f32 	%f2134, %f1313, %f2072, %f2128;
	fma.rn.f32 	%f2135, %f1313, %f2073, %f2128;
	fma.rn.f32 	%f2136, %f1313, %f2074, %f2131;
	fma.rn.f32 	%f2137, %f1313, %f2075, %f2131;
	neg.f32 	%f2138, %f311;
	fma.rn.f32 	%f2139, %f1313, %f2076, %f2138;
	fma.rn.f32 	%f2140, %f1313, %f2077, %f2138;
	neg.f32 	%f2141, %f312;
	fma.rn.f32 	%f2142, %f1313, %f2078, %f2141;
	fma.rn.f32 	%f2143, %f1313, %f2079, %f2141;
	fma.rn.f32 	%f2144, %f1313, %f2080, %f2138;
	fma.rn.f32 	%f2145, %f1313, %f2081, %f2138;
	fma.rn.f32 	%f2146, %f1313, %f2082, %f2141;
	fma.rn.f32 	%f2147, %f1313, %f2083, %f2141;
	.loc	1 191 19                        // prefix_prefill.py:191:19
	mul.f32 	%f2029, %f2129, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2028, %f2029;
	// end inline asm
	mul.f32 	%f2031, %f2130, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2030, %f2031;
	// end inline asm
	mul.f32 	%f2033, %f2132, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2032, %f2033;
	// end inline asm
	mul.f32 	%f2035, %f2133, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2034, %f2035;
	// end inline asm
	mul.f32 	%f2037, %f2134, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2036, %f2037;
	// end inline asm
	mul.f32 	%f2039, %f2135, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2038, %f2039;
	// end inline asm
	mul.f32 	%f2041, %f2136, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2040, %f2041;
	// end inline asm
	mul.f32 	%f2043, %f2137, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2042, %f2043;
	// end inline asm
	mul.f32 	%f2045, %f2139, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2044, %f2045;
	// end inline asm
	mul.f32 	%f2047, %f2140, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2046, %f2047;
	// end inline asm
	mul.f32 	%f2049, %f2142, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2048, %f2049;
	// end inline asm
	mul.f32 	%f2051, %f2143, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2050, %f2051;
	// end inline asm
	mul.f32 	%f2053, %f2144, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2052, %f2053;
	// end inline asm
	mul.f32 	%f2055, %f2145, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2054, %f2055;
	// end inline asm
	mul.f32 	%f2057, %f2146, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2056, %f2057;
	// end inline asm
	mul.f32 	%f2059, %f2147, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2058, %f2059;
	// end inline asm
$L__tmp7:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f2148, %f2028, %f2030;
	add.f32 	%f2149, %f2032, %f2034;
	add.f32 	%f2150, %f2148, %f2036;
	add.f32 	%f2151, %f2150, %f2038;
	add.f32 	%f2152, %f2149, %f2040;
	add.f32 	%f2153, %f2152, %f2042;
	add.f32 	%f2154, %f2044, %f2046;
	add.f32 	%f2155, %f2048, %f2050;
	add.f32 	%f2156, %f2154, %f2052;
	add.f32 	%f2157, %f2156, %f2054;
	add.f32 	%f2158, %f2155, %f2056;
	add.f32 	%f2159, %f2158, %f2058;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r608, %f2151;
	shfl.sync.bfly.b32	%r609, %r608, 2, 31, -1;
	mov.b32 	%f2160, %r609;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f2161, %f2151, %f2160;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r610, %f2161;
	shfl.sync.bfly.b32	%r611, %r610, 1, 31, -1;
	mov.b32 	%r612, %f2153;
	shfl.sync.bfly.b32	%r613, %r612, 2, 31, -1;
	mov.b32 	%f2162, %r613;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f2163, %f2153, %f2162;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r614, %f2163;
	shfl.sync.bfly.b32	%r615, %r614, 1, 31, -1;
	mov.b32 	%r616, %f2157;
	shfl.sync.bfly.b32	%r617, %r616, 2, 31, -1;
	mov.b32 	%f2164, %r617;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f2165, %f2157, %f2164;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r618, %f2165;
	shfl.sync.bfly.b32	%r619, %r618, 1, 31, -1;
	mov.b32 	%r620, %f2159;
	shfl.sync.bfly.b32	%r621, %r620, 2, 31, -1;
	mov.b32 	%f2166, %r621;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f2167, %f2159, %f2166;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r622, %f2167;
	shfl.sync.bfly.b32	%r623, %r622, 1, 31, -1;
$L__tmp8:
	.loc	1 193 29                        // prefix_prefill.py:193:29
	sub.f32 	%f2172, %f145, %f309;
	sub.f32 	%f2173, %f146, %f310;
	sub.f32 	%f2174, %f147, %f311;
	sub.f32 	%f2175, %f148, %f312;
	.loc	1 193 23                        // prefix_prefill.py:193:23
	mul.f32 	%f2061, %f2172, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2060, %f2061;
	// end inline asm
	mul.f32 	%f2063, %f2173, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2062, %f2063;
	// end inline asm
	mul.f32 	%f2065, %f2174, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2064, %f2065;
	// end inline asm
	mul.f32 	%f2067, %f2175, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2066, %f2067;
	// end inline asm
	.loc	1 194 20                        // prefix_prefill.py:194:20
	mul.f32 	%f2304, %f1756, %f2060;
	mul.f32 	%f2305, %f1757, %f2060;
	mul.f32 	%f2306, %f1758, %f2062;
	mul.f32 	%f2307, %f1759, %f2062;
	mul.f32 	%f2308, %f1760, %f2060;
	mul.f32 	%f2309, %f1761, %f2060;
	mul.f32 	%f2310, %f1762, %f2062;
	mul.f32 	%f2311, %f1763, %f2062;
	mul.f32 	%f2312, %f1764, %f2060;
	mul.f32 	%f2313, %f1765, %f2060;
	mul.f32 	%f2314, %f1766, %f2062;
	mul.f32 	%f2315, %f1767, %f2062;
	mul.f32 	%f2316, %f1768, %f2060;
	mul.f32 	%f2317, %f1769, %f2060;
	mul.f32 	%f2318, %f1770, %f2062;
	mul.f32 	%f2319, %f1771, %f2062;
	mul.f32 	%f2320, %f1772, %f2060;
	mul.f32 	%f2321, %f1773, %f2060;
	mul.f32 	%f2322, %f1774, %f2062;
	mul.f32 	%f2323, %f1775, %f2062;
	mul.f32 	%f2324, %f1776, %f2060;
	mul.f32 	%f2325, %f1777, %f2060;
	mul.f32 	%f2326, %f1778, %f2062;
	mul.f32 	%f2327, %f1779, %f2062;
	mul.f32 	%f2328, %f1780, %f2060;
	mul.f32 	%f2329, %f1781, %f2060;
	mul.f32 	%f2330, %f1782, %f2062;
	mul.f32 	%f2331, %f1783, %f2062;
	mul.f32 	%f2332, %f1784, %f2060;
	mul.f32 	%f2333, %f1785, %f2060;
	mul.f32 	%f2334, %f1786, %f2062;
	mul.f32 	%f2335, %f1787, %f2062;
	mul.f32 	%f2336, %f1788, %f2064;
	mul.f32 	%f2337, %f1789, %f2064;
	mul.f32 	%f2338, %f1790, %f2066;
	mul.f32 	%f2339, %f1791, %f2066;
	mul.f32 	%f2340, %f1792, %f2064;
	mul.f32 	%f2341, %f1793, %f2064;
	mul.f32 	%f2342, %f1794, %f2066;
	mul.f32 	%f2343, %f1795, %f2066;
	mul.f32 	%f2344, %f1796, %f2064;
	mul.f32 	%f2345, %f1797, %f2064;
	mul.f32 	%f2346, %f1798, %f2066;
	mul.f32 	%f2347, %f1799, %f2066;
	mul.f32 	%f2348, %f1800, %f2064;
	mul.f32 	%f2349, %f1801, %f2064;
	mul.f32 	%f2350, %f1802, %f2066;
	mul.f32 	%f2351, %f1803, %f2066;
	mul.f32 	%f2352, %f1804, %f2064;
	mul.f32 	%f2353, %f1805, %f2064;
	mul.f32 	%f2354, %f1806, %f2066;
	mul.f32 	%f2355, %f1807, %f2066;
	mul.f32 	%f2356, %f1808, %f2064;
	mul.f32 	%f2357, %f1809, %f2064;
	mul.f32 	%f2358, %f1810, %f2066;
	mul.f32 	%f2359, %f1811, %f2066;
	mul.f32 	%f2360, %f1812, %f2064;
	mul.f32 	%f2361, %f1813, %f2064;
	mul.f32 	%f2362, %f1814, %f2066;
	mul.f32 	%f2363, %f1815, %f2066;
	mul.f32 	%f2364, %f1816, %f2064;
	mul.f32 	%f2365, %f1817, %f2064;
	mul.f32 	%f2366, %f1818, %f2066;
	mul.f32 	%f2367, %f1819, %f2066;
	mul.wide.s32 	%rd533, %r115, 2;
	.loc	1 197 11                        // prefix_prefill.py:197:11
	@%p100 bra 	$L__BB0_17;
// %bb.16:                              //   in Loop: Header=BB0_2 Depth=1
	.loc	1 0 0                           // prefix_prefill.py:0:0
	add.s32 	%r116, %r570, %r49;
	add.s32 	%r117, %r570, %r50;
	add.s32 	%r118, %r570, %r51;
	add.s32 	%r119, %r570, %r52;
	add.s32 	%r120, %r570, %r53;
	add.s32 	%r121, %r570, %r54;
	add.s32 	%r122, %r570, %r55;
	.loc	1 202 28                        // prefix_prefill.py:202:28
	add.s32 	%r629, %r1728, 16;
	add.s32 	%r630, %r1728, 17;
	add.s32 	%r631, %r1728, 18;
	add.s32 	%r632, %r1728, 19;
	add.s32 	%r633, %r1728, 20;
	add.s32 	%r634, %r1728, 21;
	add.s32 	%r635, %r1728, 22;
	.loc	1 202 50                        // prefix_prefill.py:202:50
	add.s32 	%r636, %r1728, 23;
	setp.lt.s32 	%p119, %r629, %r5;
	setp.lt.s32 	%p121, %r630, %r5;
	setp.lt.s32 	%p123, %r631, %r5;
	setp.lt.s32 	%p125, %r632, %r5;
	setp.lt.s32 	%p127, %r633, %r5;
	setp.lt.s32 	%p129, %r634, %r5;
	setp.lt.s32 	%p131, %r635, %r5;
	setp.lt.s32 	%p133, %r636, %r5;
	.loc	1 200 26                        // prefix_prefill.py:200:26
	add.s64 	%rd233, %rd136, %rd533;
	mul.wide.s32 	%rd242, %r116, 2;
	add.s64 	%rd234, %rd136, %rd242;
	mul.wide.s32 	%rd243, %r117, 2;
	add.s64 	%rd235, %rd136, %rd243;
	mul.wide.s32 	%rd244, %r118, 2;
	add.s64 	%rd236, %rd136, %rd244;
	mul.wide.s32 	%rd245, %r119, 2;
	add.s64 	%rd237, %rd136, %rd245;
	mul.wide.s32 	%rd246, %r120, 2;
	add.s64 	%rd238, %rd136, %rd246;
	mul.wide.s32 	%rd247, %r121, 2;
	add.s64 	%rd239, %rd136, %rd247;
	mul.wide.s32 	%rd248, %r122, 2;
	add.s64 	%rd240, %rd136, %rd248;
	.loc	1 200 16                        // prefix_prefill.py:200:16
	// begin inline asm
	mov.u16 %rs49, 0x0;
	@%p119 ld.global.b16 { %rs49 }, [ %rd233 + 0 ];
	@!%p119 mov.u16 %rs49, %rs194;
	// end inline asm
	// begin inline asm
	mov.u16 %rs51, 0x0;
	@%p121 ld.global.b16 { %rs51 }, [ %rd234 + 0 ];
	@!%p121 mov.u16 %rs51, %rs194;
	// end inline asm
	// begin inline asm
	mov.u16 %rs53, 0x0;
	@%p123 ld.global.b16 { %rs53 }, [ %rd235 + 0 ];
	@!%p123 mov.u16 %rs53, %rs194;
	// end inline asm
	// begin inline asm
	mov.u16 %rs55, 0x0;
	@%p125 ld.global.b16 { %rs55 }, [ %rd236 + 0 ];
	@!%p125 mov.u16 %rs55, %rs194;
	// end inline asm
	// begin inline asm
	mov.u16 %rs57, 0x0;
	@%p127 ld.global.b16 { %rs57 }, [ %rd237 + 0 ];
	@!%p127 mov.u16 %rs57, %rs194;
	// end inline asm
	// begin inline asm
	mov.u16 %rs59, 0x0;
	@%p129 ld.global.b16 { %rs59 }, [ %rd238 + 0 ];
	@!%p129 mov.u16 %rs59, %rs194;
	// end inline asm
	// begin inline asm
	mov.u16 %rs61, 0x0;
	@%p131 ld.global.b16 { %rs61 }, [ %rd239 + 0 ];
	@!%p131 mov.u16 %rs61, %rs194;
	// end inline asm
	// begin inline asm
	mov.u16 %rs63, 0x0;
	@%p133 ld.global.b16 { %rs63 }, [ %rd240 + 0 ];
	@!%p133 mov.u16 %rs63, %rs194;
	// end inline asm
	mov.b32 	%r1743, {%rs49, %rs51};
	mov.b32 	%r1744, {%rs53, %rs55};
	mov.b32 	%r1745, {%rs57, %rs59};
	mov.b32 	%r1746, {%rs61, %rs63};
	.loc	1 197 11                        // prefix_prefill.py:197:11
	bra.uni 	$L__BB0_18;
$L__BB0_17:                             //   in Loop: Header=BB0_2 Depth=1
	.loc	1 205 39                        // prefix_prefill.py:205:39
	add.s64 	%rd231, %rd136, %rd533;
	.loc	1 205 29                        // prefix_prefill.py:205:29
	// begin inline asm
	mov.u32 %r1743, 0x0;
	mov.u32 %r1744, 0x0;
	mov.u32 %r1745, 0x0;
	mov.u32 %r1746, 0x0;
	@%p437 ld.global.v4.b32 { %r1743, %r1744, %r1745, %r1746 }, [ %rd231 + 0 ];
	// end inline asm
$L__BB0_18:                             //   in Loop: Header=BB0_2 Depth=1
	.loc	1 0 0                           // prefix_prefill.py:0:0
	add.f32 	%f169, %f1609, %f1619;
	add.f32 	%f170, %f1611, %f1618;
	add.f32 	%f171, %f1613, %f1617;
	add.f32 	%f172, %f1615, %f1616;
	mov.b32 	%f2168, %r623;
	mov.b32 	%f2169, %r619;
	mov.b32 	%f2170, %r615;
	mov.b32 	%f2171, %r611;
	.loc	1 197 11                        // prefix_prefill.py:197:11
	bar.sync 	0;
	st.shared.v4.b32 	[%r62], {%r1743, %r1744, %r1745, %r1746};
	.loc	1 211 17                        // prefix_prefill.py:211:17
	mov.b32 	%r641, %f2028;
	// begin inline asm
	cvt.rn.bf16.f32 %rs65, %r641;
	// end inline asm
	mov.b32 	%r642, %f2030;
	// begin inline asm
	cvt.rn.bf16.f32 %rs66, %r642;
	// end inline asm
	mov.b32 	%r643, %f2032;
	// begin inline asm
	cvt.rn.bf16.f32 %rs67, %r643;
	// end inline asm
	mov.b32 	%r644, %f2034;
	// begin inline asm
	cvt.rn.bf16.f32 %rs68, %r644;
	// end inline asm
	mov.b32 	%r645, %f2036;
	// begin inline asm
	cvt.rn.bf16.f32 %rs69, %r645;
	// end inline asm
	mov.b32 	%r646, %f2038;
	// begin inline asm
	cvt.rn.bf16.f32 %rs70, %r646;
	// end inline asm
	mov.b32 	%r647, %f2040;
	// begin inline asm
	cvt.rn.bf16.f32 %rs71, %r647;
	// end inline asm
	mov.b32 	%r648, %f2042;
	// begin inline asm
	cvt.rn.bf16.f32 %rs72, %r648;
	// end inline asm
	mov.b32 	%r649, %f2044;
	// begin inline asm
	cvt.rn.bf16.f32 %rs73, %r649;
	// end inline asm
	mov.b32 	%r650, %f2046;
	// begin inline asm
	cvt.rn.bf16.f32 %rs74, %r650;
	// end inline asm
	mov.b32 	%r651, %f2048;
	// begin inline asm
	cvt.rn.bf16.f32 %rs75, %r651;
	// end inline asm
	mov.b32 	%r652, %f2050;
	// begin inline asm
	cvt.rn.bf16.f32 %rs76, %r652;
	// end inline asm
	mov.b32 	%r653, %f2052;
	// begin inline asm
	cvt.rn.bf16.f32 %rs77, %r653;
	// end inline asm
	mov.b32 	%r654, %f2054;
	// begin inline asm
	cvt.rn.bf16.f32 %rs78, %r654;
	// end inline asm
	mov.b32 	%r655, %f2056;
	// begin inline asm
	cvt.rn.bf16.f32 %rs79, %r655;
	// end inline asm
	mov.b32 	%r656, %f2058;
	// begin inline asm
	cvt.rn.bf16.f32 %rs80, %r656;
	// end inline asm
	.loc	1 213 24                        // prefix_prefill.py:213:24
	// begin inline asm
	fence.proxy.async.shared::cta;
	// end inline asm
	bar.sync 	0;
	mov.b32 	%r666, {%rs65, %rs66};
	mov.b32 	%r667, {%rs67, %rs68};
	mov.b32 	%r668, {%rs69, %rs70};
	mov.b32 	%r669, {%rs71, %rs72};
	mov.b32 	%r670, {%rs73, %rs74};
	mov.b32 	%r671, {%rs75, %rs76};
	mov.b32 	%r672, {%rs77, %rs78};
	mov.b32 	%r673, {%rs79, %rs80};
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f2304,%f2305,%f2306,%f2307,%f2308,%f2309,%f2310,%f2311,%f2312,%f2313,%f2314,%f2315,%f2316,%f2317,%f2318,%f2319,%f2320,%f2321,%f2322,%f2323,%f2324,%f2325,%f2326,%f2327,%f2328,%f2329,%f2330,%f2331,%f2332,%f2333,%f2334,%f2335}, {%r666,%r667,%r668,%r669}, %rd14, %p437, 1, 1, 0;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f2336,%f2337,%f2338,%f2339,%f2340,%f2341,%f2342,%f2343,%f2344,%f2345,%f2346,%f2347,%f2348,%f2349,%f2350,%f2351,%f2352,%f2353,%f2354,%f2355,%f2356,%f2357,%f2358,%f2359,%f2360,%f2361,%f2362,%f2363,%f2364,%f2365,%f2366,%f2367}, {%r670,%r671,%r672,%r673}, %rd14, %p437, 1, 1, 0;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	// begin inline asm
	// wait for regs: %f2304,%f2305,%f2306,%f2307,%f2308,%f2309,%f2310,%f2311,%f2312,%f2313,%f2314,%f2315,%f2316,%f2317,%f2318,%f2319,%f2320,%f2321,%f2322,%f2323,%f2324,%f2325,%f2326,%f2327,%f2328,%f2329,%f2330,%f2331,%f2332,%f2333,%f2334,%f2335,%f2336,%f2337,%f2338,%f2339,%f2340,%f2341,%f2342,%f2343,%f2344,%f2345,%f2346,%f2347,%f2348,%f2349,%f2350,%f2351,%f2352,%f2353,%f2354,%f2355,%f2356,%f2357,%f2358,%f2359,%f2360,%f2361,%f2362,%f2363,%f2364,%f2365,%f2366,%f2367
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	1 138 21                        // prefix_prefill.py:138:21
	add.s64 	%rd251, %rd537, 8;
	// begin inline asm
	mov.u32 %r665, 0x0;
	@%p437 ld.global.b32 { %r665 }, [ %rd251 + 0 ];
	// end inline asm
	.loc	1 144 24                        // prefix_prefill.py:144:24
	add.s32 	%r148, %r72, 32;
	add.s32 	%r149, %r72, 33;
	add.s32 	%r150, %r72, 40;
	.loc	1 144 12                        // prefix_prefill.py:144:12
	add.s32 	%r151, %r72, 41;
	mad.lo.s32 	%r152, %r665, %r281, %r63;
	.loc	1 150 17                        // prefix_prefill.py:150:17
	mad.lo.s32 	%r674, %r665, %r282, %r1718;
	.loc	1 151 17                        // prefix_prefill.py:151:17
	add.s32 	%r153, %r674, %r9;
	.loc	1 153 34                        // prefix_prefill.py:153:34
	add.s32 	%r161, %r1730, 48;
	setp.le.s32 	%p138, %r161, %r5;
	mul.wide.s32 	%rd532, %r152, 2;
	.loc	1 153 11                        // prefix_prefill.py:153:11
	@%p138 bra 	$L__BB0_20;
// %bb.19:                              //   in Loop: Header=BB0_2 Depth=1
	.loc	1 158 50                        // prefix_prefill.py:158:50
	add.s32 	%r688, %r1729, 32;
	setp.lt.s32 	%p140, %r688, %r5;
	.loc	1 156 26                        // prefix_prefill.py:156:26
	add.s64 	%rd254, %rd135, %rd532;
	mov.b32 	%r683, 0;
	.loc	1 156 16                        // prefix_prefill.py:156:16
	// begin inline asm
	mov.u32 %r1747, 0x0;
	mov.u32 %r1748, 0x0;
	mov.u32 %r1749, 0x0;
	mov.u32 %r1750, 0x0;
	@%p140 ld.global.v4.b32 { %r1747, %r1748, %r1749, %r1750 }, [ %rd254 + 0 ];
	@!%p140 mov.u32 %r1747, %r683;
	@!%p140 mov.u32 %r1748, %r683;
	@!%p140 mov.u32 %r1749, %r683;
	@!%p140 mov.u32 %r1750, %r683;
	// end inline asm
	.loc	1 153 11                        // prefix_prefill.py:153:11
	bra.uni 	$L__BB0_21;
$L__BB0_20:                             //   in Loop: Header=BB0_2 Depth=1
	.loc	1 161 39                        // prefix_prefill.py:161:39
	add.s64 	%rd252, %rd135, %rd532;
	.loc	1 161 29                        // prefix_prefill.py:161:29
	// begin inline asm
	mov.u32 %r1747, 0x0;
	mov.u32 %r1748, 0x0;
	mov.u32 %r1749, 0x0;
	mov.u32 %r1750, 0x0;
	@%p437 ld.global.v4.b32 { %r1747, %r1748, %r1749, %r1750 }, [ %rd252 + 0 ];
	// end inline asm
$L__BB0_21:                             //   in Loop: Header=BB0_2 Depth=1
	.loc	1 0 0                           // prefix_prefill.py:0:0
	fma.rn.f32 	%f305, %f6060, %f1508, %f169;
	fma.rn.f32 	%f306, %f6061, %f1510, %f170;
	fma.rn.f32 	%f307, %f6062, %f1512, %f171;
	fma.rn.f32 	%f308, %f6063, %f1514, %f172;
	add.f32 	%f333, %f2161, %f2171;
	add.f32 	%f334, %f2163, %f2170;
	add.f32 	%f335, %f2165, %f2169;
	add.f32 	%f336, %f2167, %f2168;
	.loc	1 153 11                        // prefix_prefill.py:153:11
	bar.sync 	0;
	st.shared.v4.b32 	[%r58], {%r1747, %r1748, %r1749, %r1750};
	.loc	1 169 23                        // prefix_prefill.py:169:23
	// begin inline asm
	fence.proxy.async.shared::cta;
	// end inline asm
	bar.sync 	0;
	shfl.sync.idx.b32	%r693, %r1719, 0, 31, -1;
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	shl.b32 	%r694, %r693, 7;
	and.b32  	%r695, %r694, 384;
	cvt.u64.u32 	%rd272, %r695;
	add.s64 	%rd256, %rd2, %rd272;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f2456,%f2457,%f2458,%f2459,%f2460,%f2461,%f2462,%f2463}, %rd256, %rd3, 0, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd258, %rd4, %rd272;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f2456,%f2457,%f2458,%f2459,%f2460,%f2461,%f2462,%f2463}, %rd258, %rd5, %p437, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd260, %rd6, %rd272;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f2456,%f2457,%f2458,%f2459,%f2460,%f2461,%f2462,%f2463}, %rd260, %rd7, %p437, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd262, %rd8, %rd272;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f2456,%f2457,%f2458,%f2459,%f2460,%f2461,%f2462,%f2463}, %rd262, %rd9, %p437, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd264, %rd10, %rd272;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f2512,%f2513,%f2514,%f2515,%f2516,%f2517,%f2518,%f2519}, %rd264, %rd3, 0, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd266, %rd11, %rd272;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f2512,%f2513,%f2514,%f2515,%f2516,%f2517,%f2518,%f2519}, %rd266, %rd5, %p437, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd268, %rd12, %rd272;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f2512,%f2513,%f2514,%f2515,%f2516,%f2517,%f2518,%f2519}, %rd268, %rd7, %p437, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd270, %rd13, %rd272;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f2512,%f2513,%f2514,%f2515,%f2516,%f2517,%f2518,%f2519}, %rd270, %rd9, %p437, 1, 1, 0, 0;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	// begin inline asm
	// wait for regs: %f2456,%f2457,%f2458,%f2459,%f2460,%f2461,%f2462,%f2463,%f2512,%f2513,%f2514,%f2515,%f2516,%f2517,%f2518,%f2519
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	1 170 55                        // prefix_prefill.py:170:55
	setp.lt.s32 	%p152, %r148, %r5;
	setp.lt.s32 	%p153, %r149, %r5;
	setp.lt.s32 	%p154, %r150, %r5;
	setp.lt.s32 	%p155, %r151, %r5;
	.loc	1 171 22                        // prefix_prefill.py:171:22
	selp.f32 	%f2616, %f2456, 0fFF800000, %p152;
	selp.f32 	%f2617, %f2457, 0fFF800000, %p153;
	selp.f32 	%f2618, %f2458, 0fFF800000, %p152;
	selp.f32 	%f2619, %f2459, 0fFF800000, %p153;
	selp.f32 	%f2620, %f2460, 0fFF800000, %p154;
	selp.f32 	%f2621, %f2461, 0fFF800000, %p155;
	selp.f32 	%f2622, %f2462, 0fFF800000, %p154;
	selp.f32 	%f2623, %f2463, 0fFF800000, %p155;
	selp.f32 	%f2624, %f2512, 0fFF800000, %p152;
	selp.f32 	%f2625, %f2513, 0fFF800000, %p153;
	selp.f32 	%f2626, %f2514, 0fFF800000, %p152;
	selp.f32 	%f2627, %f2515, 0fFF800000, %p153;
	selp.f32 	%f2628, %f2516, 0fFF800000, %p154;
	selp.f32 	%f2629, %f2517, 0fFF800000, %p155;
	selp.f32 	%f2630, %f2518, 0fFF800000, %p154;
	selp.f32 	%f2631, %f2519, 0fFF800000, %p155;
	.loc	1 172 14                        // prefix_prefill.py:172:14
	mul.f32 	%f2632, %f1313, %f2616;
	mul.f32 	%f2633, %f1313, %f2617;
	mul.f32 	%f2634, %f1313, %f2618;
	mul.f32 	%f2635, %f1313, %f2619;
	mul.f32 	%f2636, %f1313, %f2620;
	mul.f32 	%f2637, %f1313, %f2621;
	mul.f32 	%f2638, %f1313, %f2622;
	mul.f32 	%f2639, %f1313, %f2623;
	mul.f32 	%f2640, %f1313, %f2624;
	mul.f32 	%f2641, %f1313, %f2625;
	mul.f32 	%f2642, %f1313, %f2626;
	mul.f32 	%f2643, %f1313, %f2627;
	mul.f32 	%f2644, %f1313, %f2628;
	mul.f32 	%f2645, %f1313, %f2629;
	mul.f32 	%f2646, %f1313, %f2630;
	mul.f32 	%f2647, %f1313, %f2631;
$L__tmp9:
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f2648, %f2632, %f2633;
	max.f32 	%f2649, %f2634, %f2635;
	max.f32 	%f2650, %f2648, %f2636;
	max.f32 	%f2651, %f2650, %f2637;
	max.f32 	%f2652, %f2649, %f2638;
	max.f32 	%f2653, %f2652, %f2639;
	max.f32 	%f2654, %f2640, %f2641;
	max.f32 	%f2655, %f2642, %f2643;
	max.f32 	%f2656, %f2654, %f2644;
	max.f32 	%f2657, %f2656, %f2645;
	max.f32 	%f2658, %f2655, %f2646;
	max.f32 	%f2659, %f2658, %f2647;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r696, %f2651;
	shfl.sync.bfly.b32	%r697, %r696, 2, 31, -1;
	mov.b32 	%f2660, %r697;
	mov.b32 	%r698, %f2653;
	mov.b32 	%r699, %f2657;
	mov.b32 	%r700, %f2659;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f2661, %f2651, %f2660;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r701, %f2661;
	shfl.sync.bfly.b32	%r702, %r701, 1, 31, -1;
	shfl.sync.bfly.b32	%r703, %r698, 2, 31, -1;
	mov.b32 	%f2662, %r703;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f2663, %f2653, %f2662;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r704, %f2663;
	shfl.sync.bfly.b32	%r705, %r704, 1, 31, -1;
	shfl.sync.bfly.b32	%r706, %r699, 2, 31, -1;
	mov.b32 	%f2664, %r706;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f2665, %f2657, %f2664;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r707, %f2665;
	shfl.sync.bfly.b32	%r708, %r707, 1, 31, -1;
	shfl.sync.bfly.b32	%r709, %r700, 2, 31, -1;
	mov.b32 	%f2666, %r709;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f2667, %f2659, %f2666;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r710, %f2667;
	shfl.sync.bfly.b32	%r711, %r710, 1, 31, -1;
	mov.b32 	%f2668, %r711;
	mov.b32 	%f2669, %r708;
	mov.b32 	%f2670, %r705;
	mov.b32 	%f2671, %r702;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f2672, %f2661, %f2671;
	max.f32 	%f2673, %f2663, %f2670;
	max.f32 	%f2674, %f2665, %f2669;
	max.f32 	%f2675, %f2667, %f2668;
$L__tmp10:
	.loc	1 190 31                        // prefix_prefill.py:190:31
	max.f32 	%f476, %f312, %f2675;
	max.f32 	%f475, %f311, %f2674;
	max.f32 	%f474, %f310, %f2673;
	max.f32 	%f473, %f309, %f2672;
	.loc	1 191 24                        // prefix_prefill.py:191:24
	neg.f32 	%f2676, %f473;
	fma.rn.f32 	%f2677, %f1313, %f2616, %f2676;
	fma.rn.f32 	%f2678, %f1313, %f2617, %f2676;
	neg.f32 	%f2679, %f474;
	fma.rn.f32 	%f2680, %f1313, %f2618, %f2679;
	fma.rn.f32 	%f2681, %f1313, %f2619, %f2679;
	fma.rn.f32 	%f2682, %f1313, %f2620, %f2676;
	fma.rn.f32 	%f2683, %f1313, %f2621, %f2676;
	fma.rn.f32 	%f2684, %f1313, %f2622, %f2679;
	fma.rn.f32 	%f2685, %f1313, %f2623, %f2679;
	neg.f32 	%f2686, %f475;
	fma.rn.f32 	%f2687, %f1313, %f2624, %f2686;
	fma.rn.f32 	%f2688, %f1313, %f2625, %f2686;
	neg.f32 	%f2689, %f476;
	fma.rn.f32 	%f2690, %f1313, %f2626, %f2689;
	fma.rn.f32 	%f2691, %f1313, %f2627, %f2689;
	fma.rn.f32 	%f2692, %f1313, %f2628, %f2686;
	fma.rn.f32 	%f2693, %f1313, %f2629, %f2686;
	fma.rn.f32 	%f2694, %f1313, %f2630, %f2689;
	fma.rn.f32 	%f2695, %f1313, %f2631, %f2689;
	.loc	1 191 19                        // prefix_prefill.py:191:19
	mul.f32 	%f2577, %f2677, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2576, %f2577;
	// end inline asm
	mul.f32 	%f2579, %f2678, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2578, %f2579;
	// end inline asm
	mul.f32 	%f2581, %f2680, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2580, %f2581;
	// end inline asm
	mul.f32 	%f2583, %f2681, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2582, %f2583;
	// end inline asm
	mul.f32 	%f2585, %f2682, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2584, %f2585;
	// end inline asm
	mul.f32 	%f2587, %f2683, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2586, %f2587;
	// end inline asm
	mul.f32 	%f2589, %f2684, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2588, %f2589;
	// end inline asm
	mul.f32 	%f2591, %f2685, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2590, %f2591;
	// end inline asm
	mul.f32 	%f2593, %f2687, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2592, %f2593;
	// end inline asm
	mul.f32 	%f2595, %f2688, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2594, %f2595;
	// end inline asm
	mul.f32 	%f2597, %f2690, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2596, %f2597;
	// end inline asm
	mul.f32 	%f2599, %f2691, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2598, %f2599;
	// end inline asm
	mul.f32 	%f2601, %f2692, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2600, %f2601;
	// end inline asm
	mul.f32 	%f2603, %f2693, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2602, %f2603;
	// end inline asm
	mul.f32 	%f2605, %f2694, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2604, %f2605;
	// end inline asm
	mul.f32 	%f2607, %f2695, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2606, %f2607;
	// end inline asm
$L__tmp11:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f2696, %f2576, %f2578;
	add.f32 	%f2697, %f2580, %f2582;
	add.f32 	%f2698, %f2696, %f2584;
	add.f32 	%f2699, %f2698, %f2586;
	add.f32 	%f2700, %f2697, %f2588;
	add.f32 	%f2701, %f2700, %f2590;
	add.f32 	%f2702, %f2592, %f2594;
	add.f32 	%f2703, %f2596, %f2598;
	add.f32 	%f2704, %f2702, %f2600;
	add.f32 	%f2705, %f2704, %f2602;
	add.f32 	%f2706, %f2703, %f2604;
	add.f32 	%f2707, %f2706, %f2606;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r712, %f2699;
	shfl.sync.bfly.b32	%r713, %r712, 2, 31, -1;
	mov.b32 	%f2708, %r713;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f2709, %f2699, %f2708;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r714, %f2709;
	shfl.sync.bfly.b32	%r715, %r714, 1, 31, -1;
	mov.b32 	%r716, %f2701;
	shfl.sync.bfly.b32	%r717, %r716, 2, 31, -1;
	mov.b32 	%f2710, %r717;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f2711, %f2701, %f2710;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r718, %f2711;
	shfl.sync.bfly.b32	%r719, %r718, 1, 31, -1;
	mov.b32 	%r720, %f2705;
	shfl.sync.bfly.b32	%r721, %r720, 2, 31, -1;
	mov.b32 	%f2712, %r721;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f2713, %f2705, %f2712;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r722, %f2713;
	shfl.sync.bfly.b32	%r723, %r722, 1, 31, -1;
	mov.b32 	%r724, %f2707;
	shfl.sync.bfly.b32	%r725, %r724, 2, 31, -1;
	mov.b32 	%f2714, %r725;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f2715, %f2707, %f2714;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r726, %f2715;
	shfl.sync.bfly.b32	%r727, %r726, 1, 31, -1;
	mov.b32 	%f2716, %r727;
	mov.b32 	%f2717, %r723;
	mov.b32 	%f2718, %r719;
	mov.b32 	%f2719, %r715;
$L__tmp12:
	.loc	1 193 29                        // prefix_prefill.py:193:29
	sub.f32 	%f2720, %f309, %f473;
	sub.f32 	%f2721, %f310, %f474;
	sub.f32 	%f2722, %f311, %f475;
	sub.f32 	%f2723, %f312, %f476;
	.loc	1 193 23                        // prefix_prefill.py:193:23
	mul.f32 	%f2609, %f2720, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2608, %f2609;
	// end inline asm
	mul.f32 	%f2611, %f2721, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2610, %f2611;
	// end inline asm
	mul.f32 	%f2613, %f2722, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2612, %f2613;
	// end inline asm
	mul.f32 	%f2615, %f2723, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2614, %f2615;
	// end inline asm
	.loc	1 194 20                        // prefix_prefill.py:194:20
	mul.f32 	%f2852, %f2304, %f2608;
	mul.f32 	%f2853, %f2305, %f2608;
	mul.f32 	%f2854, %f2306, %f2610;
	mul.f32 	%f2855, %f2307, %f2610;
	mul.f32 	%f2856, %f2308, %f2608;
	mul.f32 	%f2857, %f2309, %f2608;
	mul.f32 	%f2858, %f2310, %f2610;
	mul.f32 	%f2859, %f2311, %f2610;
	mul.f32 	%f2860, %f2312, %f2608;
	mul.f32 	%f2861, %f2313, %f2608;
	mul.f32 	%f2862, %f2314, %f2610;
	mul.f32 	%f2863, %f2315, %f2610;
	mul.f32 	%f2864, %f2316, %f2608;
	mul.f32 	%f2865, %f2317, %f2608;
	mul.f32 	%f2866, %f2318, %f2610;
	mul.f32 	%f2867, %f2319, %f2610;
	mul.f32 	%f2868, %f2320, %f2608;
	mul.f32 	%f2869, %f2321, %f2608;
	mul.f32 	%f2870, %f2322, %f2610;
	mul.f32 	%f2871, %f2323, %f2610;
	mul.f32 	%f2872, %f2324, %f2608;
	mul.f32 	%f2873, %f2325, %f2608;
	mul.f32 	%f2874, %f2326, %f2610;
	mul.f32 	%f2875, %f2327, %f2610;
	mul.f32 	%f2876, %f2328, %f2608;
	mul.f32 	%f2877, %f2329, %f2608;
	mul.f32 	%f2878, %f2330, %f2610;
	mul.f32 	%f2879, %f2331, %f2610;
	mul.f32 	%f2880, %f2332, %f2608;
	mul.f32 	%f2881, %f2333, %f2608;
	mul.f32 	%f2882, %f2334, %f2610;
	mul.f32 	%f2883, %f2335, %f2610;
	mul.f32 	%f2884, %f2336, %f2612;
	mul.f32 	%f2885, %f2337, %f2612;
	mul.f32 	%f2886, %f2338, %f2614;
	mul.f32 	%f2887, %f2339, %f2614;
	mul.f32 	%f2888, %f2340, %f2612;
	mul.f32 	%f2889, %f2341, %f2612;
	mul.f32 	%f2890, %f2342, %f2614;
	mul.f32 	%f2891, %f2343, %f2614;
	mul.f32 	%f2892, %f2344, %f2612;
	mul.f32 	%f2893, %f2345, %f2612;
	mul.f32 	%f2894, %f2346, %f2614;
	mul.f32 	%f2895, %f2347, %f2614;
	mul.f32 	%f2896, %f2348, %f2612;
	mul.f32 	%f2897, %f2349, %f2612;
	mul.f32 	%f2898, %f2350, %f2614;
	mul.f32 	%f2899, %f2351, %f2614;
	mul.f32 	%f2900, %f2352, %f2612;
	mul.f32 	%f2901, %f2353, %f2612;
	mul.f32 	%f2902, %f2354, %f2614;
	mul.f32 	%f2903, %f2355, %f2614;
	mul.f32 	%f2904, %f2356, %f2612;
	mul.f32 	%f2905, %f2357, %f2612;
	mul.f32 	%f2906, %f2358, %f2614;
	mul.f32 	%f2907, %f2359, %f2614;
	mul.f32 	%f2908, %f2360, %f2612;
	mul.f32 	%f2909, %f2361, %f2612;
	mul.f32 	%f2910, %f2362, %f2614;
	mul.f32 	%f2911, %f2363, %f2614;
	mul.f32 	%f2912, %f2364, %f2612;
	mul.f32 	%f2913, %f2365, %f2612;
	mul.f32 	%f2914, %f2366, %f2614;
	mul.f32 	%f2915, %f2367, %f2614;
	mul.wide.s32 	%rd531, %r153, 2;
	.loc	1 197 11                        // prefix_prefill.py:197:11
	@%p138 bra 	$L__BB0_23;
// %bb.22:                              //   in Loop: Header=BB0_2 Depth=1
	.loc	1 0 0                           // prefix_prefill.py:0:0
	add.s32 	%r154, %r674, %r49;
	add.s32 	%r155, %r674, %r50;
	add.s32 	%r156, %r674, %r51;
	add.s32 	%r157, %r674, %r52;
	add.s32 	%r158, %r674, %r53;
	add.s32 	%r159, %r674, %r54;
	add.s32 	%r160, %r674, %r55;
	.loc	1 202 28                        // prefix_prefill.py:202:28
	add.s32 	%r733, %r1728, 32;
	add.s32 	%r734, %r1728, 33;
	add.s32 	%r735, %r1728, 34;
	add.s32 	%r736, %r1728, 35;
	add.s32 	%r737, %r1728, 36;
	add.s32 	%r738, %r1728, 37;
	add.s32 	%r739, %r1728, 38;
	.loc	1 202 50                        // prefix_prefill.py:202:50
	add.s32 	%r740, %r1728, 39;
	setp.lt.s32 	%p157, %r733, %r5;
	setp.lt.s32 	%p159, %r734, %r5;
	setp.lt.s32 	%p161, %r735, %r5;
	setp.lt.s32 	%p163, %r736, %r5;
	setp.lt.s32 	%p165, %r737, %r5;
	setp.lt.s32 	%p167, %r738, %r5;
	setp.lt.s32 	%p169, %r739, %r5;
	setp.lt.s32 	%p171, %r740, %r5;
	.loc	1 200 26                        // prefix_prefill.py:200:26
	add.s64 	%rd275, %rd136, %rd531;
	mul.wide.s32 	%rd284, %r154, 2;
	add.s64 	%rd276, %rd136, %rd284;
	mul.wide.s32 	%rd285, %r155, 2;
	add.s64 	%rd277, %rd136, %rd285;
	mul.wide.s32 	%rd286, %r156, 2;
	add.s64 	%rd278, %rd136, %rd286;
	mul.wide.s32 	%rd287, %r157, 2;
	add.s64 	%rd279, %rd136, %rd287;
	mul.wide.s32 	%rd288, %r158, 2;
	add.s64 	%rd280, %rd136, %rd288;
	mul.wide.s32 	%rd289, %r159, 2;
	add.s64 	%rd281, %rd136, %rd289;
	mul.wide.s32 	%rd290, %r160, 2;
	add.s64 	%rd282, %rd136, %rd290;
	.loc	1 200 16                        // prefix_prefill.py:200:16
	// begin inline asm
	mov.u16 %rs97, 0x0;
	@%p157 ld.global.b16 { %rs97 }, [ %rd275 + 0 ];
	@!%p157 mov.u16 %rs97, %rs194;
	// end inline asm
	// begin inline asm
	mov.u16 %rs99, 0x0;
	@%p159 ld.global.b16 { %rs99 }, [ %rd276 + 0 ];
	@!%p159 mov.u16 %rs99, %rs194;
	// end inline asm
	// begin inline asm
	mov.u16 %rs101, 0x0;
	@%p161 ld.global.b16 { %rs101 }, [ %rd277 + 0 ];
	@!%p161 mov.u16 %rs101, %rs194;
	// end inline asm
	// begin inline asm
	mov.u16 %rs103, 0x0;
	@%p163 ld.global.b16 { %rs103 }, [ %rd278 + 0 ];
	@!%p163 mov.u16 %rs103, %rs194;
	// end inline asm
	// begin inline asm
	mov.u16 %rs105, 0x0;
	@%p165 ld.global.b16 { %rs105 }, [ %rd279 + 0 ];
	@!%p165 mov.u16 %rs105, %rs194;
	// end inline asm
	// begin inline asm
	mov.u16 %rs107, 0x0;
	@%p167 ld.global.b16 { %rs107 }, [ %rd280 + 0 ];
	@!%p167 mov.u16 %rs107, %rs194;
	// end inline asm
	// begin inline asm
	mov.u16 %rs109, 0x0;
	@%p169 ld.global.b16 { %rs109 }, [ %rd281 + 0 ];
	@!%p169 mov.u16 %rs109, %rs194;
	// end inline asm
	// begin inline asm
	mov.u16 %rs111, 0x0;
	@%p171 ld.global.b16 { %rs111 }, [ %rd282 + 0 ];
	@!%p171 mov.u16 %rs111, %rs194;
	// end inline asm
	mov.b32 	%r1751, {%rs97, %rs99};
	mov.b32 	%r1752, {%rs101, %rs103};
	mov.b32 	%r1753, {%rs105, %rs107};
	mov.b32 	%r1754, {%rs109, %rs111};
	.loc	1 197 11                        // prefix_prefill.py:197:11
	bra.uni 	$L__BB0_24;
$L__BB0_23:                             //   in Loop: Header=BB0_2 Depth=1
	.loc	1 205 39                        // prefix_prefill.py:205:39
	add.s64 	%rd273, %rd136, %rd531;
	.loc	1 205 29                        // prefix_prefill.py:205:29
	// begin inline asm
	mov.u32 %r1751, 0x0;
	mov.u32 %r1752, 0x0;
	mov.u32 %r1753, 0x0;
	mov.u32 %r1754, 0x0;
	@%p437 ld.global.v4.b32 { %r1751, %r1752, %r1753, %r1754 }, [ %rd273 + 0 ];
	// end inline asm
$L__BB0_24:                             //   in Loop: Header=BB0_2 Depth=1
	.loc	1 0 0                           // prefix_prefill.py:0:0
	fma.rn.f32 	%f469, %f305, %f2060, %f333;
	fma.rn.f32 	%f470, %f306, %f2062, %f334;
	fma.rn.f32 	%f471, %f307, %f2064, %f335;
	fma.rn.f32 	%f472, %f308, %f2066, %f336;
	add.f32 	%f497, %f2709, %f2719;
	add.f32 	%f498, %f2711, %f2718;
	add.f32 	%f499, %f2713, %f2717;
	add.f32 	%f500, %f2715, %f2716;
	.loc	1 197 11                        // prefix_prefill.py:197:11
	bar.sync 	0;
	st.shared.v4.b32 	[%r62], {%r1751, %r1752, %r1753, %r1754};
	.loc	1 211 17                        // prefix_prefill.py:211:17
	mov.b32 	%r745, %f2576;
	// begin inline asm
	cvt.rn.bf16.f32 %rs113, %r745;
	// end inline asm
	mov.b32 	%r746, %f2578;
	// begin inline asm
	cvt.rn.bf16.f32 %rs114, %r746;
	// end inline asm
	mov.b32 	%r747, %f2580;
	// begin inline asm
	cvt.rn.bf16.f32 %rs115, %r747;
	// end inline asm
	mov.b32 	%r748, %f2582;
	// begin inline asm
	cvt.rn.bf16.f32 %rs116, %r748;
	// end inline asm
	mov.b32 	%r749, %f2584;
	// begin inline asm
	cvt.rn.bf16.f32 %rs117, %r749;
	// end inline asm
	mov.b32 	%r750, %f2586;
	// begin inline asm
	cvt.rn.bf16.f32 %rs118, %r750;
	// end inline asm
	mov.b32 	%r751, %f2588;
	// begin inline asm
	cvt.rn.bf16.f32 %rs119, %r751;
	// end inline asm
	mov.b32 	%r752, %f2590;
	// begin inline asm
	cvt.rn.bf16.f32 %rs120, %r752;
	// end inline asm
	mov.b32 	%r753, %f2592;
	// begin inline asm
	cvt.rn.bf16.f32 %rs121, %r753;
	// end inline asm
	mov.b32 	%r754, %f2594;
	// begin inline asm
	cvt.rn.bf16.f32 %rs122, %r754;
	// end inline asm
	mov.b32 	%r755, %f2596;
	// begin inline asm
	cvt.rn.bf16.f32 %rs123, %r755;
	// end inline asm
	mov.b32 	%r756, %f2598;
	// begin inline asm
	cvt.rn.bf16.f32 %rs124, %r756;
	// end inline asm
	mov.b32 	%r757, %f2600;
	// begin inline asm
	cvt.rn.bf16.f32 %rs125, %r757;
	// end inline asm
	mov.b32 	%r758, %f2602;
	// begin inline asm
	cvt.rn.bf16.f32 %rs126, %r758;
	// end inline asm
	mov.b32 	%r759, %f2604;
	// begin inline asm
	cvt.rn.bf16.f32 %rs127, %r759;
	// end inline asm
	mov.b32 	%r760, %f2606;
	// begin inline asm
	cvt.rn.bf16.f32 %rs128, %r760;
	// end inline asm
	.loc	1 213 24                        // prefix_prefill.py:213:24
	// begin inline asm
	fence.proxy.async.shared::cta;
	// end inline asm
	bar.sync 	0;
	mov.b32 	%r770, {%rs113, %rs114};
	mov.b32 	%r771, {%rs115, %rs116};
	mov.b32 	%r772, {%rs117, %rs118};
	mov.b32 	%r773, {%rs119, %rs120};
	mov.b32 	%r774, {%rs121, %rs122};
	mov.b32 	%r775, {%rs123, %rs124};
	mov.b32 	%r776, {%rs125, %rs126};
	mov.b32 	%r777, {%rs127, %rs128};
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f2852,%f2853,%f2854,%f2855,%f2856,%f2857,%f2858,%f2859,%f2860,%f2861,%f2862,%f2863,%f2864,%f2865,%f2866,%f2867,%f2868,%f2869,%f2870,%f2871,%f2872,%f2873,%f2874,%f2875,%f2876,%f2877,%f2878,%f2879,%f2880,%f2881,%f2882,%f2883}, {%r770,%r771,%r772,%r773}, %rd14, %p437, 1, 1, 0;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f2884,%f2885,%f2886,%f2887,%f2888,%f2889,%f2890,%f2891,%f2892,%f2893,%f2894,%f2895,%f2896,%f2897,%f2898,%f2899,%f2900,%f2901,%f2902,%f2903,%f2904,%f2905,%f2906,%f2907,%f2908,%f2909,%f2910,%f2911,%f2912,%f2913,%f2914,%f2915}, {%r774,%r775,%r776,%r777}, %rd14, %p437, 1, 1, 0;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	// begin inline asm
	// wait for regs: %f2852,%f2853,%f2854,%f2855,%f2856,%f2857,%f2858,%f2859,%f2860,%f2861,%f2862,%f2863,%f2864,%f2865,%f2866,%f2867,%f2868,%f2869,%f2870,%f2871,%f2872,%f2873,%f2874,%f2875,%f2876,%f2877,%f2878,%f2879,%f2880,%f2881,%f2882,%f2883,%f2884,%f2885,%f2886,%f2887,%f2888,%f2889,%f2890,%f2891,%f2892,%f2893,%f2894,%f2895,%f2896,%f2897,%f2898,%f2899,%f2900,%f2901,%f2902,%f2903,%f2904,%f2905,%f2906,%f2907,%f2908,%f2909,%f2910,%f2911,%f2912,%f2913,%f2914,%f2915
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	1 138 21                        // prefix_prefill.py:138:21
	add.s64 	%rd293, %rd537, 12;
	// begin inline asm
	mov.u32 %r769, 0x0;
	@%p437 ld.global.b32 { %r769 }, [ %rd293 + 0 ];
	// end inline asm
	.loc	1 144 24                        // prefix_prefill.py:144:24
	add.s32 	%r186, %r72, 48;
	add.s32 	%r187, %r72, 49;
	add.s32 	%r188, %r72, 56;
	.loc	1 144 12                        // prefix_prefill.py:144:12
	add.s32 	%r189, %r72, 57;
	mad.lo.s32 	%r190, %r769, %r281, %r63;
	.loc	1 150 17                        // prefix_prefill.py:150:17
	mad.lo.s32 	%r778, %r769, %r282, %r1718;
	.loc	1 151 17                        // prefix_prefill.py:151:17
	add.s32 	%r191, %r778, %r9;
	.loc	1 153 21                        // prefix_prefill.py:153:21
	add.s32 	%r1730, %r1730, 64;
	.loc	1 153 34                        // prefix_prefill.py:153:34
	setp.le.s32 	%p176, %r1730, %r5;
	mul.wide.s32 	%rd530, %r190, 2;
	.loc	1 153 11                        // prefix_prefill.py:153:11
	@%p176 bra 	$L__BB0_26;
// %bb.25:                              //   in Loop: Header=BB0_2 Depth=1
	.loc	1 158 50                        // prefix_prefill.py:158:50
	add.s32 	%r792, %r1729, 48;
	setp.lt.s32 	%p178, %r792, %r5;
	.loc	1 156 26                        // prefix_prefill.py:156:26
	add.s64 	%rd296, %rd135, %rd530;
	mov.b32 	%r787, 0;
	.loc	1 156 16                        // prefix_prefill.py:156:16
	// begin inline asm
	mov.u32 %r1755, 0x0;
	mov.u32 %r1756, 0x0;
	mov.u32 %r1757, 0x0;
	mov.u32 %r1758, 0x0;
	@%p178 ld.global.v4.b32 { %r1755, %r1756, %r1757, %r1758 }, [ %rd296 + 0 ];
	@!%p178 mov.u32 %r1755, %r787;
	@!%p178 mov.u32 %r1756, %r787;
	@!%p178 mov.u32 %r1757, %r787;
	@!%p178 mov.u32 %r1758, %r787;
	// end inline asm
	.loc	1 153 11                        // prefix_prefill.py:153:11
	bra.uni 	$L__BB0_27;
$L__BB0_26:                             //   in Loop: Header=BB0_2 Depth=1
	.loc	1 161 39                        // prefix_prefill.py:161:39
	add.s64 	%rd294, %rd135, %rd530;
	.loc	1 161 29                        // prefix_prefill.py:161:29
	// begin inline asm
	mov.u32 %r1755, 0x0;
	mov.u32 %r1756, 0x0;
	mov.u32 %r1757, 0x0;
	mov.u32 %r1758, 0x0;
	@%p437 ld.global.v4.b32 { %r1755, %r1756, %r1757, %r1758 }, [ %rd294 + 0 ];
	// end inline asm
$L__BB0_27:                             //   in Loop: Header=BB0_2 Depth=1
	.loc	1 0 0                           // prefix_prefill.py:0:0
	fma.rn.f32 	%f633, %f469, %f2608, %f497;
	fma.rn.f32 	%f634, %f470, %f2610, %f498;
	fma.rn.f32 	%f635, %f471, %f2612, %f499;
	fma.rn.f32 	%f636, %f472, %f2614, %f500;
	.loc	1 153 11                        // prefix_prefill.py:153:11
	bar.sync 	0;
	st.shared.v4.b32 	[%r58], {%r1755, %r1756, %r1757, %r1758};
	.loc	1 169 23                        // prefix_prefill.py:169:23
	// begin inline asm
	fence.proxy.async.shared::cta;
	// end inline asm
	bar.sync 	0;
	shfl.sync.idx.b32	%r797, %r1719, 0, 31, -1;
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	shl.b32 	%r798, %r797, 7;
	and.b32  	%r799, %r798, 384;
	cvt.u64.u32 	%rd314, %r799;
	add.s64 	%rd298, %rd2, %rd314;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f3004,%f3005,%f3006,%f3007,%f3008,%f3009,%f3010,%f3011}, %rd298, %rd3, 0, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd300, %rd4, %rd314;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f3004,%f3005,%f3006,%f3007,%f3008,%f3009,%f3010,%f3011}, %rd300, %rd5, %p437, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd302, %rd6, %rd314;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f3004,%f3005,%f3006,%f3007,%f3008,%f3009,%f3010,%f3011}, %rd302, %rd7, %p437, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd304, %rd8, %rd314;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f3004,%f3005,%f3006,%f3007,%f3008,%f3009,%f3010,%f3011}, %rd304, %rd9, %p437, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd306, %rd10, %rd314;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f3060,%f3061,%f3062,%f3063,%f3064,%f3065,%f3066,%f3067}, %rd306, %rd3, 0, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd308, %rd11, %rd314;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f3060,%f3061,%f3062,%f3063,%f3064,%f3065,%f3066,%f3067}, %rd308, %rd5, %p437, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd310, %rd12, %rd314;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f3060,%f3061,%f3062,%f3063,%f3064,%f3065,%f3066,%f3067}, %rd310, %rd7, %p437, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd312, %rd13, %rd314;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f3060,%f3061,%f3062,%f3063,%f3064,%f3065,%f3066,%f3067}, %rd312, %rd9, %p437, 1, 1, 0, 0;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	// begin inline asm
	// wait for regs: %f3004,%f3005,%f3006,%f3007,%f3008,%f3009,%f3010,%f3011,%f3060,%f3061,%f3062,%f3063,%f3064,%f3065,%f3066,%f3067
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	1 170 55                        // prefix_prefill.py:170:55
	setp.lt.s32 	%p190, %r186, %r5;
	setp.lt.s32 	%p191, %r187, %r5;
	setp.lt.s32 	%p192, %r188, %r5;
	setp.lt.s32 	%p193, %r189, %r5;
	.loc	1 171 22                        // prefix_prefill.py:171:22
	selp.f32 	%f3164, %f3004, 0fFF800000, %p190;
	selp.f32 	%f3165, %f3005, 0fFF800000, %p191;
	selp.f32 	%f3166, %f3006, 0fFF800000, %p190;
	selp.f32 	%f3167, %f3007, 0fFF800000, %p191;
	selp.f32 	%f3168, %f3008, 0fFF800000, %p192;
	selp.f32 	%f3169, %f3009, 0fFF800000, %p193;
	selp.f32 	%f3170, %f3010, 0fFF800000, %p192;
	selp.f32 	%f3171, %f3011, 0fFF800000, %p193;
	selp.f32 	%f3172, %f3060, 0fFF800000, %p190;
	selp.f32 	%f3173, %f3061, 0fFF800000, %p191;
	selp.f32 	%f3174, %f3062, 0fFF800000, %p190;
	selp.f32 	%f3175, %f3063, 0fFF800000, %p191;
	selp.f32 	%f3176, %f3064, 0fFF800000, %p192;
	selp.f32 	%f3177, %f3065, 0fFF800000, %p193;
	selp.f32 	%f3178, %f3066, 0fFF800000, %p192;
	selp.f32 	%f3179, %f3067, 0fFF800000, %p193;
	.loc	1 172 14                        // prefix_prefill.py:172:14
	mul.f32 	%f3180, %f1313, %f3164;
	mul.f32 	%f3181, %f1313, %f3165;
	mul.f32 	%f3182, %f1313, %f3166;
	mul.f32 	%f3183, %f1313, %f3167;
	mul.f32 	%f3184, %f1313, %f3168;
	mul.f32 	%f3185, %f1313, %f3169;
	mul.f32 	%f3186, %f1313, %f3170;
	mul.f32 	%f3187, %f1313, %f3171;
	mul.f32 	%f3188, %f1313, %f3172;
	mul.f32 	%f3189, %f1313, %f3173;
	mul.f32 	%f3190, %f1313, %f3174;
	mul.f32 	%f3191, %f1313, %f3175;
	mul.f32 	%f3192, %f1313, %f3176;
	mul.f32 	%f3193, %f1313, %f3177;
	mul.f32 	%f3194, %f1313, %f3178;
	mul.f32 	%f3195, %f1313, %f3179;
$L__tmp13:
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f3196, %f3180, %f3181;
	max.f32 	%f3197, %f3182, %f3183;
	max.f32 	%f3198, %f3196, %f3184;
	max.f32 	%f3199, %f3198, %f3185;
	max.f32 	%f3200, %f3197, %f3186;
	max.f32 	%f3201, %f3200, %f3187;
	max.f32 	%f3202, %f3188, %f3189;
	max.f32 	%f3203, %f3190, %f3191;
	max.f32 	%f3204, %f3202, %f3192;
	max.f32 	%f3205, %f3204, %f3193;
	max.f32 	%f3206, %f3203, %f3194;
	max.f32 	%f3207, %f3206, %f3195;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r800, %f3199;
	shfl.sync.bfly.b32	%r801, %r800, 2, 31, -1;
	mov.b32 	%f3208, %r801;
	mov.b32 	%r802, %f3201;
	mov.b32 	%r803, %f3205;
	mov.b32 	%r804, %f3207;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f3209, %f3199, %f3208;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r805, %f3209;
	shfl.sync.bfly.b32	%r806, %r805, 1, 31, -1;
	shfl.sync.bfly.b32	%r807, %r802, 2, 31, -1;
	mov.b32 	%f3210, %r807;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f3211, %f3201, %f3210;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r808, %f3211;
	shfl.sync.bfly.b32	%r809, %r808, 1, 31, -1;
	shfl.sync.bfly.b32	%r810, %r803, 2, 31, -1;
	mov.b32 	%f3212, %r810;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f3213, %f3205, %f3212;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r811, %f3213;
	shfl.sync.bfly.b32	%r812, %r811, 1, 31, -1;
	shfl.sync.bfly.b32	%r813, %r804, 2, 31, -1;
	mov.b32 	%f3214, %r813;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f3215, %f3207, %f3214;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r814, %f3215;
	shfl.sync.bfly.b32	%r815, %r814, 1, 31, -1;
	mov.b32 	%f3216, %r815;
	mov.b32 	%f3217, %r812;
	mov.b32 	%f3218, %r809;
	mov.b32 	%f3219, %r806;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f3220, %f3209, %f3219;
	max.f32 	%f3221, %f3211, %f3218;
	max.f32 	%f3222, %f3213, %f3217;
	max.f32 	%f3223, %f3215, %f3216;
$L__tmp14:
	.loc	1 190 31                        // prefix_prefill.py:190:31
	max.f32 	%f5919, %f476, %f3223;
	max.f32 	%f5918, %f475, %f3222;
	max.f32 	%f5917, %f474, %f3221;
	max.f32 	%f5916, %f473, %f3220;
	.loc	1 191 24                        // prefix_prefill.py:191:24
	neg.f32 	%f3224, %f5916;
	fma.rn.f32 	%f3225, %f1313, %f3164, %f3224;
	fma.rn.f32 	%f3226, %f1313, %f3165, %f3224;
	neg.f32 	%f3227, %f5917;
	fma.rn.f32 	%f3228, %f1313, %f3166, %f3227;
	fma.rn.f32 	%f3229, %f1313, %f3167, %f3227;
	fma.rn.f32 	%f3230, %f1313, %f3168, %f3224;
	fma.rn.f32 	%f3231, %f1313, %f3169, %f3224;
	fma.rn.f32 	%f3232, %f1313, %f3170, %f3227;
	fma.rn.f32 	%f3233, %f1313, %f3171, %f3227;
	neg.f32 	%f3234, %f5918;
	fma.rn.f32 	%f3235, %f1313, %f3172, %f3234;
	fma.rn.f32 	%f3236, %f1313, %f3173, %f3234;
	neg.f32 	%f3237, %f5919;
	fma.rn.f32 	%f3238, %f1313, %f3174, %f3237;
	fma.rn.f32 	%f3239, %f1313, %f3175, %f3237;
	fma.rn.f32 	%f3240, %f1313, %f3176, %f3234;
	fma.rn.f32 	%f3241, %f1313, %f3177, %f3234;
	fma.rn.f32 	%f3242, %f1313, %f3178, %f3237;
	fma.rn.f32 	%f3243, %f1313, %f3179, %f3237;
	.loc	1 191 19                        // prefix_prefill.py:191:19
	mul.f32 	%f3125, %f3225, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3124, %f3125;
	// end inline asm
	mul.f32 	%f3127, %f3226, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3126, %f3127;
	// end inline asm
	mul.f32 	%f3129, %f3228, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3128, %f3129;
	// end inline asm
	mul.f32 	%f3131, %f3229, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3130, %f3131;
	// end inline asm
	mul.f32 	%f3133, %f3230, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3132, %f3133;
	// end inline asm
	mul.f32 	%f3135, %f3231, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3134, %f3135;
	// end inline asm
	mul.f32 	%f3137, %f3232, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3136, %f3137;
	// end inline asm
	mul.f32 	%f3139, %f3233, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3138, %f3139;
	// end inline asm
	mul.f32 	%f3141, %f3235, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3140, %f3141;
	// end inline asm
	mul.f32 	%f3143, %f3236, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3142, %f3143;
	// end inline asm
	mul.f32 	%f3145, %f3238, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3144, %f3145;
	// end inline asm
	mul.f32 	%f3147, %f3239, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3146, %f3147;
	// end inline asm
	mul.f32 	%f3149, %f3240, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3148, %f3149;
	// end inline asm
	mul.f32 	%f3151, %f3241, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3150, %f3151;
	// end inline asm
	mul.f32 	%f3153, %f3242, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3152, %f3153;
	// end inline asm
	mul.f32 	%f3155, %f3243, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3154, %f3155;
	// end inline asm
$L__tmp15:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f3244, %f3124, %f3126;
	add.f32 	%f3245, %f3128, %f3130;
	add.f32 	%f3246, %f3244, %f3132;
	add.f32 	%f3247, %f3246, %f3134;
	add.f32 	%f3248, %f3245, %f3136;
	add.f32 	%f3249, %f3248, %f3138;
	add.f32 	%f3250, %f3140, %f3142;
	add.f32 	%f3251, %f3144, %f3146;
	add.f32 	%f3252, %f3250, %f3148;
	add.f32 	%f3253, %f3252, %f3150;
	add.f32 	%f3254, %f3251, %f3152;
	add.f32 	%f3255, %f3254, %f3154;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r816, %f3247;
	shfl.sync.bfly.b32	%r817, %r816, 2, 31, -1;
	mov.b32 	%f3256, %r817;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f3257, %f3247, %f3256;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r818, %f3257;
	shfl.sync.bfly.b32	%r819, %r818, 1, 31, -1;
	mov.b32 	%r820, %f3249;
	shfl.sync.bfly.b32	%r821, %r820, 2, 31, -1;
	mov.b32 	%f3258, %r821;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f3259, %f3249, %f3258;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r822, %f3259;
	shfl.sync.bfly.b32	%r823, %r822, 1, 31, -1;
	mov.b32 	%r824, %f3253;
	shfl.sync.bfly.b32	%r825, %r824, 2, 31, -1;
	mov.b32 	%f3260, %r825;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f3261, %f3253, %f3260;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r826, %f3261;
	shfl.sync.bfly.b32	%r827, %r826, 1, 31, -1;
	mov.b32 	%r828, %f3255;
	shfl.sync.bfly.b32	%r829, %r828, 2, 31, -1;
	mov.b32 	%f3262, %r829;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f3263, %f3255, %f3262;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r830, %f3263;
	shfl.sync.bfly.b32	%r831, %r830, 1, 31, -1;
	mov.b32 	%f3264, %r831;
	mov.b32 	%f3265, %r827;
	mov.b32 	%f3266, %r823;
	mov.b32 	%f3267, %r819;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f657, %f3257, %f3267;
	add.f32 	%f658, %f3259, %f3266;
	add.f32 	%f659, %f3261, %f3265;
	add.f32 	%f660, %f3263, %f3264;
$L__tmp16:
	.loc	1 193 29                        // prefix_prefill.py:193:29
	sub.f32 	%f3268, %f473, %f5916;
	sub.f32 	%f3269, %f474, %f5917;
	sub.f32 	%f3270, %f475, %f5918;
	sub.f32 	%f3271, %f476, %f5919;
	.loc	1 193 23                        // prefix_prefill.py:193:23
	mul.f32 	%f3157, %f3268, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3156, %f3157;
	// end inline asm
	mul.f32 	%f3159, %f3269, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3158, %f3159;
	// end inline asm
	mul.f32 	%f3161, %f3270, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3160, %f3161;
	// end inline asm
	mul.f32 	%f3163, %f3271, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3162, %f3163;
	// end inline asm
	.loc	1 194 20                        // prefix_prefill.py:194:20
	mul.f32 	%f5924, %f2852, %f3156;
	mul.f32 	%f5925, %f2853, %f3156;
	mul.f32 	%f5926, %f2854, %f3158;
	mul.f32 	%f5927, %f2855, %f3158;
	mul.f32 	%f5928, %f2856, %f3156;
	mul.f32 	%f5929, %f2857, %f3156;
	mul.f32 	%f5930, %f2858, %f3158;
	mul.f32 	%f5931, %f2859, %f3158;
	mul.f32 	%f5932, %f2860, %f3156;
	mul.f32 	%f5933, %f2861, %f3156;
	mul.f32 	%f5934, %f2862, %f3158;
	mul.f32 	%f5935, %f2863, %f3158;
	mul.f32 	%f5936, %f2864, %f3156;
	mul.f32 	%f5937, %f2865, %f3156;
	mul.f32 	%f5938, %f2866, %f3158;
	mul.f32 	%f5939, %f2867, %f3158;
	mul.f32 	%f5940, %f2868, %f3156;
	mul.f32 	%f5941, %f2869, %f3156;
	mul.f32 	%f5942, %f2870, %f3158;
	mul.f32 	%f5943, %f2871, %f3158;
	mul.f32 	%f5944, %f2872, %f3156;
	mul.f32 	%f5945, %f2873, %f3156;
	mul.f32 	%f5946, %f2874, %f3158;
	mul.f32 	%f5947, %f2875, %f3158;
	mul.f32 	%f5948, %f2876, %f3156;
	mul.f32 	%f5949, %f2877, %f3156;
	mul.f32 	%f5950, %f2878, %f3158;
	mul.f32 	%f5951, %f2879, %f3158;
	mul.f32 	%f5952, %f2880, %f3156;
	mul.f32 	%f5953, %f2881, %f3156;
	mul.f32 	%f5954, %f2882, %f3158;
	mul.f32 	%f5955, %f2883, %f3158;
	mul.f32 	%f5956, %f2884, %f3160;
	mul.f32 	%f5957, %f2885, %f3160;
	mul.f32 	%f5958, %f2886, %f3162;
	mul.f32 	%f5959, %f2887, %f3162;
	mul.f32 	%f5960, %f2888, %f3160;
	mul.f32 	%f5961, %f2889, %f3160;
	mul.f32 	%f5962, %f2890, %f3162;
	mul.f32 	%f5963, %f2891, %f3162;
	mul.f32 	%f5964, %f2892, %f3160;
	mul.f32 	%f5965, %f2893, %f3160;
	mul.f32 	%f5966, %f2894, %f3162;
	mul.f32 	%f5967, %f2895, %f3162;
	mul.f32 	%f5968, %f2896, %f3160;
	mul.f32 	%f5969, %f2897, %f3160;
	mul.f32 	%f5970, %f2898, %f3162;
	mul.f32 	%f5971, %f2899, %f3162;
	mul.f32 	%f5972, %f2900, %f3160;
	mul.f32 	%f5973, %f2901, %f3160;
	mul.f32 	%f5974, %f2902, %f3162;
	mul.f32 	%f5975, %f2903, %f3162;
	mul.f32 	%f5976, %f2904, %f3160;
	mul.f32 	%f5977, %f2905, %f3160;
	mul.f32 	%f5978, %f2906, %f3162;
	mul.f32 	%f5979, %f2907, %f3162;
	mul.f32 	%f5980, %f2908, %f3160;
	mul.f32 	%f5981, %f2909, %f3160;
	mul.f32 	%f5982, %f2910, %f3162;
	mul.f32 	%f5983, %f2911, %f3162;
	mul.f32 	%f5984, %f2912, %f3160;
	mul.f32 	%f5985, %f2913, %f3160;
	mul.f32 	%f5986, %f2914, %f3162;
	mul.f32 	%f5987, %f2915, %f3162;
	mul.wide.s32 	%rd529, %r191, 2;
	.loc	1 197 11                        // prefix_prefill.py:197:11
	@%p176 bra 	$L__BB0_29;
	bra.uni 	$L__BB0_28;
$L__BB0_29:                             //   in Loop: Header=BB0_2 Depth=1
	.loc	1 205 39                        // prefix_prefill.py:205:39
	add.s64 	%rd315, %rd136, %rd529;
	.loc	1 205 29                        // prefix_prefill.py:205:29
	// begin inline asm
	mov.u32 %r1759, 0x0;
	mov.u32 %r1760, 0x0;
	mov.u32 %r1761, 0x0;
	mov.u32 %r1762, 0x0;
	@%p437 ld.global.v4.b32 { %r1759, %r1760, %r1761, %r1762 }, [ %rd315 + 0 ];
	// end inline asm
	bra.uni 	$L__BB0_30;
$L__BB0_4:                              // %.preheader
	.loc	1 135 28                        // prefix_prefill.py:135:28
	setp.ge.s32 	%p214, %r1763, %r5;
	@%p214 bra 	$L__BB0_36;
// %bb.5:                               // %.lr.ph389
	.loc	1 0 28                          // prefix_prefill.py:0:28
	add.s32 	%r883, %r416, 16384;
	add.s32 	%r66, %r883, %r415;
	shr.u32 	%r884, %r416, 4;
	cvt.u64.u32 	%rd335, %r884;
	and.b64  	%rd336, %rd335, 16383;
	or.b64  	%rd15, %rd336, 4611686293372403712;
	shr.u32 	%r885, %r883, 4;
	cvt.u64.u32 	%rd337, %r885;
	and.b64  	%rd338, %rd337, 16383;
	or.b64  	%rd16, %rd338, 4611686293313683456;
	add.s64 	%rd17, %rd336, 4611686293372403714;
	add.s64 	%rd18, %rd338, 4611686293313683458;
	add.s64 	%rd19, %rd336, 4611686293372403716;
	add.s64 	%rd20, %rd338, 4611686293313683460;
	add.s64 	%rd21, %rd336, 4611686293372403718;
	add.s64 	%rd22, %rd338, 4611686293313683462;
	add.s64 	%rd23, %rd336, 4611686293372404224;
	add.s64 	%rd24, %rd336, 4611686293372404226;
	add.s64 	%rd25, %rd336, 4611686293372404228;
	add.s64 	%rd26, %rd336, 4611686293372404230;
	add.s32 	%r68, %r883, %r1720;
	add.s32 	%r69, %r883, %r1721;
	shl.b32 	%r889, %r1722, 1;
	or.b32  	%r891, %r1723, %r889;
	add.s32 	%r70, %r883, %r891;
	or.b64  	%rd27, %rd338, -4611685949699522560;
	mov.f32 	%f5992, %f5916;
	mov.f32 	%f5993, %f5917;
	mov.f32 	%f5994, %f5918;
	mov.f32 	%f5995, %f5919;
	bra.uni 	$L__BB0_6;
$L__BB0_34:                             //   in Loop: Header=BB0_6 Depth=1
	.loc	1 205 39                        // prefix_prefill.py:205:39
	mul.wide.s32 	%rd363, %r231, 2;
	add.s64 	%rd362, %rd136, %rd363;
	.loc	1 205 29                        // prefix_prefill.py:205:29
	// begin inline asm
	mov.u32 %r1768, 0x0;
	mov.u32 %r1769, 0x0;
	mov.u32 %r1770, 0x0;
	mov.u32 %r1771, 0x0;
	@%p437 ld.global.v4.b32 { %r1768, %r1769, %r1770, %r1771 }, [ %rd362 + 0 ];
	// end inline asm
$L__BB0_35:                             //   in Loop: Header=BB0_6 Depth=1
	.loc	1 197 11                        // prefix_prefill.py:197:11
	bar.sync 	0;
	st.shared.v4.b32 	[%r70], {%r1768, %r1769, %r1770, %r1771};
	.loc	1 211 17                        // prefix_prefill.py:211:17
	mov.b32 	%r1001, %f3672;
	// begin inline asm
	cvt.rn.bf16.f32 %rs209, %r1001;
	// end inline asm
	mov.b32 	%r1002, %f3674;
	// begin inline asm
	cvt.rn.bf16.f32 %rs210, %r1002;
	// end inline asm
	mov.b32 	%r1003, %f3676;
	// begin inline asm
	cvt.rn.bf16.f32 %rs211, %r1003;
	// end inline asm
	mov.b32 	%r1004, %f3678;
	// begin inline asm
	cvt.rn.bf16.f32 %rs212, %r1004;
	// end inline asm
	mov.b32 	%r1005, %f3680;
	// begin inline asm
	cvt.rn.bf16.f32 %rs213, %r1005;
	// end inline asm
	mov.b32 	%r1006, %f3682;
	// begin inline asm
	cvt.rn.bf16.f32 %rs214, %r1006;
	// end inline asm
	mov.b32 	%r1007, %f3684;
	// begin inline asm
	cvt.rn.bf16.f32 %rs215, %r1007;
	// end inline asm
	mov.b32 	%r1008, %f3686;
	// begin inline asm
	cvt.rn.bf16.f32 %rs216, %r1008;
	// end inline asm
	mov.b32 	%r1009, %f3688;
	// begin inline asm
	cvt.rn.bf16.f32 %rs217, %r1009;
	// end inline asm
	mov.b32 	%r1010, %f3690;
	// begin inline asm
	cvt.rn.bf16.f32 %rs218, %r1010;
	// end inline asm
	mov.b32 	%r1011, %f3692;
	// begin inline asm
	cvt.rn.bf16.f32 %rs219, %r1011;
	// end inline asm
	mov.b32 	%r1012, %f3694;
	// begin inline asm
	cvt.rn.bf16.f32 %rs220, %r1012;
	// end inline asm
	mov.b32 	%r1013, %f3696;
	// begin inline asm
	cvt.rn.bf16.f32 %rs221, %r1013;
	// end inline asm
	mov.b32 	%r1014, %f3698;
	// begin inline asm
	cvt.rn.bf16.f32 %rs222, %r1014;
	// end inline asm
	mov.b32 	%r1015, %f3700;
	// begin inline asm
	cvt.rn.bf16.f32 %rs223, %r1015;
	// end inline asm
	mov.b32 	%r1016, %f3702;
	// begin inline asm
	cvt.rn.bf16.f32 %rs224, %r1016;
	// end inline asm
	.loc	1 213 24                        // prefix_prefill.py:213:24
	// begin inline asm
	fence.proxy.async.shared::cta;
	// end inline asm
	bar.sync 	0;
	mov.b32 	%r1025, {%rs209, %rs210};
	mov.b32 	%r1026, {%rs211, %rs212};
	mov.b32 	%r1027, {%rs213, %rs214};
	mov.b32 	%r1028, {%rs215, %rs216};
	mov.b32 	%r1029, {%rs217, %rs218};
	mov.b32 	%r1030, {%rs219, %rs220};
	mov.b32 	%r1031, {%rs221, %rs222};
	mov.b32 	%r1032, {%rs223, %rs224};
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f5924,%f5925,%f5926,%f5927,%f5928,%f5929,%f5930,%f5931,%f5932,%f5933,%f5934,%f5935,%f5936,%f5937,%f5938,%f5939,%f5940,%f5941,%f5942,%f5943,%f5944,%f5945,%f5946,%f5947,%f5948,%f5949,%f5950,%f5951,%f5952,%f5953,%f5954,%f5955}, {%r1025,%r1026,%r1027,%r1028}, %rd27, %p437, 1, 1, 0;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f5956,%f5957,%f5958,%f5959,%f5960,%f5961,%f5962,%f5963,%f5964,%f5965,%f5966,%f5967,%f5968,%f5969,%f5970,%f5971,%f5972,%f5973,%f5974,%f5975,%f5976,%f5977,%f5978,%f5979,%f5980,%f5981,%f5982,%f5983,%f5984,%f5985,%f5986,%f5987}, {%r1029,%r1030,%r1031,%r1032}, %rd27, %p437, 1, 1, 0;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	// begin inline asm
	// wait for regs: %f5924,%f5925,%f5926,%f5927,%f5928,%f5929,%f5930,%f5931,%f5932,%f5933,%f5934,%f5935,%f5936,%f5937,%f5938,%f5939,%f5940,%f5941,%f5942,%f5943,%f5944,%f5945,%f5946,%f5947,%f5948,%f5949,%f5950,%f5951,%f5952,%f5953,%f5954,%f5955,%f5956,%f5957,%f5958,%f5959,%f5960,%f5961,%f5962,%f5963,%f5964,%f5965,%f5966,%f5967,%f5968,%f5969,%f5970,%f5971,%f5972,%f5973,%f5974,%f5975,%f5976,%f5977,%f5978,%f5979,%f5980,%f5981,%f5982,%f5983,%f5984,%f5985,%f5986,%f5987
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	1 215 28                        // prefix_prefill.py:215:28
	fma.rn.f32 	%f6060, %f6060, %f3704, %f889;
	fma.rn.f32 	%f6061, %f6061, %f3706, %f890;
	fma.rn.f32 	%f6062, %f6062, %f3708, %f891;
	fma.rn.f32 	%f6063, %f6063, %f3710, %f892;
	.loc	1 135 28                        // prefix_prefill.py:135:28
	setp.lt.s32 	%p269, %r239, %r5;
	mov.u32 	%r1763, %r239;
	mov.f32 	%f5992, %f5916;
	mov.f32 	%f5993, %f5917;
	mov.f32 	%f5994, %f5918;
	mov.f32 	%f5995, %f5919;
	@%p269 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_36;
$L__BB0_6:                              // =>This Inner Loop Header: Depth=1
	.loc	1 139 33                        // prefix_prefill.py:139:33
	shr.s32 	%r893, %r1763, 4;
	.loc	1 139 21                        // prefix_prefill.py:139:21
	mul.wide.s32 	%rd340, %r893, 4;
	add.s64 	%rd339, %rd1, %rd340;
	.loc	1 138 21                        // prefix_prefill.py:138:21
	// begin inline asm
	mov.u32 %r892, 0x0;
	@%p437 ld.global.b32 { %r892 }, [ %rd339 + 0 ];
	// end inline asm
	.loc	1 144 24                        // prefix_prefill.py:144:24
	add.s32 	%r225, %r16, %r1763;
	add.s32 	%r226, %r42, %r1763;
	add.s32 	%r227, %r226, 1;
	add.s32 	%r228, %r226, 8;
	.loc	1 144 46                        // prefix_prefill.py:144:46
	add.s32 	%r229, %r226, 9;
	shr.s32 	%r894, %r225, 31;
	shr.u32 	%r895, %r894, 28;
	add.s32 	%r896, %r225, %r895;
	and.b32  	%r897, %r896, 536870896;
	sub.s32 	%r898, %r225, %r897;
	.loc	1 144 60                        // prefix_prefill.py:144:60
	shl.b32 	%r899, %r898, 3;
	.loc	1 143 12                        // prefix_prefill.py:143:12
	add.s32 	%r900, %r1717, %r899;
	.loc	1 144 12                        // prefix_prefill.py:144:12
	mad.lo.s32 	%r230, %r892, %r281, %r900;
	.loc	1 150 17                        // prefix_prefill.py:150:17
	mad.lo.s32 	%r901, %r892, %r282, %r1718;
	.loc	1 153 21                        // prefix_prefill.py:153:21
	add.s32 	%r239, %r1763, 16;
	.loc	1 153 34                        // prefix_prefill.py:153:34
	setp.le.s32 	%p216, %r239, %r5;
	@%p216 bra 	$L__BB0_31;
// %bb.7:                               //   in Loop: Header=BB0_6 Depth=1
	.loc	1 158 50                        // prefix_prefill.py:158:50
	setp.lt.s32 	%p218, %r225, %r5;
	.loc	1 156 26                        // prefix_prefill.py:156:26
	mul.wide.s32 	%rd344, %r230, 2;
	add.s64 	%rd343, %rd135, %rd344;
	.loc	1 156 16                        // prefix_prefill.py:156:16
	// begin inline asm
	mov.u32 %r1764, 0x0;
	mov.u32 %r1765, 0x0;
	mov.u32 %r1766, 0x0;
	mov.u32 %r1767, 0x0;
	@%p218 ld.global.v4.b32 { %r1764, %r1765, %r1766, %r1767 }, [ %rd343 + 0 ];
	@!%p218 mov.u32 %r1764, %r293;
	@!%p218 mov.u32 %r1765, %r293;
	@!%p218 mov.u32 %r1766, %r293;
	@!%p218 mov.u32 %r1767, %r293;
	// end inline asm
	.loc	1 153 11                        // prefix_prefill.py:153:11
	bra.uni 	$L__BB0_32;
$L__BB0_31:                             //   in Loop: Header=BB0_6 Depth=1
	.loc	1 161 39                        // prefix_prefill.py:161:39
	mul.wide.s32 	%rd342, %r230, 2;
	add.s64 	%rd341, %rd135, %rd342;
	.loc	1 161 29                        // prefix_prefill.py:161:29
	// begin inline asm
	mov.u32 %r1764, 0x0;
	mov.u32 %r1765, 0x0;
	mov.u32 %r1766, 0x0;
	mov.u32 %r1767, 0x0;
	@%p437 ld.global.v4.b32 { %r1764, %r1765, %r1766, %r1767 }, [ %rd341 + 0 ];
	// end inline asm
$L__BB0_32:                             //   in Loop: Header=BB0_6 Depth=1
	.loc	1 0 0                           // prefix_prefill.py:0:0
	add.s32 	%r231, %r901, %r9;
	.loc	1 153 11                        // prefix_prefill.py:153:11
	bar.sync 	0;
	st.shared.v4.b32 	[%r66], {%r1764, %r1765, %r1766, %r1767};
	.loc	1 169 23                        // prefix_prefill.py:169:23
	// begin inline asm
	fence.proxy.async.shared::cta;
	// end inline asm
	bar.sync 	0;
	shfl.sync.idx.b32	%r950, %r1719, 0, 31, -1;
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	shl.b32 	%r951, %r950, 7;
	and.b32  	%r952, %r951, 384;
	cvt.u64.u32 	%rd361, %r952;
	add.s64 	%rd345, %rd15, %rd361;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f3552,%f3553,%f3554,%f3555,%f3556,%f3557,%f3558,%f3559}, %rd345, %rd16, 0, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd347, %rd17, %rd361;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f3552,%f3553,%f3554,%f3555,%f3556,%f3557,%f3558,%f3559}, %rd347, %rd18, %p437, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd349, %rd19, %rd361;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f3552,%f3553,%f3554,%f3555,%f3556,%f3557,%f3558,%f3559}, %rd349, %rd20, %p437, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd351, %rd21, %rd361;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f3552,%f3553,%f3554,%f3555,%f3556,%f3557,%f3558,%f3559}, %rd351, %rd22, %p437, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd353, %rd23, %rd361;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f3608,%f3609,%f3610,%f3611,%f3612,%f3613,%f3614,%f3615}, %rd353, %rd16, 0, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd355, %rd24, %rd361;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f3608,%f3609,%f3610,%f3611,%f3612,%f3613,%f3614,%f3615}, %rd355, %rd18, %p437, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd357, %rd25, %rd361;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f3608,%f3609,%f3610,%f3611,%f3612,%f3613,%f3614,%f3615}, %rd357, %rd20, %p437, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd359, %rd26, %rd361;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f3608,%f3609,%f3610,%f3611,%f3612,%f3613,%f3614,%f3615}, %rd359, %rd22, %p437, 1, 1, 0, 0;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	// begin inline asm
	// wait for regs: %f3552,%f3553,%f3554,%f3555,%f3556,%f3557,%f3558,%f3559,%f3608,%f3609,%f3610,%f3611,%f3612,%f3613,%f3614,%f3615
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	1 170 55                        // prefix_prefill.py:170:55
	setp.lt.s32 	%p246, %r226, %r5;
	setp.lt.s32 	%p247, %r227, %r5;
	setp.lt.s32 	%p248, %r228, %r5;
	setp.lt.s32 	%p249, %r229, %r5;
	.loc	1 171 22                        // prefix_prefill.py:171:22
	selp.f32 	%f3712, %f3552, 0fFF800000, %p246;
	selp.f32 	%f3713, %f3553, 0fFF800000, %p247;
	selp.f32 	%f3714, %f3554, 0fFF800000, %p246;
	selp.f32 	%f3715, %f3555, 0fFF800000, %p247;
	selp.f32 	%f3716, %f3556, 0fFF800000, %p248;
	selp.f32 	%f3717, %f3557, 0fFF800000, %p249;
	selp.f32 	%f3718, %f3558, 0fFF800000, %p248;
	selp.f32 	%f3719, %f3559, 0fFF800000, %p249;
	selp.f32 	%f3720, %f3608, 0fFF800000, %p246;
	selp.f32 	%f3721, %f3609, 0fFF800000, %p247;
	selp.f32 	%f3722, %f3610, 0fFF800000, %p246;
	selp.f32 	%f3723, %f3611, 0fFF800000, %p247;
	selp.f32 	%f3724, %f3612, 0fFF800000, %p248;
	selp.f32 	%f3725, %f3613, 0fFF800000, %p249;
	selp.f32 	%f3726, %f3614, 0fFF800000, %p248;
	selp.f32 	%f3727, %f3615, 0fFF800000, %p249;
	.loc	1 172 14                        // prefix_prefill.py:172:14
	mul.f32 	%f3728, %f1313, %f3712;
	mul.f32 	%f3729, %f1313, %f3713;
	mul.f32 	%f3730, %f1313, %f3714;
	mul.f32 	%f3731, %f1313, %f3715;
	mul.f32 	%f3732, %f1313, %f3716;
	mul.f32 	%f3733, %f1313, %f3717;
	mul.f32 	%f3734, %f1313, %f3718;
	mul.f32 	%f3735, %f1313, %f3719;
	mul.f32 	%f3736, %f1313, %f3720;
	mul.f32 	%f3737, %f1313, %f3721;
	mul.f32 	%f3738, %f1313, %f3722;
	mul.f32 	%f3739, %f1313, %f3723;
	mul.f32 	%f3740, %f1313, %f3724;
	mul.f32 	%f3741, %f1313, %f3725;
	mul.f32 	%f3742, %f1313, %f3726;
	mul.f32 	%f3743, %f1313, %f3727;
$L__tmp17:
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f3744, %f3728, %f3729;
	max.f32 	%f3745, %f3730, %f3731;
	max.f32 	%f3746, %f3744, %f3732;
	max.f32 	%f3747, %f3746, %f3733;
	max.f32 	%f3748, %f3745, %f3734;
	max.f32 	%f3749, %f3748, %f3735;
	max.f32 	%f3750, %f3736, %f3737;
	max.f32 	%f3751, %f3738, %f3739;
	max.f32 	%f3752, %f3750, %f3740;
	max.f32 	%f3753, %f3752, %f3741;
	max.f32 	%f3754, %f3751, %f3742;
	max.f32 	%f3755, %f3754, %f3743;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r953, %f3747;
	shfl.sync.bfly.b32	%r954, %r953, 2, 31, -1;
	mov.b32 	%f3756, %r954;
	mov.b32 	%r955, %f3749;
	mov.b32 	%r956, %f3753;
	mov.b32 	%r957, %f3755;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f3757, %f3747, %f3756;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r958, %f3757;
	shfl.sync.bfly.b32	%r959, %r958, 1, 31, -1;
	shfl.sync.bfly.b32	%r960, %r955, 2, 31, -1;
	mov.b32 	%f3758, %r960;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f3759, %f3749, %f3758;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r961, %f3759;
	shfl.sync.bfly.b32	%r962, %r961, 1, 31, -1;
	shfl.sync.bfly.b32	%r963, %r956, 2, 31, -1;
	mov.b32 	%f3760, %r963;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f3761, %f3753, %f3760;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r964, %f3761;
	shfl.sync.bfly.b32	%r965, %r964, 1, 31, -1;
	shfl.sync.bfly.b32	%r966, %r957, 2, 31, -1;
	mov.b32 	%f3762, %r966;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f3763, %f3755, %f3762;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r967, %f3763;
	shfl.sync.bfly.b32	%r968, %r967, 1, 31, -1;
	mov.b32 	%f3764, %r968;
	mov.b32 	%f3765, %r965;
	mov.b32 	%f3766, %r962;
	mov.b32 	%f3767, %r959;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f3768, %f3757, %f3767;
	max.f32 	%f3769, %f3759, %f3766;
	max.f32 	%f3770, %f3761, %f3765;
	max.f32 	%f3771, %f3763, %f3764;
$L__tmp18:
	.loc	1 190 31                        // prefix_prefill.py:190:31
	max.f32 	%f5919, %f5995, %f3771;
	max.f32 	%f5918, %f5994, %f3770;
	max.f32 	%f5917, %f5993, %f3769;
	max.f32 	%f5916, %f5992, %f3768;
	.loc	1 191 24                        // prefix_prefill.py:191:24
	neg.f32 	%f3772, %f5916;
	fma.rn.f32 	%f3773, %f1313, %f3712, %f3772;
	fma.rn.f32 	%f3774, %f1313, %f3713, %f3772;
	neg.f32 	%f3775, %f5917;
	fma.rn.f32 	%f3776, %f1313, %f3714, %f3775;
	fma.rn.f32 	%f3777, %f1313, %f3715, %f3775;
	fma.rn.f32 	%f3778, %f1313, %f3716, %f3772;
	fma.rn.f32 	%f3779, %f1313, %f3717, %f3772;
	fma.rn.f32 	%f3780, %f1313, %f3718, %f3775;
	fma.rn.f32 	%f3781, %f1313, %f3719, %f3775;
	neg.f32 	%f3782, %f5918;
	fma.rn.f32 	%f3783, %f1313, %f3720, %f3782;
	fma.rn.f32 	%f3784, %f1313, %f3721, %f3782;
	neg.f32 	%f3785, %f5919;
	fma.rn.f32 	%f3786, %f1313, %f3722, %f3785;
	fma.rn.f32 	%f3787, %f1313, %f3723, %f3785;
	fma.rn.f32 	%f3788, %f1313, %f3724, %f3782;
	fma.rn.f32 	%f3789, %f1313, %f3725, %f3782;
	fma.rn.f32 	%f3790, %f1313, %f3726, %f3785;
	fma.rn.f32 	%f3791, %f1313, %f3727, %f3785;
	.loc	1 191 19                        // prefix_prefill.py:191:19
	mul.f32 	%f3673, %f3773, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3672, %f3673;
	// end inline asm
	mul.f32 	%f3675, %f3774, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3674, %f3675;
	// end inline asm
	mul.f32 	%f3677, %f3776, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3676, %f3677;
	// end inline asm
	mul.f32 	%f3679, %f3777, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3678, %f3679;
	// end inline asm
	mul.f32 	%f3681, %f3778, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3680, %f3681;
	// end inline asm
	mul.f32 	%f3683, %f3779, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3682, %f3683;
	// end inline asm
	mul.f32 	%f3685, %f3780, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3684, %f3685;
	// end inline asm
	mul.f32 	%f3687, %f3781, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3686, %f3687;
	// end inline asm
	mul.f32 	%f3689, %f3783, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3688, %f3689;
	// end inline asm
	mul.f32 	%f3691, %f3784, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3690, %f3691;
	// end inline asm
	mul.f32 	%f3693, %f3786, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3692, %f3693;
	// end inline asm
	mul.f32 	%f3695, %f3787, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3694, %f3695;
	// end inline asm
	mul.f32 	%f3697, %f3788, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3696, %f3697;
	// end inline asm
	mul.f32 	%f3699, %f3789, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3698, %f3699;
	// end inline asm
	mul.f32 	%f3701, %f3790, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3700, %f3701;
	// end inline asm
	mul.f32 	%f3703, %f3791, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3702, %f3703;
	// end inline asm
$L__tmp19:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f3792, %f3672, %f3674;
	add.f32 	%f3793, %f3676, %f3678;
	add.f32 	%f3794, %f3792, %f3680;
	add.f32 	%f3795, %f3794, %f3682;
	add.f32 	%f3796, %f3793, %f3684;
	add.f32 	%f3797, %f3796, %f3686;
	add.f32 	%f3798, %f3688, %f3690;
	add.f32 	%f3799, %f3692, %f3694;
	add.f32 	%f3800, %f3798, %f3696;
	add.f32 	%f3801, %f3800, %f3698;
	add.f32 	%f3802, %f3799, %f3700;
	add.f32 	%f3803, %f3802, %f3702;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r969, %f3795;
	shfl.sync.bfly.b32	%r970, %r969, 2, 31, -1;
	mov.b32 	%f3804, %r970;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f3805, %f3795, %f3804;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r971, %f3805;
	shfl.sync.bfly.b32	%r972, %r971, 1, 31, -1;
	mov.b32 	%r973, %f3797;
	shfl.sync.bfly.b32	%r974, %r973, 2, 31, -1;
	mov.b32 	%f3806, %r974;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f3807, %f3797, %f3806;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r975, %f3807;
	shfl.sync.bfly.b32	%r976, %r975, 1, 31, -1;
	mov.b32 	%r977, %f3801;
	shfl.sync.bfly.b32	%r978, %r977, 2, 31, -1;
	mov.b32 	%f3808, %r978;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f3809, %f3801, %f3808;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r979, %f3809;
	shfl.sync.bfly.b32	%r980, %r979, 1, 31, -1;
	mov.b32 	%r981, %f3803;
	shfl.sync.bfly.b32	%r982, %r981, 2, 31, -1;
	mov.b32 	%f3810, %r982;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f3811, %f3803, %f3810;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r983, %f3811;
	shfl.sync.bfly.b32	%r984, %r983, 1, 31, -1;
	mov.b32 	%f3812, %r984;
	mov.b32 	%f3813, %r980;
	mov.b32 	%f3814, %r976;
	mov.b32 	%f3815, %r972;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f889, %f3805, %f3815;
	add.f32 	%f890, %f3807, %f3814;
	add.f32 	%f891, %f3809, %f3813;
	add.f32 	%f892, %f3811, %f3812;
$L__tmp20:
	.loc	1 193 29                        // prefix_prefill.py:193:29
	sub.f32 	%f3816, %f5995, %f5919;
	sub.f32 	%f3817, %f5994, %f5918;
	sub.f32 	%f3818, %f5993, %f5917;
	sub.f32 	%f3819, %f5992, %f5916;
	.loc	1 193 23                        // prefix_prefill.py:193:23
	mul.f32 	%f3705, %f3819, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3704, %f3705;
	// end inline asm
	mul.f32 	%f3707, %f3818, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3706, %f3707;
	// end inline asm
	mul.f32 	%f3709, %f3817, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3708, %f3709;
	// end inline asm
	mul.f32 	%f3711, %f3816, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3710, %f3711;
	// end inline asm
	.loc	1 194 20                        // prefix_prefill.py:194:20
	bar.sync 	0;
	mov.b32 	%r915, %f3704;
	// begin inline asm
	@%p437 st.shared.b32 [ %r68 + 0 ], %r915;
	// end inline asm
	// begin inline asm
	@%p437 st.shared.b32 [ %r68 + 0 ], %r915;
	// end inline asm
	mov.b32 	%r919, %f3706;
	// begin inline asm
	@%p437 st.shared.b32 [ %r69 + 0 ], %r919;
	// end inline asm
	// begin inline asm
	@%p437 st.shared.b32 [ %r69 + 0 ], %r919;
	// end inline asm
	// begin inline asm
	@%p437 st.shared.b32 [ %r68 + 0 ], %r915;
	// end inline asm
	// begin inline asm
	@%p437 st.shared.b32 [ %r68 + 0 ], %r915;
	// end inline asm
	// begin inline asm
	@%p437 st.shared.b32 [ %r69 + 0 ], %r919;
	// end inline asm
	// begin inline asm
	@%p437 st.shared.b32 [ %r69 + 0 ], %r919;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f3820, [%r68];
	ld.shared.f32 	%f3821, [%r69];
	bar.sync 	0;
	mov.b32 	%r931, %f3708;
	// begin inline asm
	@%p437 st.shared.b32 [ %r68 + 0 ], %r931;
	// end inline asm
	// begin inline asm
	@%p437 st.shared.b32 [ %r68 + 0 ], %r931;
	// end inline asm
	mov.b32 	%r935, %f3710;
	// begin inline asm
	@%p437 st.shared.b32 [ %r69 + 0 ], %r935;
	// end inline asm
	// begin inline asm
	@%p437 st.shared.b32 [ %r69 + 0 ], %r935;
	// end inline asm
	// begin inline asm
	@%p437 st.shared.b32 [ %r68 + 0 ], %r931;
	// end inline asm
	// begin inline asm
	@%p437 st.shared.b32 [ %r68 + 0 ], %r931;
	// end inline asm
	// begin inline asm
	@%p437 st.shared.b32 [ %r69 + 0 ], %r935;
	// end inline asm
	// begin inline asm
	@%p437 st.shared.b32 [ %r69 + 0 ], %r935;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f3822, [%r68];
	ld.shared.f32 	%f3823, [%r69];
	mul.f32 	%f5924, %f5924, %f3820;
	mul.f32 	%f5925, %f5925, %f3820;
	mul.f32 	%f5926, %f5926, %f3821;
	mul.f32 	%f5927, %f5927, %f3821;
	mul.f32 	%f5928, %f5928, %f3820;
	mul.f32 	%f5929, %f5929, %f3820;
	mul.f32 	%f5930, %f5930, %f3821;
	mul.f32 	%f5931, %f5931, %f3821;
	mul.f32 	%f5932, %f5932, %f3820;
	mul.f32 	%f5933, %f5933, %f3820;
	mul.f32 	%f5934, %f5934, %f3821;
	mul.f32 	%f5935, %f5935, %f3821;
	mul.f32 	%f5936, %f5936, %f3820;
	mul.f32 	%f5937, %f5937, %f3820;
	mul.f32 	%f5938, %f5938, %f3821;
	mul.f32 	%f5939, %f5939, %f3821;
	mul.f32 	%f5940, %f5940, %f3820;
	mul.f32 	%f5941, %f5941, %f3820;
	mul.f32 	%f5942, %f5942, %f3821;
	mul.f32 	%f5943, %f5943, %f3821;
	mul.f32 	%f5944, %f5944, %f3820;
	mul.f32 	%f5945, %f5945, %f3820;
	mul.f32 	%f5946, %f5946, %f3821;
	mul.f32 	%f5947, %f5947, %f3821;
	mul.f32 	%f5948, %f5948, %f3820;
	mul.f32 	%f5949, %f5949, %f3820;
	mul.f32 	%f5950, %f5950, %f3821;
	mul.f32 	%f5951, %f5951, %f3821;
	mul.f32 	%f5952, %f5952, %f3820;
	mul.f32 	%f5953, %f5953, %f3820;
	mul.f32 	%f5954, %f5954, %f3821;
	mul.f32 	%f5955, %f5955, %f3821;
	mul.f32 	%f5956, %f5956, %f3822;
	mul.f32 	%f5957, %f5957, %f3822;
	mul.f32 	%f5958, %f5958, %f3823;
	mul.f32 	%f5959, %f5959, %f3823;
	mul.f32 	%f5960, %f5960, %f3822;
	mul.f32 	%f5961, %f5961, %f3822;
	mul.f32 	%f5962, %f5962, %f3823;
	mul.f32 	%f5963, %f5963, %f3823;
	mul.f32 	%f5964, %f5964, %f3822;
	mul.f32 	%f5965, %f5965, %f3822;
	mul.f32 	%f5966, %f5966, %f3823;
	mul.f32 	%f5967, %f5967, %f3823;
	mul.f32 	%f5968, %f5968, %f3822;
	mul.f32 	%f5969, %f5969, %f3822;
	mul.f32 	%f5970, %f5970, %f3823;
	mul.f32 	%f5971, %f5971, %f3823;
	mul.f32 	%f5972, %f5972, %f3822;
	mul.f32 	%f5973, %f5973, %f3822;
	mul.f32 	%f5974, %f5974, %f3823;
	mul.f32 	%f5975, %f5975, %f3823;
	mul.f32 	%f5976, %f5976, %f3822;
	mul.f32 	%f5977, %f5977, %f3822;
	mul.f32 	%f5978, %f5978, %f3823;
	mul.f32 	%f5979, %f5979, %f3823;
	mul.f32 	%f5980, %f5980, %f3822;
	mul.f32 	%f5981, %f5981, %f3822;
	mul.f32 	%f5982, %f5982, %f3823;
	mul.f32 	%f5983, %f5983, %f3823;
	mul.f32 	%f5984, %f5984, %f3822;
	mul.f32 	%f5985, %f5985, %f3822;
	mul.f32 	%f5986, %f5986, %f3823;
	mul.f32 	%f5987, %f5987, %f3823;
	.loc	1 197 11                        // prefix_prefill.py:197:11
	@%p216 bra 	$L__BB0_34;
// %bb.33:                              //   in Loop: Header=BB0_6 Depth=1
	.loc	1 0 0                           // prefix_prefill.py:0:0
	add.s32 	%r232, %r901, %r49;
	add.s32 	%r233, %r901, %r50;
	add.s32 	%r234, %r901, %r51;
	add.s32 	%r235, %r901, %r52;
	add.s32 	%r236, %r901, %r53;
	add.s32 	%r237, %r901, %r54;
	add.s32 	%r238, %r901, %r55;
	.loc	1 202 28                        // prefix_prefill.py:202:28
	add.s32 	%r989, %r9, %r1763;
	add.s32 	%r990, %r989, 1;
	add.s32 	%r991, %r989, 2;
	add.s32 	%r992, %r989, 3;
	add.s32 	%r993, %r989, 4;
	add.s32 	%r994, %r989, 5;
	add.s32 	%r995, %r989, 6;
	.loc	1 202 50                        // prefix_prefill.py:202:50
	add.s32 	%r996, %r989, 7;
	setp.lt.s32 	%p251, %r989, %r5;
	setp.lt.s32 	%p253, %r990, %r5;
	setp.lt.s32 	%p255, %r991, %r5;
	setp.lt.s32 	%p257, %r992, %r5;
	setp.lt.s32 	%p259, %r993, %r5;
	setp.lt.s32 	%p261, %r994, %r5;
	setp.lt.s32 	%p263, %r995, %r5;
	setp.lt.s32 	%p265, %r996, %r5;
	.loc	1 200 26                        // prefix_prefill.py:200:26
	mul.wide.s32 	%rd372, %r231, 2;
	add.s64 	%rd364, %rd136, %rd372;
	mul.wide.s32 	%rd373, %r232, 2;
	add.s64 	%rd365, %rd136, %rd373;
	mul.wide.s32 	%rd374, %r233, 2;
	add.s64 	%rd366, %rd136, %rd374;
	mul.wide.s32 	%rd375, %r234, 2;
	add.s64 	%rd367, %rd136, %rd375;
	mul.wide.s32 	%rd376, %r235, 2;
	add.s64 	%rd368, %rd136, %rd376;
	mul.wide.s32 	%rd377, %r236, 2;
	add.s64 	%rd369, %rd136, %rd377;
	mul.wide.s32 	%rd378, %r237, 2;
	add.s64 	%rd370, %rd136, %rd378;
	mul.wide.s32 	%rd379, %r238, 2;
	add.s64 	%rd371, %rd136, %rd379;
	.loc	1 200 16                        // prefix_prefill.py:200:16
	// begin inline asm
	mov.u16 %rs193, 0x0;
	@%p251 ld.global.b16 { %rs193 }, [ %rd364 + 0 ];
	@!%p251 mov.u16 %rs193, %rs194;
	// end inline asm
	// begin inline asm
	mov.u16 %rs195, 0x0;
	@%p253 ld.global.b16 { %rs195 }, [ %rd365 + 0 ];
	@!%p253 mov.u16 %rs195, %rs194;
	// end inline asm
	// begin inline asm
	mov.u16 %rs197, 0x0;
	@%p255 ld.global.b16 { %rs197 }, [ %rd366 + 0 ];
	@!%p255 mov.u16 %rs197, %rs194;
	// end inline asm
	// begin inline asm
	mov.u16 %rs199, 0x0;
	@%p257 ld.global.b16 { %rs199 }, [ %rd367 + 0 ];
	@!%p257 mov.u16 %rs199, %rs194;
	// end inline asm
	// begin inline asm
	mov.u16 %rs201, 0x0;
	@%p259 ld.global.b16 { %rs201 }, [ %rd368 + 0 ];
	@!%p259 mov.u16 %rs201, %rs194;
	// end inline asm
	// begin inline asm
	mov.u16 %rs203, 0x0;
	@%p261 ld.global.b16 { %rs203 }, [ %rd369 + 0 ];
	@!%p261 mov.u16 %rs203, %rs194;
	// end inline asm
	// begin inline asm
	mov.u16 %rs205, 0x0;
	@%p263 ld.global.b16 { %rs205 }, [ %rd370 + 0 ];
	@!%p263 mov.u16 %rs205, %rs194;
	// end inline asm
	// begin inline asm
	mov.u16 %rs207, 0x0;
	@%p265 ld.global.b16 { %rs207 }, [ %rd371 + 0 ];
	@!%p265 mov.u16 %rs207, %rs194;
	// end inline asm
	mov.b32 	%r1768, {%rs193, %rs195};
	mov.b32 	%r1769, {%rs197, %rs199};
	mov.b32 	%r1770, {%rs201, %rs203};
	mov.b32 	%r1771, {%rs205, %rs207};
	.loc	1 197 11                        // prefix_prefill.py:197:11
	bra.uni 	$L__BB0_35;
$L__BB0_36:                             // %._crit_edge
	.loc	1 0 11                          // prefix_prefill.py:0:11
	ld.param.u32 	%r280, [_fwd_kernel_param_20];
	ld.param.u32 	%r279, [_fwd_kernel_param_19];
	ld.param.u64 	%rd137, [_fwd_kernel_param_11];
	.loc	1 226 44                        // prefix_prefill.py:226:44
	setp.lt.s32 	%p270, %r6, %r4;
	.loc	1 230 53                        // prefix_prefill.py:230:53
	add.s32 	%r1045, %r6, 128;
	.loc	1 230 38                        // prefix_prefill.py:230:38
	selp.b32 	%r264, %r1045, 0, %p270;
	.loc	1 231 24                        // prefix_prefill.py:231:24
	setp.lt.s32 	%p271, %r264, 1;
	@%p271 bra 	$L__BB0_39;
// %bb.37:                              // %.lr.ph394
	.loc	1 0 24                          // prefix_prefill.py:0:24
	or.b32  	%r30, %r6, %r20;
	ld.param.u32 	%r278, [_fwd_kernel_param_18];
	ld.param.u32 	%r277, [_fwd_kernel_param_17];
	ld.param.u32 	%r276, [_fwd_kernel_param_16];
	ld.param.u32 	%r275, [_fwd_kernel_param_15];
	ld.param.u64 	%rd134, [_fwd_kernel_param_2];
	ld.param.u64 	%rd133, [_fwd_kernel_param_1];
	or.b32  	%r31, %r6, %r21;
	or.b32  	%r32, %r30, 64;
	or.b32  	%r33, %r30, 72;
	or.b32  	%r43, %r42, 9;
	shl.b32 	%r1033, %r275, 4;
	mad.lo.s32 	%r1034, %r2, %r276, %r10;
	mad.lo.s32 	%r1035, %r275, %r16, %r1034;
	add.s32 	%r1036, %r1035, %r1033;
	add.s32 	%r1037, %r1036, %r1033;
	add.s32 	%r1038, %r1037, %r1033;
	shl.b32 	%r1039, %r277, 4;
	mad.lo.s32 	%r1040, %r2, %r278, %r10;
	mad.lo.s32 	%r1041, %r277, %r16, %r1040;
	add.s32 	%r1042, %r1041, %r1039;
	add.s32 	%r1043, %r1042, %r1039;
	add.s32 	%r1044, %r1043, %r1039;
	mul.wide.s32 	%rd382, %r1035, 2;
	add.s64 	%rd30, %rd133, %rd382;
	mul.wide.s32 	%rd383, %r1036, 2;
	add.s64 	%rd31, %rd133, %rd383;
	mul.wide.s32 	%rd384, %r1037, 2;
	add.s64 	%rd32, %rd133, %rd384;
	mul.wide.s32 	%rd385, %r1038, 2;
	add.s64 	%rd33, %rd133, %rd385;
	mul.wide.s32 	%rd386, %r1041, 2;
	add.s64 	%rd34, %rd134, %rd386;
	mul.wide.s32 	%rd387, %r1042, 2;
	add.s64 	%rd35, %rd134, %rd387;
	mul.wide.s32 	%rd388, %r1043, 2;
	add.s64 	%rd36, %rd134, %rd388;
	mul.wide.s32 	%rd389, %r1044, 2;
	add.s64 	%rd37, %rd134, %rd389;
	add.s32 	%r1048, %r416, 16384;
	add.s32 	%r265, %r1048, %r415;
	shr.u32 	%r1049, %r416, 4;
	cvt.u64.u32 	%rd391, %r1049;
	and.b64  	%rd392, %rd391, 16383;
	or.b64  	%rd38, %rd392, 4611686293372403712;
	shr.u32 	%r1050, %r1048, 4;
	cvt.u64.u32 	%rd393, %r1050;
	and.b64  	%rd394, %rd393, 16383;
	or.b64  	%rd400, %rd394, 4611686293338849280;
	add.s64 	%rd40, %rd392, 4611686293372403714;
	add.s64 	%rd402, %rd394, 4611686293338849282;
	add.s64 	%rd42, %rd392, 4611686293372403716;
	add.s64 	%rd404, %rd394, 4611686293338849284;
	add.s64 	%rd44, %rd392, 4611686293372403718;
	add.s64 	%rd406, %rd394, 4611686293338849286;
	add.s64 	%rd46, %rd392, 4611686293372404224;
	add.s64 	%rd47, %rd392, 4611686293372404226;
	add.s64 	%rd48, %rd392, 4611686293372404228;
	add.s64 	%rd49, %rd392, 4611686293372404230;
	add.s64 	%rd420, %rd394, 4611686293338849408;
	add.s64 	%rd421, %rd394, 4611686293338849536;
	add.s64 	%rd422, %rd394, 4611686293338849664;
	.loc	1 231 24                        // prefix_prefill.py:231:24
	cvt.u64.u32 	%rd62, %r43;
	cvt.u64.u32 	%rd53, %r42;
	cvt.u64.u32 	%rd57, %r16;
	cvt.u64.u32 	%rd56, %r17;
	cvt.u64.u32 	%rd55, %r18;
	cvt.u64.u32 	%rd54, %r19;
	cvt.u64.u32 	%rd58, %r264;
	mov.u64 	%rd61, 16;
	mov.u64 	%rd60, 17;
	mov.u64 	%rd59, 24;
	cvt.s64.s32 	%rd63, %r4;
	cvt.s64.s32 	%rd101, %r30;
	cvt.s64.s32 	%rd99, %r31;
	cvt.s64.s32 	%rd69, %r32;
	cvt.s64.s32 	%rd67, %r33;
	mul.lo.s32 	%r1773, %r287, %r277;
	shl.b32 	%r268, %r277, 6;
	mul.lo.s32 	%r1772, %r287, %r275;
	shl.b32 	%r270, %r275, 6;
	mov.u64 	%rd538, 0;
$L__BB0_38:                             // =>This Inner Loop Header: Depth=1
	.loc	1 237 32                        // prefix_prefill.py:237:32
	or.b64  	%rd427, %rd538, %rd57;
	or.b64  	%rd428, %rd538, %rd56;
	or.b64  	%rd429, %rd538, %rd55;
	or.b64  	%rd430, %rd538, %rd54;
	.loc	1 237 51                        // prefix_prefill.py:237:51
	setp.lt.s64 	%p288, %rd430, %rd63;
	setp.lt.s64 	%p283, %rd429, %rd63;
	setp.lt.s64 	%p278, %rd428, %rd63;
	setp.lt.s64 	%p273, %rd427, %rd63;
	.loc	1 235 20                        // prefix_prefill.py:235:20
	mul.wide.s32 	%rd431, %r1772, 2;
	add.s64 	%rd395, %rd30, %rd431;
	add.s64 	%rd396, %rd31, %rd431;
	add.s64 	%rd397, %rd32, %rd431;
	add.s64 	%rd398, %rd33, %rd431;
	.loc	1 234 20                        // prefix_prefill.py:234:20
	// begin inline asm
	mov.u32 %r1051, 0x0;
	mov.u32 %r1052, 0x0;
	mov.u32 %r1053, 0x0;
	mov.u32 %r1054, 0x0;
	@%p273 ld.global.v4.b32 { %r1051, %r1052, %r1053, %r1054 }, [ %rd395 + 0 ];
	@!%p273 mov.u32 %r1051, %r293;
	@!%p273 mov.u32 %r1052, %r293;
	@!%p273 mov.u32 %r1053, %r293;
	@!%p273 mov.u32 %r1054, %r293;
	// end inline asm
	// begin inline asm
	mov.u32 %r1059, 0x0;
	mov.u32 %r1060, 0x0;
	mov.u32 %r1061, 0x0;
	mov.u32 %r1062, 0x0;
	@%p278 ld.global.v4.b32 { %r1059, %r1060, %r1061, %r1062 }, [ %rd396 + 0 ];
	@!%p278 mov.u32 %r1059, %r293;
	@!%p278 mov.u32 %r1060, %r293;
	@!%p278 mov.u32 %r1061, %r293;
	@!%p278 mov.u32 %r1062, %r293;
	// end inline asm
	// begin inline asm
	mov.u32 %r1067, 0x0;
	mov.u32 %r1068, 0x0;
	mov.u32 %r1069, 0x0;
	mov.u32 %r1070, 0x0;
	@%p283 ld.global.v4.b32 { %r1067, %r1068, %r1069, %r1070 }, [ %rd397 + 0 ];
	@!%p283 mov.u32 %r1067, %r293;
	@!%p283 mov.u32 %r1068, %r293;
	@!%p283 mov.u32 %r1069, %r293;
	@!%p283 mov.u32 %r1070, %r293;
	// end inline asm
	// begin inline asm
	mov.u32 %r1075, 0x0;
	mov.u32 %r1076, 0x0;
	mov.u32 %r1077, 0x0;
	mov.u32 %r1078, 0x0;
	@%p288 ld.global.v4.b32 { %r1075, %r1076, %r1077, %r1078 }, [ %rd398 + 0 ];
	@!%p288 mov.u32 %r1075, %r293;
	@!%p288 mov.u32 %r1076, %r293;
	@!%p288 mov.u32 %r1077, %r293;
	@!%p288 mov.u32 %r1078, %r293;
	// end inline asm
	bar.sync 	0;
	st.shared.v4.b32 	[%r265], {%r1051, %r1052, %r1053, %r1054};
	st.shared.v4.b32 	[%r265+2048], {%r1059, %r1060, %r1061, %r1062};
	st.shared.v4.b32 	[%r265+4096], {%r1067, %r1068, %r1069, %r1070};
	st.shared.v4.b32 	[%r265+6144], {%r1075, %r1076, %r1077, %r1078};
	.loc	1 241 23                        // prefix_prefill.py:241:23
	// begin inline asm
	fence.proxy.async.shared::cta;
	// end inline asm
	bar.sync 	0;
	shfl.sync.idx.b32	%r1227, %r1719, 0, 31, -1;
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	shl.b32 	%r1228, %r1227, 7;
	and.b32  	%r1229, %r1228, 384;
	cvt.u64.u32 	%rd432, %r1229;
	add.s64 	%rd399, %rd38, %rd432;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f4176,%f4177,%f4178,%f4179,%f4180,%f4181,%f4182,%f4183,%f4184,%f4185,%f4186,%f4187,%f4188,%f4189,%f4190,%f4191,%f4192,%f4193,%f4194,%f4195,%f4196,%f4197,%f4198,%f4199,%f4200,%f4201,%f4202,%f4203,%f4204,%f4205,%f4206,%f4207}, %rd399, %rd400, 0, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd401, %rd40, %rd432;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f4176,%f4177,%f4178,%f4179,%f4180,%f4181,%f4182,%f4183,%f4184,%f4185,%f4186,%f4187,%f4188,%f4189,%f4190,%f4191,%f4192,%f4193,%f4194,%f4195,%f4196,%f4197,%f4198,%f4199,%f4200,%f4201,%f4202,%f4203,%f4204,%f4205,%f4206,%f4207}, %rd401, %rd402, %p437, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd403, %rd42, %rd432;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f4176,%f4177,%f4178,%f4179,%f4180,%f4181,%f4182,%f4183,%f4184,%f4185,%f4186,%f4187,%f4188,%f4189,%f4190,%f4191,%f4192,%f4193,%f4194,%f4195,%f4196,%f4197,%f4198,%f4199,%f4200,%f4201,%f4202,%f4203,%f4204,%f4205,%f4206,%f4207}, %rd403, %rd404, %p437, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd405, %rd44, %rd432;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f4176,%f4177,%f4178,%f4179,%f4180,%f4181,%f4182,%f4183,%f4184,%f4185,%f4186,%f4187,%f4188,%f4189,%f4190,%f4191,%f4192,%f4193,%f4194,%f4195,%f4196,%f4197,%f4198,%f4199,%f4200,%f4201,%f4202,%f4203,%f4204,%f4205,%f4206,%f4207}, %rd405, %rd406, %p437, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd407, %rd46, %rd432;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f4400,%f4401,%f4402,%f4403,%f4404,%f4405,%f4406,%f4407,%f4408,%f4409,%f4410,%f4411,%f4412,%f4413,%f4414,%f4415,%f4416,%f4417,%f4418,%f4419,%f4420,%f4421,%f4422,%f4423,%f4424,%f4425,%f4426,%f4427,%f4428,%f4429,%f4430,%f4431}, %rd407, %rd400, 0, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd409, %rd47, %rd432;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f4400,%f4401,%f4402,%f4403,%f4404,%f4405,%f4406,%f4407,%f4408,%f4409,%f4410,%f4411,%f4412,%f4413,%f4414,%f4415,%f4416,%f4417,%f4418,%f4419,%f4420,%f4421,%f4422,%f4423,%f4424,%f4425,%f4426,%f4427,%f4428,%f4429,%f4430,%f4431}, %rd409, %rd402, %p437, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd411, %rd48, %rd432;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f4400,%f4401,%f4402,%f4403,%f4404,%f4405,%f4406,%f4407,%f4408,%f4409,%f4410,%f4411,%f4412,%f4413,%f4414,%f4415,%f4416,%f4417,%f4418,%f4419,%f4420,%f4421,%f4422,%f4423,%f4424,%f4425,%f4426,%f4427,%f4428,%f4429,%f4430,%f4431}, %rd411, %rd404, %p437, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd413, %rd49, %rd432;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f4400,%f4401,%f4402,%f4403,%f4404,%f4405,%f4406,%f4407,%f4408,%f4409,%f4410,%f4411,%f4412,%f4413,%f4414,%f4415,%f4416,%f4417,%f4418,%f4419,%f4420,%f4421,%f4422,%f4423,%f4424,%f4425,%f4426,%f4427,%f4428,%f4429,%f4430,%f4431}, %rd413, %rd406, %p437, 1, 1, 0, 0;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	// begin inline asm
	// wait for regs: %f4176,%f4177,%f4178,%f4179,%f4180,%f4181,%f4182,%f4183,%f4184,%f4185,%f4186,%f4187,%f4188,%f4189,%f4190,%f4191,%f4192,%f4193,%f4194,%f4195,%f4196,%f4197,%f4198,%f4199,%f4200,%f4201,%f4202,%f4203,%f4204,%f4205,%f4206,%f4207,%f4400,%f4401,%f4402,%f4403,%f4404,%f4405,%f4406,%f4407,%f4408,%f4409,%f4410,%f4411,%f4412,%f4413,%f4414,%f4415,%f4416,%f4417,%f4418,%f4419,%f4420,%f4421,%f4422,%f4423,%f4424,%f4425,%f4426,%f4427,%f4428,%f4429,%f4430,%f4431
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	1 242 14                        // prefix_prefill.py:242:14
	mul.f32 	%f5432, %f1313, %f4176;
	mul.f32 	%f5433, %f1313, %f4177;
	mul.f32 	%f5434, %f1313, %f4178;
	mul.f32 	%f5435, %f1313, %f4179;
	mul.f32 	%f5436, %f1313, %f4180;
	mul.f32 	%f5437, %f1313, %f4181;
	mul.f32 	%f5438, %f1313, %f4182;
	mul.f32 	%f5439, %f1313, %f4183;
	mul.f32 	%f5440, %f1313, %f4184;
	mul.f32 	%f5441, %f1313, %f4185;
	mul.f32 	%f5442, %f1313, %f4186;
	mul.f32 	%f5443, %f1313, %f4187;
	mul.f32 	%f5444, %f1313, %f4188;
	mul.f32 	%f5445, %f1313, %f4189;
	mul.f32 	%f5446, %f1313, %f4190;
	mul.f32 	%f5447, %f1313, %f4191;
	mul.f32 	%f5448, %f1313, %f4192;
	mul.f32 	%f5449, %f1313, %f4193;
	mul.f32 	%f5450, %f1313, %f4194;
	mul.f32 	%f5451, %f1313, %f4195;
	mul.f32 	%f5452, %f1313, %f4196;
	mul.f32 	%f5453, %f1313, %f4197;
	mul.f32 	%f5454, %f1313, %f4198;
	mul.f32 	%f5455, %f1313, %f4199;
	mul.f32 	%f5456, %f1313, %f4200;
	mul.f32 	%f5457, %f1313, %f4201;
	mul.f32 	%f5458, %f1313, %f4202;
	mul.f32 	%f5459, %f1313, %f4203;
	mul.f32 	%f5460, %f1313, %f4204;
	mul.f32 	%f5461, %f1313, %f4205;
	mul.f32 	%f5462, %f1313, %f4206;
	mul.f32 	%f5463, %f1313, %f4207;
	mul.f32 	%f5464, %f1313, %f4400;
	mul.f32 	%f5465, %f1313, %f4401;
	mul.f32 	%f5466, %f1313, %f4402;
	mul.f32 	%f5467, %f1313, %f4403;
	mul.f32 	%f5468, %f1313, %f4404;
	mul.f32 	%f5469, %f1313, %f4405;
	mul.f32 	%f5470, %f1313, %f4406;
	mul.f32 	%f5471, %f1313, %f4407;
	mul.f32 	%f5472, %f1313, %f4408;
	mul.f32 	%f5473, %f1313, %f4409;
	mul.f32 	%f5474, %f1313, %f4410;
	mul.f32 	%f5475, %f1313, %f4411;
	mul.f32 	%f5476, %f1313, %f4412;
	mul.f32 	%f5477, %f1313, %f4413;
	mul.f32 	%f5478, %f1313, %f4414;
	mul.f32 	%f5479, %f1313, %f4415;
	mul.f32 	%f5480, %f1313, %f4416;
	mul.f32 	%f5481, %f1313, %f4417;
	mul.f32 	%f5482, %f1313, %f4418;
	mul.f32 	%f5483, %f1313, %f4419;
	mul.f32 	%f5484, %f1313, %f4420;
	mul.f32 	%f5485, %f1313, %f4421;
	mul.f32 	%f5486, %f1313, %f4422;
	mul.f32 	%f5487, %f1313, %f4423;
	mul.f32 	%f5488, %f1313, %f4424;
	mul.f32 	%f5489, %f1313, %f4425;
	mul.f32 	%f5490, %f1313, %f4426;
	mul.f32 	%f5491, %f1313, %f4427;
	mul.f32 	%f5492, %f1313, %f4428;
	mul.f32 	%f5493, %f1313, %f4429;
	mul.f32 	%f5494, %f1313, %f4430;
	mul.f32 	%f5495, %f1313, %f4431;
	.loc	1 237 32                        // prefix_prefill.py:237:32
	add.s64 	%rd433, %rd53, %rd538;
	add.s64 	%rd434, %rd433, 1;
	add.s64 	%rd435, %rd433, 8;
	or.b64  	%rd436, %rd433, %rd61;
	or.b64  	%rd437, %rd433, %rd60;
	or.b64  	%rd438, %rd433, %rd59;
	or.b64  	%rd439, %rd538, %rd62;
	add.s64 	%rd440, %rd433, 25;
	or.b64  	%rd441, %rd433, 48;
	or.b64  	%rd442, %rd433, 49;
	or.b64  	%rd443, %rd433, 56;
	or.b64  	%rd444, %rd433, 57;
	or.b64  	%rd445, %rd433, 32;
	or.b64  	%rd446, %rd433, 33;
	or.b64  	%rd447, %rd433, 40;
	or.b64  	%rd448, %rd433, 41;
	.loc	1 244 42                        // prefix_prefill.py:244:42
	setp.gt.s64 	%p326, %rd448, %rd69;
	selp.u16 	%rs305, 1, 0, %p326;
	shl.b16 	%rs306, %rs305, 2;
	setp.gt.s64 	%p327, %rd447, %rd69;
	selp.u16 	%rs307, -1, 0, %p327;
	shl.b16 	%rs308, %rs307, 3;
	or.b16  	%rs309, %rs308, %rs306;
	setp.gt.s64 	%p328, %rd448, %rd67;
	selp.u16 	%rs310, 1, 0, %p328;
	setp.gt.s64 	%p329, %rd447, %rd67;
	selp.u16 	%rs311, -1, 0, %p329;
	shl.b16 	%rs312, %rs311, 1;
	or.b16  	%rs313, %rs310, %rs312;
	and.b16  	%rs314, %rs313, 3;
	or.b16  	%rs315, %rs314, %rs309;
	and.b16  	%rs316, %rs315, 15;
	shl.b16 	%rs317, %rs316, 8;
	setp.gt.s64 	%p330, %rd446, %rd69;
	selp.u16 	%rs318, 1, 0, %p330;
	shl.b16 	%rs319, %rs318, 2;
	setp.gt.s64 	%p331, %rd445, %rd69;
	selp.u16 	%rs320, -1, 0, %p331;
	shl.b16 	%rs321, %rs320, 3;
	or.b16  	%rs322, %rs321, %rs319;
	setp.gt.s64 	%p332, %rd446, %rd67;
	selp.u16 	%rs323, 1, 0, %p332;
	setp.gt.s64 	%p333, %rd445, %rd67;
	selp.u16 	%rs324, -1, 0, %p333;
	shl.b16 	%rs325, %rs324, 1;
	or.b16  	%rs326, %rs323, %rs325;
	and.b16  	%rs327, %rs326, 3;
	or.b16  	%rs328, %rs327, %rs322;
	shl.b16 	%rs329, %rs328, 12;
	or.b16  	%rs330, %rs329, %rs317;
	setp.gt.s64 	%p334, %rd444, %rd69;
	selp.u16 	%rs331, 1, 0, %p334;
	shl.b16 	%rs332, %rs331, 2;
	setp.gt.s64 	%p335, %rd443, %rd69;
	selp.u16 	%rs333, -1, 0, %p335;
	shl.b16 	%rs334, %rs333, 3;
	or.b16  	%rs335, %rs334, %rs332;
	setp.gt.s64 	%p336, %rd444, %rd67;
	selp.u16 	%rs336, 1, 0, %p336;
	setp.gt.s64 	%p337, %rd443, %rd67;
	selp.u16 	%rs337, -1, 0, %p337;
	shl.b16 	%rs338, %rs337, 1;
	or.b16  	%rs339, %rs336, %rs338;
	and.b16  	%rs340, %rs339, 3;
	or.b16  	%rs341, %rs340, %rs335;
	and.b16  	%rs342, %rs341, 15;
	setp.gt.s64 	%p338, %rd442, %rd69;
	selp.u16 	%rs343, 1, 0, %p338;
	shl.b16 	%rs344, %rs343, 2;
	setp.gt.s64 	%p339, %rd441, %rd69;
	selp.u16 	%rs345, -1, 0, %p339;
	shl.b16 	%rs346, %rs345, 3;
	or.b16  	%rs347, %rs346, %rs344;
	setp.gt.s64 	%p340, %rd442, %rd67;
	selp.u16 	%rs348, 1, 0, %p340;
	setp.gt.s64 	%p341, %rd441, %rd67;
	selp.u16 	%rs349, -1, 0, %p341;
	shl.b16 	%rs350, %rs349, 1;
	or.b16  	%rs351, %rs348, %rs350;
	and.b16  	%rs352, %rs351, 3;
	or.b16  	%rs353, %rs352, %rs347;
	shl.b16 	%rs354, %rs353, 4;
	or.b16  	%rs355, %rs342, %rs354;
	and.b16  	%rs356, %rs355, 255;
	or.b16  	%rs357, %rs356, %rs330;
	cvt.u32.u16 	%r1230, %rs357;
	setp.gt.s64 	%p342, %rd439, %rd69;
	selp.u16 	%rs358, 1, 0, %p342;
	shl.b16 	%rs359, %rs358, 2;
	setp.gt.s64 	%p343, %rd435, %rd69;
	selp.u16 	%rs360, -1, 0, %p343;
	shl.b16 	%rs361, %rs360, 3;
	or.b16  	%rs362, %rs361, %rs359;
	setp.gt.s64 	%p344, %rd439, %rd67;
	selp.u16 	%rs363, 1, 0, %p344;
	setp.gt.s64 	%p345, %rd435, %rd67;
	selp.u16 	%rs364, -1, 0, %p345;
	shl.b16 	%rs365, %rs364, 1;
	or.b16  	%rs366, %rs363, %rs365;
	and.b16  	%rs367, %rs366, 3;
	or.b16  	%rs368, %rs367, %rs362;
	and.b16  	%rs369, %rs368, 15;
	shl.b16 	%rs370, %rs369, 8;
	setp.gt.s64 	%p346, %rd434, %rd69;
	selp.u16 	%rs371, 1, 0, %p346;
	shl.b16 	%rs372, %rs371, 2;
	setp.gt.s64 	%p347, %rd433, %rd69;
	selp.u16 	%rs373, -1, 0, %p347;
	shl.b16 	%rs374, %rs373, 3;
	or.b16  	%rs375, %rs374, %rs372;
	setp.gt.s64 	%p348, %rd434, %rd67;
	selp.u16 	%rs376, 1, 0, %p348;
	setp.gt.s64 	%p349, %rd433, %rd67;
	selp.u16 	%rs377, -1, 0, %p349;
	shl.b16 	%rs378, %rs377, 1;
	or.b16  	%rs379, %rs376, %rs378;
	and.b16  	%rs380, %rs379, 3;
	or.b16  	%rs381, %rs380, %rs375;
	shl.b16 	%rs382, %rs381, 12;
	or.b16  	%rs383, %rs382, %rs370;
	setp.gt.s64 	%p350, %rd440, %rd69;
	selp.u16 	%rs384, 1, 0, %p350;
	shl.b16 	%rs385, %rs384, 2;
	setp.gt.s64 	%p351, %rd438, %rd69;
	selp.u16 	%rs386, -1, 0, %p351;
	shl.b16 	%rs387, %rs386, 3;
	or.b16  	%rs388, %rs387, %rs385;
	setp.gt.s64 	%p352, %rd440, %rd67;
	selp.u16 	%rs389, 1, 0, %p352;
	setp.gt.s64 	%p353, %rd438, %rd67;
	selp.u16 	%rs390, -1, 0, %p353;
	shl.b16 	%rs391, %rs390, 1;
	or.b16  	%rs392, %rs389, %rs391;
	and.b16  	%rs393, %rs392, 3;
	or.b16  	%rs394, %rs393, %rs388;
	and.b16  	%rs395, %rs394, 15;
	setp.gt.s64 	%p354, %rd437, %rd69;
	selp.u16 	%rs396, 1, 0, %p354;
	shl.b16 	%rs397, %rs396, 2;
	setp.gt.s64 	%p355, %rd436, %rd69;
	selp.u16 	%rs398, -1, 0, %p355;
	shl.b16 	%rs399, %rs398, 3;
	or.b16  	%rs400, %rs399, %rs397;
	setp.gt.s64 	%p356, %rd437, %rd67;
	selp.u16 	%rs401, 1, 0, %p356;
	setp.gt.s64 	%p357, %rd436, %rd67;
	selp.u16 	%rs402, -1, 0, %p357;
	shl.b16 	%rs403, %rs402, 1;
	or.b16  	%rs404, %rs401, %rs403;
	and.b16  	%rs405, %rs404, 3;
	or.b16  	%rs406, %rs405, %rs400;
	shl.b16 	%rs407, %rs406, 4;
	or.b16  	%rs408, %rs395, %rs407;
	and.b16  	%rs409, %rs408, 255;
	or.b16  	%rs410, %rs409, %rs383;
	cvt.u32.u16 	%r1231, %rs410;
	shl.b32 	%r1232, %r1231, 16;
	or.b32  	%r1233, %r1230, %r1232;
	cvt.u64.u32 	%rd449, %r1233;
	setp.gt.s64 	%p358, %rd448, %rd101;
	selp.u16 	%rs411, 1, 0, %p358;
	shl.b16 	%rs412, %rs411, 2;
	setp.gt.s64 	%p359, %rd447, %rd101;
	selp.u16 	%rs413, -1, 0, %p359;
	shl.b16 	%rs414, %rs413, 3;
	or.b16  	%rs415, %rs414, %rs412;
	setp.gt.s64 	%p360, %rd448, %rd99;
	selp.u16 	%rs416, 1, 0, %p360;
	setp.gt.s64 	%p361, %rd447, %rd99;
	selp.u16 	%rs417, -1, 0, %p361;
	shl.b16 	%rs418, %rs417, 1;
	or.b16  	%rs419, %rs416, %rs418;
	and.b16  	%rs420, %rs419, 3;
	or.b16  	%rs421, %rs420, %rs415;
	and.b16  	%rs422, %rs421, 15;
	shl.b16 	%rs423, %rs422, 8;
	setp.gt.s64 	%p362, %rd446, %rd101;
	selp.u16 	%rs424, 1, 0, %p362;
	shl.b16 	%rs425, %rs424, 2;
	setp.gt.s64 	%p363, %rd445, %rd101;
	selp.u16 	%rs426, -1, 0, %p363;
	shl.b16 	%rs427, %rs426, 3;
	or.b16  	%rs428, %rs427, %rs425;
	setp.gt.s64 	%p364, %rd446, %rd99;
	selp.u16 	%rs429, 1, 0, %p364;
	setp.gt.s64 	%p365, %rd445, %rd99;
	selp.u16 	%rs430, -1, 0, %p365;
	shl.b16 	%rs431, %rs430, 1;
	or.b16  	%rs432, %rs429, %rs431;
	and.b16  	%rs433, %rs432, 3;
	or.b16  	%rs434, %rs433, %rs428;
	shl.b16 	%rs435, %rs434, 12;
	or.b16  	%rs436, %rs435, %rs423;
	setp.gt.s64 	%p366, %rd444, %rd101;
	selp.u16 	%rs437, 1, 0, %p366;
	shl.b16 	%rs438, %rs437, 2;
	setp.gt.s64 	%p367, %rd443, %rd101;
	selp.u16 	%rs439, -1, 0, %p367;
	shl.b16 	%rs440, %rs439, 3;
	or.b16  	%rs441, %rs440, %rs438;
	setp.gt.s64 	%p368, %rd444, %rd99;
	selp.u16 	%rs442, 1, 0, %p368;
	setp.gt.s64 	%p369, %rd443, %rd99;
	selp.u16 	%rs443, -1, 0, %p369;
	shl.b16 	%rs444, %rs443, 1;
	or.b16  	%rs445, %rs442, %rs444;
	and.b16  	%rs446, %rs445, 3;
	or.b16  	%rs447, %rs446, %rs441;
	and.b16  	%rs448, %rs447, 15;
	setp.gt.s64 	%p370, %rd442, %rd101;
	selp.u16 	%rs449, 1, 0, %p370;
	shl.b16 	%rs450, %rs449, 2;
	setp.gt.s64 	%p371, %rd441, %rd101;
	selp.u16 	%rs451, -1, 0, %p371;
	shl.b16 	%rs452, %rs451, 3;
	or.b16  	%rs453, %rs452, %rs450;
	setp.gt.s64 	%p372, %rd442, %rd99;
	selp.u16 	%rs454, 1, 0, %p372;
	setp.gt.s64 	%p373, %rd441, %rd99;
	selp.u16 	%rs455, -1, 0, %p373;
	shl.b16 	%rs456, %rs455, 1;
	or.b16  	%rs457, %rs454, %rs456;
	and.b16  	%rs458, %rs457, 3;
	or.b16  	%rs459, %rs458, %rs453;
	shl.b16 	%rs460, %rs459, 4;
	or.b16  	%rs461, %rs448, %rs460;
	and.b16  	%rs462, %rs461, 255;
	or.b16  	%rs463, %rs462, %rs436;
	cvt.u32.u16 	%r1234, %rs463;
	shr.u32 	%r1235, %r1234, 1;
	shr.u32 	%r1236, %r1234, 2;
	shr.u32 	%r1237, %r1234, 3;
	shr.u32 	%r1238, %r1234, 4;
	shr.u32 	%r1239, %r1234, 5;
	shr.u32 	%r1240, %r1234, 6;
	shr.u32 	%r1241, %r1234, 7;
	shr.u32 	%r1242, %r1234, 8;
	shr.u32 	%r1243, %r1234, 9;
	shr.u32 	%r1244, %r1234, 10;
	shr.u32 	%r1245, %r1234, 11;
	shr.u32 	%r1246, %r1234, 12;
	shr.u32 	%r1247, %r1234, 13;
	shr.u32 	%r1248, %r1234, 14;
	shr.u32 	%r1249, %r1234, 15;
	setp.gt.s64 	%p374, %rd440, %rd99;
	setp.gt.s64 	%p375, %rd438, %rd99;
	setp.gt.s64 	%p376, %rd440, %rd101;
	setp.gt.s64 	%p377, %rd438, %rd101;
	setp.gt.s64 	%p378, %rd437, %rd99;
	setp.gt.s64 	%p379, %rd436, %rd99;
	setp.gt.s64 	%p380, %rd437, %rd101;
	setp.gt.s64 	%p381, %rd436, %rd101;
	setp.gt.s64 	%p382, %rd439, %rd99;
	setp.gt.s64 	%p383, %rd435, %rd99;
	setp.gt.s64 	%p384, %rd439, %rd101;
	setp.gt.s64 	%p385, %rd435, %rd101;
	setp.gt.s64 	%p386, %rd434, %rd99;
	setp.gt.s64 	%p387, %rd433, %rd99;
	setp.gt.s64 	%p388, %rd434, %rd101;
	setp.gt.s64 	%p389, %rd433, %rd101;
	.loc	1 245 22                        // prefix_prefill.py:245:22
	selp.f32 	%f5496, 0fFF800000, %f5432, %p389;
	selp.f32 	%f5497, 0fFF800000, %f5433, %p388;
	selp.f32 	%f5498, 0fFF800000, %f5434, %p387;
	selp.f32 	%f5499, 0fFF800000, %f5435, %p386;
	selp.f32 	%f5500, 0fFF800000, %f5436, %p385;
	selp.f32 	%f5501, 0fFF800000, %f5437, %p384;
	selp.f32 	%f5502, 0fFF800000, %f5438, %p383;
	selp.f32 	%f5503, 0fFF800000, %f5439, %p382;
	selp.f32 	%f5504, 0fFF800000, %f5440, %p381;
	selp.f32 	%f5505, 0fFF800000, %f5441, %p380;
	selp.f32 	%f5506, 0fFF800000, %f5442, %p379;
	selp.f32 	%f5507, 0fFF800000, %f5443, %p378;
	selp.f32 	%f5508, 0fFF800000, %f5444, %p377;
	selp.f32 	%f5509, 0fFF800000, %f5445, %p376;
	selp.f32 	%f5510, 0fFF800000, %f5446, %p375;
	selp.f32 	%f5511, 0fFF800000, %f5447, %p374;
	and.b32  	%r1250, %r1249, 1;
	setp.eq.b32 	%p390, %r1250, 1;
	selp.f32 	%f5512, 0fFF800000, %f5448, %p390;
	and.b32  	%r1251, %r1248, 1;
	setp.eq.b32 	%p391, %r1251, 1;
	selp.f32 	%f5513, 0fFF800000, %f5449, %p391;
	and.b32  	%r1252, %r1247, 1;
	setp.eq.b32 	%p392, %r1252, 1;
	selp.f32 	%f5514, 0fFF800000, %f5450, %p392;
	and.b32  	%r1253, %r1246, 1;
	setp.eq.b32 	%p393, %r1253, 1;
	selp.f32 	%f5515, 0fFF800000, %f5451, %p393;
	and.b32  	%r1254, %r1245, 1;
	setp.eq.b32 	%p394, %r1254, 1;
	selp.f32 	%f5516, 0fFF800000, %f5452, %p394;
	and.b32  	%r1255, %r1244, 1;
	setp.eq.b32 	%p395, %r1255, 1;
	selp.f32 	%f5517, 0fFF800000, %f5453, %p395;
	and.b32  	%r1256, %r1243, 1;
	setp.eq.b32 	%p396, %r1256, 1;
	selp.f32 	%f5518, 0fFF800000, %f5454, %p396;
	and.b32  	%r1257, %r1242, 1;
	setp.eq.b32 	%p397, %r1257, 1;
	selp.f32 	%f5519, 0fFF800000, %f5455, %p397;
	and.b32  	%r1258, %r1241, 1;
	setp.eq.b32 	%p398, %r1258, 1;
	selp.f32 	%f5520, 0fFF800000, %f5456, %p398;
	and.b32  	%r1259, %r1240, 1;
	setp.eq.b32 	%p399, %r1259, 1;
	selp.f32 	%f5521, 0fFF800000, %f5457, %p399;
	and.b32  	%r1260, %r1239, 1;
	setp.eq.b32 	%p400, %r1260, 1;
	selp.f32 	%f5522, 0fFF800000, %f5458, %p400;
	and.b32  	%r1261, %r1238, 1;
	setp.eq.b32 	%p401, %r1261, 1;
	selp.f32 	%f5523, 0fFF800000, %f5459, %p401;
	and.b32  	%r1262, %r1237, 1;
	setp.eq.b32 	%p402, %r1262, 1;
	selp.f32 	%f5524, 0fFF800000, %f5460, %p402;
	and.b32  	%r1263, %r1236, 1;
	setp.eq.b32 	%p403, %r1263, 1;
	selp.f32 	%f5525, 0fFF800000, %f5461, %p403;
	and.b32  	%r1264, %r1235, 1;
	setp.eq.b32 	%p404, %r1264, 1;
	selp.f32 	%f5526, 0fFF800000, %f5462, %p404;
	selp.f32 	%f5527, 0fFF800000, %f5463, %p368;
	shr.u64 	%rd450, %rd449, 31;
	and.b64  	%rd451, %rd450, 1;
	setp.eq.b64 	%p405, %rd451, 1;
	selp.f32 	%f5528, 0fFF800000, %f5464, %p405;
	shr.u64 	%rd452, %rd449, 30;
	and.b64  	%rd453, %rd452, 1;
	setp.eq.b64 	%p406, %rd453, 1;
	selp.f32 	%f5529, 0fFF800000, %f5465, %p406;
	shr.u64 	%rd454, %rd449, 29;
	and.b64  	%rd455, %rd454, 1;
	setp.eq.b64 	%p407, %rd455, 1;
	selp.f32 	%f5530, 0fFF800000, %f5466, %p407;
	shr.u64 	%rd456, %rd449, 28;
	and.b64  	%rd457, %rd456, 1;
	setp.eq.b64 	%p408, %rd457, 1;
	selp.f32 	%f5531, 0fFF800000, %f5467, %p408;
	shr.u64 	%rd458, %rd449, 27;
	and.b64  	%rd459, %rd458, 1;
	setp.eq.b64 	%p409, %rd459, 1;
	selp.f32 	%f5532, 0fFF800000, %f5468, %p409;
	shr.u64 	%rd460, %rd449, 26;
	and.b64  	%rd461, %rd460, 1;
	setp.eq.b64 	%p410, %rd461, 1;
	selp.f32 	%f5533, 0fFF800000, %f5469, %p410;
	shr.u64 	%rd462, %rd449, 25;
	and.b64  	%rd463, %rd462, 1;
	setp.eq.b64 	%p411, %rd463, 1;
	selp.f32 	%f5534, 0fFF800000, %f5470, %p411;
	shr.u64 	%rd464, %rd449, 24;
	and.b64  	%rd465, %rd464, 1;
	setp.eq.b64 	%p412, %rd465, 1;
	selp.f32 	%f5535, 0fFF800000, %f5471, %p412;
	shr.u64 	%rd466, %rd449, 23;
	and.b64  	%rd467, %rd466, 1;
	setp.eq.b64 	%p413, %rd467, 1;
	selp.f32 	%f5536, 0fFF800000, %f5472, %p413;
	shr.u64 	%rd468, %rd449, 22;
	and.b64  	%rd469, %rd468, 1;
	setp.eq.b64 	%p414, %rd469, 1;
	selp.f32 	%f5537, 0fFF800000, %f5473, %p414;
	shr.u64 	%rd470, %rd449, 21;
	and.b64  	%rd471, %rd470, 1;
	setp.eq.b64 	%p415, %rd471, 1;
	selp.f32 	%f5538, 0fFF800000, %f5474, %p415;
	shr.u64 	%rd472, %rd449, 20;
	and.b64  	%rd473, %rd472, 1;
	setp.eq.b64 	%p416, %rd473, 1;
	selp.f32 	%f5539, 0fFF800000, %f5475, %p416;
	shr.u64 	%rd474, %rd449, 19;
	and.b64  	%rd475, %rd474, 1;
	setp.eq.b64 	%p417, %rd475, 1;
	selp.f32 	%f5540, 0fFF800000, %f5476, %p417;
	shr.u64 	%rd476, %rd449, 18;
	and.b64  	%rd477, %rd476, 1;
	setp.eq.b64 	%p418, %rd477, 1;
	selp.f32 	%f5541, 0fFF800000, %f5477, %p418;
	shr.u64 	%rd478, %rd449, 17;
	and.b64  	%rd479, %rd478, 1;
	setp.eq.b64 	%p419, %rd479, 1;
	selp.f32 	%f5542, 0fFF800000, %f5478, %p419;
	shr.u64 	%rd480, %rd449, 16;
	and.b64  	%rd481, %rd480, 1;
	setp.eq.b64 	%p420, %rd481, 1;
	selp.f32 	%f5543, 0fFF800000, %f5479, %p420;
	shr.u64 	%rd482, %rd449, 15;
	and.b64  	%rd483, %rd482, 1;
	setp.eq.b64 	%p421, %rd483, 1;
	selp.f32 	%f5544, 0fFF800000, %f5480, %p421;
	shr.u64 	%rd484, %rd449, 14;
	and.b64  	%rd485, %rd484, 1;
	setp.eq.b64 	%p422, %rd485, 1;
	selp.f32 	%f5545, 0fFF800000, %f5481, %p422;
	shr.u64 	%rd486, %rd449, 13;
	and.b64  	%rd487, %rd486, 1;
	setp.eq.b64 	%p423, %rd487, 1;
	selp.f32 	%f5546, 0fFF800000, %f5482, %p423;
	shr.u64 	%rd488, %rd449, 12;
	and.b64  	%rd489, %rd488, 1;
	setp.eq.b64 	%p424, %rd489, 1;
	selp.f32 	%f5547, 0fFF800000, %f5483, %p424;
	shr.u64 	%rd490, %rd449, 11;
	and.b64  	%rd491, %rd490, 1;
	setp.eq.b64 	%p425, %rd491, 1;
	selp.f32 	%f5548, 0fFF800000, %f5484, %p425;
	shr.u64 	%rd492, %rd449, 10;
	and.b64  	%rd493, %rd492, 1;
	setp.eq.b64 	%p426, %rd493, 1;
	selp.f32 	%f5549, 0fFF800000, %f5485, %p426;
	shr.u64 	%rd494, %rd449, 9;
	and.b64  	%rd495, %rd494, 1;
	setp.eq.b64 	%p427, %rd495, 1;
	selp.f32 	%f5550, 0fFF800000, %f5486, %p427;
	shr.u64 	%rd496, %rd449, 8;
	and.b64  	%rd497, %rd496, 1;
	setp.eq.b64 	%p428, %rd497, 1;
	selp.f32 	%f5551, 0fFF800000, %f5487, %p428;
	shr.u64 	%rd498, %rd449, 7;
	and.b64  	%rd499, %rd498, 1;
	setp.eq.b64 	%p429, %rd499, 1;
	selp.f32 	%f5552, 0fFF800000, %f5488, %p429;
	shr.u64 	%rd500, %rd449, 6;
	and.b64  	%rd501, %rd500, 1;
	setp.eq.b64 	%p430, %rd501, 1;
	selp.f32 	%f5553, 0fFF800000, %f5489, %p430;
	shr.u64 	%rd502, %rd449, 5;
	and.b64  	%rd503, %rd502, 1;
	setp.eq.b64 	%p431, %rd503, 1;
	selp.f32 	%f5554, 0fFF800000, %f5490, %p431;
	shr.u64 	%rd504, %rd449, 4;
	and.b64  	%rd505, %rd504, 1;
	setp.eq.b64 	%p432, %rd505, 1;
	selp.f32 	%f5555, 0fFF800000, %f5491, %p432;
	shr.u64 	%rd506, %rd449, 3;
	and.b64  	%rd507, %rd506, 1;
	setp.eq.b64 	%p433, %rd507, 1;
	selp.f32 	%f5556, 0fFF800000, %f5492, %p433;
	shr.u64 	%rd508, %rd449, 2;
	and.b64  	%rd509, %rd508, 1;
	setp.eq.b64 	%p434, %rd509, 1;
	selp.f32 	%f5557, 0fFF800000, %f5493, %p434;
	shr.u64 	%rd510, %rd449, 1;
	and.b64  	%rd511, %rd510, 1;
	setp.eq.b64 	%p435, %rd511, 1;
	selp.f32 	%f5558, 0fFF800000, %f5494, %p435;
	selp.f32 	%f5559, 0fFF800000, %f5495, %p336;
$L__tmp21:
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f5560, %f5496, %f5497;
	max.f32 	%f5561, %f5498, %f5499;
	max.f32 	%f5562, %f5560, %f5500;
	max.f32 	%f5563, %f5562, %f5501;
	max.f32 	%f5564, %f5561, %f5502;
	max.f32 	%f5565, %f5564, %f5503;
	max.f32 	%f5566, %f5563, %f5504;
	max.f32 	%f5567, %f5566, %f5505;
	max.f32 	%f5568, %f5565, %f5506;
	max.f32 	%f5569, %f5568, %f5507;
	max.f32 	%f5570, %f5567, %f5508;
	max.f32 	%f5571, %f5570, %f5509;
	max.f32 	%f5572, %f5569, %f5510;
	max.f32 	%f5573, %f5572, %f5511;
	max.f32 	%f5574, %f5571, %f5512;
	max.f32 	%f5575, %f5574, %f5513;
	max.f32 	%f5576, %f5573, %f5514;
	max.f32 	%f5577, %f5576, %f5515;
	max.f32 	%f5578, %f5575, %f5516;
	max.f32 	%f5579, %f5578, %f5517;
	max.f32 	%f5580, %f5577, %f5518;
	max.f32 	%f5581, %f5580, %f5519;
	max.f32 	%f5582, %f5579, %f5520;
	max.f32 	%f5583, %f5582, %f5521;
	max.f32 	%f5584, %f5581, %f5522;
	max.f32 	%f5585, %f5584, %f5523;
	max.f32 	%f5586, %f5583, %f5524;
	max.f32 	%f5587, %f5586, %f5525;
	max.f32 	%f5588, %f5585, %f5526;
	max.f32 	%f5589, %f5588, %f5527;
	max.f32 	%f5590, %f5528, %f5529;
	max.f32 	%f5591, %f5530, %f5531;
	max.f32 	%f5592, %f5590, %f5532;
	max.f32 	%f5593, %f5592, %f5533;
	max.f32 	%f5594, %f5591, %f5534;
	max.f32 	%f5595, %f5594, %f5535;
	max.f32 	%f5596, %f5593, %f5536;
	max.f32 	%f5597, %f5596, %f5537;
	max.f32 	%f5598, %f5595, %f5538;
	max.f32 	%f5599, %f5598, %f5539;
	max.f32 	%f5600, %f5597, %f5540;
	max.f32 	%f5601, %f5600, %f5541;
	max.f32 	%f5602, %f5599, %f5542;
	max.f32 	%f5603, %f5602, %f5543;
	max.f32 	%f5604, %f5601, %f5544;
	max.f32 	%f5605, %f5604, %f5545;
	max.f32 	%f5606, %f5603, %f5546;
	max.f32 	%f5607, %f5606, %f5547;
	max.f32 	%f5608, %f5605, %f5548;
	max.f32 	%f5609, %f5608, %f5549;
	max.f32 	%f5610, %f5607, %f5550;
	max.f32 	%f5611, %f5610, %f5551;
	max.f32 	%f5612, %f5609, %f5552;
	max.f32 	%f5613, %f5612, %f5553;
	max.f32 	%f5614, %f5611, %f5554;
	max.f32 	%f5615, %f5614, %f5555;
	max.f32 	%f5616, %f5613, %f5556;
	max.f32 	%f5617, %f5616, %f5557;
	max.f32 	%f5618, %f5615, %f5558;
	max.f32 	%f5619, %f5618, %f5559;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r1265, %f5587;
	shfl.sync.bfly.b32	%r1266, %r1265, 2, 31, -1;
	mov.b32 	%f5620, %r1266;
	mov.b32 	%r1267, %f5589;
	mov.b32 	%r1268, %f5617;
	mov.b32 	%r1269, %f5619;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f5621, %f5587, %f5620;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r1270, %f5621;
	shfl.sync.bfly.b32	%r1271, %r1270, 1, 31, -1;
	shfl.sync.bfly.b32	%r1272, %r1267, 2, 31, -1;
	mov.b32 	%f5622, %r1272;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f5623, %f5589, %f5622;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r1273, %f5623;
	shfl.sync.bfly.b32	%r1274, %r1273, 1, 31, -1;
	shfl.sync.bfly.b32	%r1275, %r1268, 2, 31, -1;
	mov.b32 	%f5624, %r1275;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f5625, %f5617, %f5624;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r1276, %f5625;
	shfl.sync.bfly.b32	%r1277, %r1276, 1, 31, -1;
	shfl.sync.bfly.b32	%r1278, %r1269, 2, 31, -1;
	mov.b32 	%f5626, %r1278;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f5627, %f5619, %f5626;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r1279, %f5627;
	shfl.sync.bfly.b32	%r1280, %r1279, 1, 31, -1;
	mov.b32 	%f5628, %r1280;
	mov.b32 	%f5629, %r1277;
	mov.b32 	%f5630, %r1274;
	mov.b32 	%f5631, %r1271;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f5632, %f5625, %f5629;
	max.f32 	%f5633, %f5627, %f5628;
	max.f32 	%f5634, %f5621, %f5631;
	max.f32 	%f5635, %f5623, %f5630;
$L__tmp22:
	.loc	1 252 31                        // prefix_prefill.py:252:31
	max.f32 	%f1176, %f5919, %f5633;
	max.f32 	%f1175, %f5918, %f5632;
	max.f32 	%f1174, %f5917, %f5635;
	max.f32 	%f1173, %f5916, %f5634;
	.loc	1 253 24                        // prefix_prefill.py:253:24
	sub.f32 	%f5636, %f5496, %f1173;
	sub.f32 	%f5637, %f5497, %f1173;
	sub.f32 	%f5638, %f5498, %f1174;
	sub.f32 	%f5639, %f5499, %f1174;
	sub.f32 	%f5640, %f5500, %f1173;
	sub.f32 	%f5641, %f5501, %f1173;
	sub.f32 	%f5642, %f5502, %f1174;
	sub.f32 	%f5643, %f5503, %f1174;
	sub.f32 	%f5644, %f5504, %f1173;
	sub.f32 	%f5645, %f5505, %f1173;
	sub.f32 	%f5646, %f5506, %f1174;
	sub.f32 	%f5647, %f5507, %f1174;
	sub.f32 	%f5648, %f5508, %f1173;
	sub.f32 	%f5649, %f5509, %f1173;
	sub.f32 	%f5650, %f5510, %f1174;
	sub.f32 	%f5651, %f5511, %f1174;
	sub.f32 	%f5652, %f5512, %f1173;
	sub.f32 	%f5653, %f5513, %f1173;
	sub.f32 	%f5654, %f5514, %f1174;
	sub.f32 	%f5655, %f5515, %f1174;
	sub.f32 	%f5656, %f5516, %f1173;
	sub.f32 	%f5657, %f5517, %f1173;
	sub.f32 	%f5658, %f5518, %f1174;
	sub.f32 	%f5659, %f5519, %f1174;
	sub.f32 	%f5660, %f5520, %f1173;
	sub.f32 	%f5661, %f5521, %f1173;
	sub.f32 	%f5662, %f5522, %f1174;
	sub.f32 	%f5663, %f5523, %f1174;
	sub.f32 	%f5664, %f5524, %f1173;
	sub.f32 	%f5665, %f5525, %f1173;
	sub.f32 	%f5666, %f5526, %f1174;
	sub.f32 	%f5667, %f5527, %f1174;
	sub.f32 	%f5668, %f5528, %f1175;
	sub.f32 	%f5669, %f5529, %f1175;
	sub.f32 	%f5670, %f5530, %f1176;
	sub.f32 	%f5671, %f5531, %f1176;
	sub.f32 	%f5672, %f5532, %f1175;
	sub.f32 	%f5673, %f5533, %f1175;
	sub.f32 	%f5674, %f5534, %f1176;
	sub.f32 	%f5675, %f5535, %f1176;
	sub.f32 	%f5676, %f5536, %f1175;
	sub.f32 	%f5677, %f5537, %f1175;
	sub.f32 	%f5678, %f5538, %f1176;
	sub.f32 	%f5679, %f5539, %f1176;
	sub.f32 	%f5680, %f5540, %f1175;
	sub.f32 	%f5681, %f5541, %f1175;
	sub.f32 	%f5682, %f5542, %f1176;
	sub.f32 	%f5683, %f5543, %f1176;
	sub.f32 	%f5684, %f5544, %f1175;
	sub.f32 	%f5685, %f5545, %f1175;
	sub.f32 	%f5686, %f5546, %f1176;
	sub.f32 	%f5687, %f5547, %f1176;
	sub.f32 	%f5688, %f5548, %f1175;
	sub.f32 	%f5689, %f5549, %f1175;
	sub.f32 	%f5690, %f5550, %f1176;
	sub.f32 	%f5691, %f5551, %f1176;
	sub.f32 	%f5692, %f5552, %f1175;
	sub.f32 	%f5693, %f5553, %f1175;
	sub.f32 	%f5694, %f5554, %f1176;
	sub.f32 	%f5695, %f5555, %f1176;
	sub.f32 	%f5696, %f5556, %f1175;
	sub.f32 	%f5697, %f5557, %f1175;
	sub.f32 	%f5698, %f5558, %f1176;
	sub.f32 	%f5699, %f5559, %f1176;
	.loc	1 253 19                        // prefix_prefill.py:253:19
	mul.f32 	%f4657, %f5636, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4656, %f4657;
	// end inline asm
	mul.f32 	%f4659, %f5637, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4658, %f4659;
	// end inline asm
	mul.f32 	%f4661, %f5638, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4660, %f4661;
	// end inline asm
	mul.f32 	%f4663, %f5639, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4662, %f4663;
	// end inline asm
	mul.f32 	%f4665, %f5640, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4664, %f4665;
	// end inline asm
	mul.f32 	%f4667, %f5641, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4666, %f4667;
	// end inline asm
	mul.f32 	%f4669, %f5642, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4668, %f4669;
	// end inline asm
	mul.f32 	%f4671, %f5643, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4670, %f4671;
	// end inline asm
	mul.f32 	%f4673, %f5644, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4672, %f4673;
	// end inline asm
	mul.f32 	%f4675, %f5645, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4674, %f4675;
	// end inline asm
	mul.f32 	%f4677, %f5646, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4676, %f4677;
	// end inline asm
	mul.f32 	%f4679, %f5647, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4678, %f4679;
	// end inline asm
	mul.f32 	%f4681, %f5648, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4680, %f4681;
	// end inline asm
	mul.f32 	%f4683, %f5649, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4682, %f4683;
	// end inline asm
	mul.f32 	%f4685, %f5650, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4684, %f4685;
	// end inline asm
	mul.f32 	%f4687, %f5651, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4686, %f4687;
	// end inline asm
	mul.f32 	%f4689, %f5652, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4688, %f4689;
	// end inline asm
	mul.f32 	%f4691, %f5653, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4690, %f4691;
	// end inline asm
	mul.f32 	%f4693, %f5654, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4692, %f4693;
	// end inline asm
	mul.f32 	%f4695, %f5655, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4694, %f4695;
	// end inline asm
	mul.f32 	%f4697, %f5656, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4696, %f4697;
	// end inline asm
	mul.f32 	%f4699, %f5657, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4698, %f4699;
	// end inline asm
	mul.f32 	%f4701, %f5658, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4700, %f4701;
	// end inline asm
	mul.f32 	%f4703, %f5659, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4702, %f4703;
	// end inline asm
	mul.f32 	%f4705, %f5660, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4704, %f4705;
	// end inline asm
	mul.f32 	%f4707, %f5661, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4706, %f4707;
	// end inline asm
	mul.f32 	%f4709, %f5662, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4708, %f4709;
	// end inline asm
	mul.f32 	%f4711, %f5663, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4710, %f4711;
	// end inline asm
	mul.f32 	%f4713, %f5664, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4712, %f4713;
	// end inline asm
	mul.f32 	%f4715, %f5665, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4714, %f4715;
	// end inline asm
	mul.f32 	%f4717, %f5666, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4716, %f4717;
	// end inline asm
	mul.f32 	%f4719, %f5667, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4718, %f4719;
	// end inline asm
	mul.f32 	%f4721, %f5668, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4720, %f4721;
	// end inline asm
	mul.f32 	%f4723, %f5669, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4722, %f4723;
	// end inline asm
	mul.f32 	%f4725, %f5670, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4724, %f4725;
	// end inline asm
	mul.f32 	%f4727, %f5671, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4726, %f4727;
	// end inline asm
	mul.f32 	%f4729, %f5672, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4728, %f4729;
	// end inline asm
	mul.f32 	%f4731, %f5673, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4730, %f4731;
	// end inline asm
	mul.f32 	%f4733, %f5674, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4732, %f4733;
	// end inline asm
	mul.f32 	%f4735, %f5675, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4734, %f4735;
	// end inline asm
	mul.f32 	%f4737, %f5676, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4736, %f4737;
	// end inline asm
	mul.f32 	%f4739, %f5677, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4738, %f4739;
	// end inline asm
	mul.f32 	%f4741, %f5678, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4740, %f4741;
	// end inline asm
	mul.f32 	%f4743, %f5679, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4742, %f4743;
	// end inline asm
	mul.f32 	%f4745, %f5680, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4744, %f4745;
	// end inline asm
	mul.f32 	%f4747, %f5681, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4746, %f4747;
	// end inline asm
	mul.f32 	%f4749, %f5682, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4748, %f4749;
	// end inline asm
	mul.f32 	%f4751, %f5683, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4750, %f4751;
	// end inline asm
	mul.f32 	%f4753, %f5684, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4752, %f4753;
	// end inline asm
	mul.f32 	%f4755, %f5685, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4754, %f4755;
	// end inline asm
	mul.f32 	%f4757, %f5686, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4756, %f4757;
	// end inline asm
	mul.f32 	%f4759, %f5687, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4758, %f4759;
	// end inline asm
	mul.f32 	%f4761, %f5688, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4760, %f4761;
	// end inline asm
	mul.f32 	%f4763, %f5689, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4762, %f4763;
	// end inline asm
	mul.f32 	%f4765, %f5690, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4764, %f4765;
	// end inline asm
	mul.f32 	%f4767, %f5691, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4766, %f4767;
	// end inline asm
	mul.f32 	%f4769, %f5692, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4768, %f4769;
	// end inline asm
	mul.f32 	%f4771, %f5693, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4770, %f4771;
	// end inline asm
	mul.f32 	%f4773, %f5694, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4772, %f4773;
	// end inline asm
	mul.f32 	%f4775, %f5695, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4774, %f4775;
	// end inline asm
	mul.f32 	%f4777, %f5696, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4776, %f4777;
	// end inline asm
	mul.f32 	%f4779, %f5697, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4778, %f4779;
	// end inline asm
	mul.f32 	%f4781, %f5698, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4780, %f4781;
	// end inline asm
	mul.f32 	%f4783, %f5699, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4782, %f4783;
	// end inline asm
$L__tmp23:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f5700, %f4656, %f4658;
	add.f32 	%f5701, %f4660, %f4662;
	add.f32 	%f5702, %f5700, %f4664;
	add.f32 	%f5703, %f5702, %f4666;
	add.f32 	%f5704, %f5701, %f4668;
	add.f32 	%f5705, %f5704, %f4670;
	add.f32 	%f5706, %f5703, %f4672;
	add.f32 	%f5707, %f5706, %f4674;
	add.f32 	%f5708, %f5705, %f4676;
	add.f32 	%f5709, %f5708, %f4678;
	add.f32 	%f5710, %f5707, %f4680;
	add.f32 	%f5711, %f5710, %f4682;
	add.f32 	%f5712, %f5709, %f4684;
	add.f32 	%f5713, %f5712, %f4686;
	add.f32 	%f5714, %f5711, %f4688;
	add.f32 	%f5715, %f5714, %f4690;
	add.f32 	%f5716, %f5713, %f4692;
	add.f32 	%f5717, %f5716, %f4694;
	add.f32 	%f5718, %f5715, %f4696;
	add.f32 	%f5719, %f5718, %f4698;
	add.f32 	%f5720, %f5717, %f4700;
	add.f32 	%f5721, %f5720, %f4702;
	add.f32 	%f5722, %f5719, %f4704;
	add.f32 	%f5723, %f5722, %f4706;
	add.f32 	%f5724, %f5721, %f4708;
	add.f32 	%f5725, %f5724, %f4710;
	add.f32 	%f5726, %f5723, %f4712;
	add.f32 	%f5727, %f5726, %f4714;
	add.f32 	%f5728, %f5725, %f4716;
	add.f32 	%f5729, %f5728, %f4718;
	add.f32 	%f5730, %f4720, %f4722;
	add.f32 	%f5731, %f4724, %f4726;
	add.f32 	%f5732, %f5730, %f4728;
	add.f32 	%f5733, %f5732, %f4730;
	add.f32 	%f5734, %f5731, %f4732;
	add.f32 	%f5735, %f5734, %f4734;
	add.f32 	%f5736, %f5733, %f4736;
	add.f32 	%f5737, %f5736, %f4738;
	add.f32 	%f5738, %f5735, %f4740;
	add.f32 	%f5739, %f5738, %f4742;
	add.f32 	%f5740, %f5737, %f4744;
	add.f32 	%f5741, %f5740, %f4746;
	add.f32 	%f5742, %f5739, %f4748;
	add.f32 	%f5743, %f5742, %f4750;
	add.f32 	%f5744, %f5741, %f4752;
	add.f32 	%f5745, %f5744, %f4754;
	add.f32 	%f5746, %f5743, %f4756;
	add.f32 	%f5747, %f5746, %f4758;
	add.f32 	%f5748, %f5745, %f4760;
	add.f32 	%f5749, %f5748, %f4762;
	add.f32 	%f5750, %f5747, %f4764;
	add.f32 	%f5751, %f5750, %f4766;
	add.f32 	%f5752, %f5749, %f4768;
	add.f32 	%f5753, %f5752, %f4770;
	add.f32 	%f5754, %f5751, %f4772;
	add.f32 	%f5755, %f5754, %f4774;
	add.f32 	%f5756, %f5753, %f4776;
	add.f32 	%f5757, %f5756, %f4778;
	add.f32 	%f5758, %f5755, %f4780;
	add.f32 	%f5759, %f5758, %f4782;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r1281, %f5727;
	shfl.sync.bfly.b32	%r1282, %r1281, 2, 31, -1;
	mov.b32 	%f5760, %r1282;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f5761, %f5727, %f5760;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r1283, %f5761;
	shfl.sync.bfly.b32	%r1284, %r1283, 1, 31, -1;
	mov.b32 	%r1285, %f5729;
	shfl.sync.bfly.b32	%r1286, %r1285, 2, 31, -1;
	mov.b32 	%f5762, %r1286;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f5763, %f5729, %f5762;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r1287, %f5763;
	shfl.sync.bfly.b32	%r1288, %r1287, 1, 31, -1;
	mov.b32 	%r1289, %f5757;
	shfl.sync.bfly.b32	%r1290, %r1289, 2, 31, -1;
	mov.b32 	%f5764, %r1290;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f5765, %f5757, %f5764;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r1291, %f5765;
	shfl.sync.bfly.b32	%r1292, %r1291, 1, 31, -1;
	mov.b32 	%r1293, %f5759;
	shfl.sync.bfly.b32	%r1294, %r1293, 2, 31, -1;
	mov.b32 	%f5766, %r1294;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f5767, %f5759, %f5766;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r1295, %f5767;
	shfl.sync.bfly.b32	%r1296, %r1295, 1, 31, -1;
$L__tmp24:
	.loc	1 255 29                        // prefix_prefill.py:255:29
	sub.f32 	%f5768, %f5919, %f1176;
	sub.f32 	%f5769, %f5918, %f1175;
	sub.f32 	%f5770, %f5917, %f1174;
	sub.f32 	%f5771, %f5916, %f1173;
	.loc	1 255 23                        // prefix_prefill.py:255:23
	mul.f32 	%f4785, %f5771, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4784, %f4785;
	// end inline asm
	mul.f32 	%f4787, %f5770, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4786, %f4787;
	// end inline asm
	mul.f32 	%f4789, %f5769, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4788, %f4789;
	// end inline asm
	mul.f32 	%f4791, %f5768, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4790, %f4791;
	// end inline asm
	.loc	1 256 20                        // prefix_prefill.py:256:20
	mul.f32 	%f5924, %f5924, %f4784;
	mul.f32 	%f5925, %f5925, %f4784;
	mul.f32 	%f5926, %f5926, %f4786;
	mul.f32 	%f5927, %f5927, %f4786;
	mul.f32 	%f5928, %f5928, %f4784;
	mul.f32 	%f5929, %f5929, %f4784;
	mul.f32 	%f5930, %f5930, %f4786;
	mul.f32 	%f5931, %f5931, %f4786;
	mul.f32 	%f5932, %f5932, %f4784;
	mul.f32 	%f5933, %f5933, %f4784;
	mul.f32 	%f5934, %f5934, %f4786;
	mul.f32 	%f5935, %f5935, %f4786;
	mul.f32 	%f5936, %f5936, %f4784;
	mul.f32 	%f5937, %f5937, %f4784;
	mul.f32 	%f5938, %f5938, %f4786;
	mul.f32 	%f5939, %f5939, %f4786;
	mul.f32 	%f5940, %f5940, %f4784;
	mul.f32 	%f5941, %f5941, %f4784;
	mul.f32 	%f5942, %f5942, %f4786;
	mul.f32 	%f5943, %f5943, %f4786;
	mul.f32 	%f5944, %f5944, %f4784;
	mul.f32 	%f5945, %f5945, %f4784;
	mul.f32 	%f5946, %f5946, %f4786;
	mul.f32 	%f5947, %f5947, %f4786;
	mul.f32 	%f5948, %f5948, %f4784;
	mul.f32 	%f5949, %f5949, %f4784;
	mul.f32 	%f5950, %f5950, %f4786;
	mul.f32 	%f5951, %f5951, %f4786;
	mul.f32 	%f5952, %f5952, %f4784;
	mul.f32 	%f5953, %f5953, %f4784;
	mul.f32 	%f5954, %f5954, %f4786;
	mul.f32 	%f5955, %f5955, %f4786;
	mul.f32 	%f5956, %f5956, %f4788;
	mul.f32 	%f5957, %f5957, %f4788;
	mul.f32 	%f5958, %f5958, %f4790;
	mul.f32 	%f5959, %f5959, %f4790;
	mul.f32 	%f5960, %f5960, %f4788;
	mul.f32 	%f5961, %f5961, %f4788;
	mul.f32 	%f5962, %f5962, %f4790;
	mul.f32 	%f5963, %f5963, %f4790;
	mul.f32 	%f5964, %f5964, %f4788;
	mul.f32 	%f5965, %f5965, %f4788;
	mul.f32 	%f5966, %f5966, %f4790;
	mul.f32 	%f5967, %f5967, %f4790;
	mul.f32 	%f5968, %f5968, %f4788;
	mul.f32 	%f5969, %f5969, %f4788;
	mul.f32 	%f5970, %f5970, %f4790;
	mul.f32 	%f5971, %f5971, %f4790;
	mul.f32 	%f5972, %f5972, %f4788;
	mul.f32 	%f5973, %f5973, %f4788;
	mul.f32 	%f5974, %f5974, %f4790;
	mul.f32 	%f5975, %f5975, %f4790;
	mul.f32 	%f5976, %f5976, %f4788;
	mul.f32 	%f5977, %f5977, %f4788;
	mul.f32 	%f5978, %f5978, %f4790;
	mul.f32 	%f5979, %f5979, %f4790;
	mul.f32 	%f5980, %f5980, %f4788;
	mul.f32 	%f5981, %f5981, %f4788;
	mul.f32 	%f5982, %f5982, %f4790;
	mul.f32 	%f5983, %f5983, %f4790;
	mul.f32 	%f5984, %f5984, %f4788;
	mul.f32 	%f5985, %f5985, %f4788;
	mul.f32 	%f5986, %f5986, %f4790;
	mul.f32 	%f5987, %f5987, %f4790;
	.loc	1 260 20                        // prefix_prefill.py:260:20
	mul.wide.s32 	%rd512, %r1773, 2;
	add.s64 	%rd415, %rd34, %rd512;
	add.s64 	%rd416, %rd35, %rd512;
	add.s64 	%rd417, %rd36, %rd512;
	add.s64 	%rd418, %rd37, %rd512;
	.loc	1 259 20                        // prefix_prefill.py:259:20
	// begin inline asm
	mov.u32 %r1083, 0x0;
	mov.u32 %r1084, 0x0;
	mov.u32 %r1085, 0x0;
	mov.u32 %r1086, 0x0;
	@%p273 ld.global.v4.b32 { %r1083, %r1084, %r1085, %r1086 }, [ %rd415 + 0 ];
	@!%p273 mov.u32 %r1083, %r293;
	@!%p273 mov.u32 %r1084, %r293;
	@!%p273 mov.u32 %r1085, %r293;
	@!%p273 mov.u32 %r1086, %r293;
	// end inline asm
	// begin inline asm
	mov.u32 %r1091, 0x0;
	mov.u32 %r1092, 0x0;
	mov.u32 %r1093, 0x0;
	mov.u32 %r1094, 0x0;
	@%p278 ld.global.v4.b32 { %r1091, %r1092, %r1093, %r1094 }, [ %rd416 + 0 ];
	@!%p278 mov.u32 %r1091, %r293;
	@!%p278 mov.u32 %r1092, %r293;
	@!%p278 mov.u32 %r1093, %r293;
	@!%p278 mov.u32 %r1094, %r293;
	// end inline asm
	// begin inline asm
	mov.u32 %r1099, 0x0;
	mov.u32 %r1100, 0x0;
	mov.u32 %r1101, 0x0;
	mov.u32 %r1102, 0x0;
	@%p283 ld.global.v4.b32 { %r1099, %r1100, %r1101, %r1102 }, [ %rd417 + 0 ];
	@!%p283 mov.u32 %r1099, %r293;
	@!%p283 mov.u32 %r1100, %r293;
	@!%p283 mov.u32 %r1101, %r293;
	@!%p283 mov.u32 %r1102, %r293;
	// end inline asm
	// begin inline asm
	mov.u32 %r1107, 0x0;
	mov.u32 %r1108, 0x0;
	mov.u32 %r1109, 0x0;
	mov.u32 %r1110, 0x0;
	@%p288 ld.global.v4.b32 { %r1107, %r1108, %r1109, %r1110 }, [ %rd418 + 0 ];
	@!%p288 mov.u32 %r1107, %r293;
	@!%p288 mov.u32 %r1108, %r293;
	@!%p288 mov.u32 %r1109, %r293;
	@!%p288 mov.u32 %r1110, %r293;
	// end inline asm
	bar.sync 	0;
	st.shared.v4.b32 	[%r265], {%r1083, %r1084, %r1085, %r1086};
	st.shared.v4.b32 	[%r265+2048], {%r1091, %r1092, %r1093, %r1094};
	st.shared.v4.b32 	[%r265+4096], {%r1099, %r1100, %r1101, %r1102};
	st.shared.v4.b32 	[%r265+6144], {%r1107, %r1108, %r1109, %r1110};
	.loc	1 264 17                        // prefix_prefill.py:264:17
	mov.b32 	%r1115, %f4656;
	// begin inline asm
	cvt.rn.bf16.f32 %rs241, %r1115;
	// end inline asm
	mov.b32 	%r1116, %f4658;
	// begin inline asm
	cvt.rn.bf16.f32 %rs242, %r1116;
	// end inline asm
	mov.b32 	%r1117, %f4660;
	// begin inline asm
	cvt.rn.bf16.f32 %rs243, %r1117;
	// end inline asm
	mov.b32 	%r1118, %f4662;
	// begin inline asm
	cvt.rn.bf16.f32 %rs244, %r1118;
	// end inline asm
	mov.b32 	%r1119, %f4664;
	// begin inline asm
	cvt.rn.bf16.f32 %rs245, %r1119;
	// end inline asm
	mov.b32 	%r1120, %f4666;
	// begin inline asm
	cvt.rn.bf16.f32 %rs246, %r1120;
	// end inline asm
	mov.b32 	%r1121, %f4668;
	// begin inline asm
	cvt.rn.bf16.f32 %rs247, %r1121;
	// end inline asm
	mov.b32 	%r1122, %f4670;
	// begin inline asm
	cvt.rn.bf16.f32 %rs248, %r1122;
	// end inline asm
	mov.b32 	%r1123, %f4672;
	// begin inline asm
	cvt.rn.bf16.f32 %rs249, %r1123;
	// end inline asm
	mov.b32 	%r1124, %f4674;
	// begin inline asm
	cvt.rn.bf16.f32 %rs250, %r1124;
	// end inline asm
	mov.b32 	%r1125, %f4676;
	// begin inline asm
	cvt.rn.bf16.f32 %rs251, %r1125;
	// end inline asm
	mov.b32 	%r1126, %f4678;
	// begin inline asm
	cvt.rn.bf16.f32 %rs252, %r1126;
	// end inline asm
	mov.b32 	%r1127, %f4680;
	// begin inline asm
	cvt.rn.bf16.f32 %rs253, %r1127;
	// end inline asm
	mov.b32 	%r1128, %f4682;
	// begin inline asm
	cvt.rn.bf16.f32 %rs254, %r1128;
	// end inline asm
	mov.b32 	%r1129, %f4684;
	// begin inline asm
	cvt.rn.bf16.f32 %rs255, %r1129;
	// end inline asm
	mov.b32 	%r1130, %f4686;
	// begin inline asm
	cvt.rn.bf16.f32 %rs256, %r1130;
	// end inline asm
	mov.b32 	%r1131, %f4688;
	// begin inline asm
	cvt.rn.bf16.f32 %rs257, %r1131;
	// end inline asm
	mov.b32 	%r1132, %f4690;
	// begin inline asm
	cvt.rn.bf16.f32 %rs258, %r1132;
	// end inline asm
	mov.b32 	%r1133, %f4692;
	// begin inline asm
	cvt.rn.bf16.f32 %rs259, %r1133;
	// end inline asm
	mov.b32 	%r1134, %f4694;
	// begin inline asm
	cvt.rn.bf16.f32 %rs260, %r1134;
	// end inline asm
	mov.b32 	%r1135, %f4696;
	// begin inline asm
	cvt.rn.bf16.f32 %rs261, %r1135;
	// end inline asm
	mov.b32 	%r1136, %f4698;
	// begin inline asm
	cvt.rn.bf16.f32 %rs262, %r1136;
	// end inline asm
	mov.b32 	%r1137, %f4700;
	// begin inline asm
	cvt.rn.bf16.f32 %rs263, %r1137;
	// end inline asm
	mov.b32 	%r1138, %f4702;
	// begin inline asm
	cvt.rn.bf16.f32 %rs264, %r1138;
	// end inline asm
	mov.b32 	%r1139, %f4704;
	// begin inline asm
	cvt.rn.bf16.f32 %rs265, %r1139;
	// end inline asm
	mov.b32 	%r1140, %f4706;
	// begin inline asm
	cvt.rn.bf16.f32 %rs266, %r1140;
	// end inline asm
	mov.b32 	%r1141, %f4708;
	// begin inline asm
	cvt.rn.bf16.f32 %rs267, %r1141;
	// end inline asm
	mov.b32 	%r1142, %f4710;
	// begin inline asm
	cvt.rn.bf16.f32 %rs268, %r1142;
	// end inline asm
	mov.b32 	%r1143, %f4712;
	// begin inline asm
	cvt.rn.bf16.f32 %rs269, %r1143;
	// end inline asm
	mov.b32 	%r1144, %f4714;
	// begin inline asm
	cvt.rn.bf16.f32 %rs270, %r1144;
	// end inline asm
	mov.b32 	%r1145, %f4716;
	// begin inline asm
	cvt.rn.bf16.f32 %rs271, %r1145;
	// end inline asm
	mov.b32 	%r1146, %f4718;
	// begin inline asm
	cvt.rn.bf16.f32 %rs272, %r1146;
	// end inline asm
	mov.b32 	%r1147, %f4720;
	// begin inline asm
	cvt.rn.bf16.f32 %rs273, %r1147;
	// end inline asm
	mov.b32 	%r1148, %f4722;
	// begin inline asm
	cvt.rn.bf16.f32 %rs274, %r1148;
	// end inline asm
	mov.b32 	%r1149, %f4724;
	// begin inline asm
	cvt.rn.bf16.f32 %rs275, %r1149;
	// end inline asm
	mov.b32 	%r1150, %f4726;
	// begin inline asm
	cvt.rn.bf16.f32 %rs276, %r1150;
	// end inline asm
	mov.b32 	%r1151, %f4728;
	// begin inline asm
	cvt.rn.bf16.f32 %rs277, %r1151;
	// end inline asm
	mov.b32 	%r1152, %f4730;
	// begin inline asm
	cvt.rn.bf16.f32 %rs278, %r1152;
	// end inline asm
	mov.b32 	%r1153, %f4732;
	// begin inline asm
	cvt.rn.bf16.f32 %rs279, %r1153;
	// end inline asm
	mov.b32 	%r1154, %f4734;
	// begin inline asm
	cvt.rn.bf16.f32 %rs280, %r1154;
	// end inline asm
	mov.b32 	%r1155, %f4736;
	// begin inline asm
	cvt.rn.bf16.f32 %rs281, %r1155;
	// end inline asm
	mov.b32 	%r1156, %f4738;
	// begin inline asm
	cvt.rn.bf16.f32 %rs282, %r1156;
	// end inline asm
	mov.b32 	%r1157, %f4740;
	// begin inline asm
	cvt.rn.bf16.f32 %rs283, %r1157;
	// end inline asm
	mov.b32 	%r1158, %f4742;
	// begin inline asm
	cvt.rn.bf16.f32 %rs284, %r1158;
	// end inline asm
	mov.b32 	%r1159, %f4744;
	// begin inline asm
	cvt.rn.bf16.f32 %rs285, %r1159;
	// end inline asm
	mov.b32 	%r1160, %f4746;
	// begin inline asm
	cvt.rn.bf16.f32 %rs286, %r1160;
	// end inline asm
	mov.b32 	%r1161, %f4748;
	// begin inline asm
	cvt.rn.bf16.f32 %rs287, %r1161;
	// end inline asm
	mov.b32 	%r1162, %f4750;
	// begin inline asm
	cvt.rn.bf16.f32 %rs288, %r1162;
	// end inline asm
	mov.b32 	%r1163, %f4752;
	// begin inline asm
	cvt.rn.bf16.f32 %rs289, %r1163;
	// end inline asm
	mov.b32 	%r1164, %f4754;
	// begin inline asm
	cvt.rn.bf16.f32 %rs290, %r1164;
	// end inline asm
	mov.b32 	%r1165, %f4756;
	// begin inline asm
	cvt.rn.bf16.f32 %rs291, %r1165;
	// end inline asm
	mov.b32 	%r1166, %f4758;
	// begin inline asm
	cvt.rn.bf16.f32 %rs292, %r1166;
	// end inline asm
	mov.b32 	%r1167, %f4760;
	// begin inline asm
	cvt.rn.bf16.f32 %rs293, %r1167;
	// end inline asm
	mov.b32 	%r1168, %f4762;
	// begin inline asm
	cvt.rn.bf16.f32 %rs294, %r1168;
	// end inline asm
	mov.b32 	%r1169, %f4764;
	// begin inline asm
	cvt.rn.bf16.f32 %rs295, %r1169;
	// end inline asm
	mov.b32 	%r1170, %f4766;
	// begin inline asm
	cvt.rn.bf16.f32 %rs296, %r1170;
	// end inline asm
	mov.b32 	%r1171, %f4768;
	// begin inline asm
	cvt.rn.bf16.f32 %rs297, %r1171;
	// end inline asm
	mov.b32 	%r1172, %f4770;
	// begin inline asm
	cvt.rn.bf16.f32 %rs298, %r1172;
	// end inline asm
	mov.b32 	%r1173, %f4772;
	// begin inline asm
	cvt.rn.bf16.f32 %rs299, %r1173;
	// end inline asm
	mov.b32 	%r1174, %f4774;
	// begin inline asm
	cvt.rn.bf16.f32 %rs300, %r1174;
	// end inline asm
	mov.b32 	%r1175, %f4776;
	// begin inline asm
	cvt.rn.bf16.f32 %rs301, %r1175;
	// end inline asm
	mov.b32 	%r1176, %f4778;
	// begin inline asm
	cvt.rn.bf16.f32 %rs302, %r1176;
	// end inline asm
	mov.b32 	%r1177, %f4780;
	// begin inline asm
	cvt.rn.bf16.f32 %rs303, %r1177;
	// end inline asm
	mov.b32 	%r1178, %f4782;
	// begin inline asm
	cvt.rn.bf16.f32 %rs304, %r1178;
	// end inline asm
	.loc	1 266 24                        // prefix_prefill.py:266:24
	// begin inline asm
	fence.proxy.async.shared::cta;
	// end inline asm
	bar.sync 	0;
	mov.b32 	%r1313, {%rs241, %rs242};
	mov.b32 	%r1314, {%rs243, %rs244};
	mov.b32 	%r1315, {%rs245, %rs246};
	mov.b32 	%r1316, {%rs247, %rs248};
	mov.b32 	%r1317, {%rs249, %rs250};
	mov.b32 	%r1318, {%rs251, %rs252};
	mov.b32 	%r1319, {%rs253, %rs254};
	mov.b32 	%r1320, {%rs255, %rs256};
	mov.b32 	%r1321, {%rs257, %rs258};
	mov.b32 	%r1322, {%rs259, %rs260};
	mov.b32 	%r1323, {%rs261, %rs262};
	mov.b32 	%r1324, {%rs263, %rs264};
	mov.b32 	%r1325, {%rs265, %rs266};
	mov.b32 	%r1326, {%rs267, %rs268};
	mov.b32 	%r1327, {%rs269, %rs270};
	mov.b32 	%r1328, {%rs271, %rs272};
	mov.b32 	%r1329, {%rs273, %rs274};
	mov.b32 	%r1330, {%rs275, %rs276};
	mov.b32 	%r1331, {%rs277, %rs278};
	mov.b32 	%r1332, {%rs279, %rs280};
	mov.b32 	%r1333, {%rs281, %rs282};
	mov.b32 	%r1334, {%rs283, %rs284};
	mov.b32 	%r1335, {%rs285, %rs286};
	mov.b32 	%r1336, {%rs287, %rs288};
	mov.b32 	%r1337, {%rs289, %rs290};
	mov.b32 	%r1338, {%rs291, %rs292};
	mov.b32 	%r1339, {%rs293, %rs294};
	mov.b32 	%r1340, {%rs295, %rs296};
	mov.b32 	%r1341, {%rs297, %rs298};
	mov.b32 	%r1342, {%rs299, %rs300};
	mov.b32 	%r1343, {%rs301, %rs302};
	mov.b32 	%r1344, {%rs303, %rs304};
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f5924,%f5925,%f5926,%f5927,%f5928,%f5929,%f5930,%f5931,%f5932,%f5933,%f5934,%f5935,%f5936,%f5937,%f5938,%f5939,%f5940,%f5941,%f5942,%f5943,%f5944,%f5945,%f5946,%f5947,%f5948,%f5949,%f5950,%f5951,%f5952,%f5953,%f5954,%f5955}, {%r1313,%r1314,%r1315,%r1316}, %rd400, %p437, 1, 1, 1;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f5924,%f5925,%f5926,%f5927,%f5928,%f5929,%f5930,%f5931,%f5932,%f5933,%f5934,%f5935,%f5936,%f5937,%f5938,%f5939,%f5940,%f5941,%f5942,%f5943,%f5944,%f5945,%f5946,%f5947,%f5948,%f5949,%f5950,%f5951,%f5952,%f5953,%f5954,%f5955}, {%r1317,%r1318,%r1319,%r1320}, %rd420, %p437, 1, 1, 1;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f5924,%f5925,%f5926,%f5927,%f5928,%f5929,%f5930,%f5931,%f5932,%f5933,%f5934,%f5935,%f5936,%f5937,%f5938,%f5939,%f5940,%f5941,%f5942,%f5943,%f5944,%f5945,%f5946,%f5947,%f5948,%f5949,%f5950,%f5951,%f5952,%f5953,%f5954,%f5955}, {%r1321,%r1322,%r1323,%r1324}, %rd421, %p437, 1, 1, 1;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f5924,%f5925,%f5926,%f5927,%f5928,%f5929,%f5930,%f5931,%f5932,%f5933,%f5934,%f5935,%f5936,%f5937,%f5938,%f5939,%f5940,%f5941,%f5942,%f5943,%f5944,%f5945,%f5946,%f5947,%f5948,%f5949,%f5950,%f5951,%f5952,%f5953,%f5954,%f5955}, {%r1325,%r1326,%r1327,%r1328}, %rd422, %p437, 1, 1, 1;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f5956,%f5957,%f5958,%f5959,%f5960,%f5961,%f5962,%f5963,%f5964,%f5965,%f5966,%f5967,%f5968,%f5969,%f5970,%f5971,%f5972,%f5973,%f5974,%f5975,%f5976,%f5977,%f5978,%f5979,%f5980,%f5981,%f5982,%f5983,%f5984,%f5985,%f5986,%f5987}, {%r1329,%r1330,%r1331,%r1332}, %rd400, %p437, 1, 1, 1;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f5956,%f5957,%f5958,%f5959,%f5960,%f5961,%f5962,%f5963,%f5964,%f5965,%f5966,%f5967,%f5968,%f5969,%f5970,%f5971,%f5972,%f5973,%f5974,%f5975,%f5976,%f5977,%f5978,%f5979,%f5980,%f5981,%f5982,%f5983,%f5984,%f5985,%f5986,%f5987}, {%r1333,%r1334,%r1335,%r1336}, %rd420, %p437, 1, 1, 1;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f5956,%f5957,%f5958,%f5959,%f5960,%f5961,%f5962,%f5963,%f5964,%f5965,%f5966,%f5967,%f5968,%f5969,%f5970,%f5971,%f5972,%f5973,%f5974,%f5975,%f5976,%f5977,%f5978,%f5979,%f5980,%f5981,%f5982,%f5983,%f5984,%f5985,%f5986,%f5987}, {%r1337,%r1338,%r1339,%r1340}, %rd421, %p437, 1, 1, 1;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f5956,%f5957,%f5958,%f5959,%f5960,%f5961,%f5962,%f5963,%f5964,%f5965,%f5966,%f5967,%f5968,%f5969,%f5970,%f5971,%f5972,%f5973,%f5974,%f5975,%f5976,%f5977,%f5978,%f5979,%f5980,%f5981,%f5982,%f5983,%f5984,%f5985,%f5986,%f5987}, {%r1341,%r1342,%r1343,%r1344}, %rd422, %p437, 1, 1, 1;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	// begin inline asm
	// wait for regs: %f5924,%f5925,%f5926,%f5927,%f5928,%f5929,%f5930,%f5931,%f5932,%f5933,%f5934,%f5935,%f5936,%f5937,%f5938,%f5939,%f5940,%f5941,%f5942,%f5943,%f5944,%f5945,%f5946,%f5947,%f5948,%f5949,%f5950,%f5951,%f5952,%f5953,%f5954,%f5955,%f5956,%f5957,%f5958,%f5959,%f5960,%f5961,%f5962,%f5963,%f5964,%f5965,%f5966,%f5967,%f5968,%f5969,%f5970,%f5971,%f5972,%f5973,%f5974,%f5975,%f5976,%f5977,%f5978,%f5979,%f5980,%f5981,%f5982,%f5983,%f5984,%f5985,%f5986,%f5987
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
$L__tmp25:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%f5772, %r1292;
	mov.b32 	%f5773, %r1296;
	mov.b32 	%f5774, %r1288;
	mov.b32 	%f5775, %r1284;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f5776, %f5767, %f5773;
	add.f32 	%f5777, %f5765, %f5772;
	add.f32 	%f5778, %f5761, %f5775;
	add.f32 	%f5779, %f5763, %f5774;
$L__tmp26:
	.loc	1 268 28                        // prefix_prefill.py:268:28
	fma.rn.f32 	%f6062, %f6062, %f4788, %f5777;
	fma.rn.f32 	%f6063, %f6063, %f4790, %f5776;
	fma.rn.f32 	%f6061, %f6061, %f4786, %f5779;
	fma.rn.f32 	%f6060, %f6060, %f4784, %f5778;
	.loc	1 231 24                        // prefix_prefill.py:231:24
	add.s64 	%rd538, %rd538, 64;
	add.s32 	%r1773, %r1773, %r268;
	add.s32 	%r1772, %r1772, %r270;
	setp.lt.u64 	%p436, %rd538, %rd58;
	mov.f32 	%f5916, %f1173;
	mov.f32 	%f5917, %f1174;
	mov.f32 	%f5918, %f1175;
	mov.f32 	%f5919, %f1176;
	@%p436 bra 	$L__BB0_38;
$L__BB0_39:                             // %._crit_edge395
	.loc	1 271 16                        // prefix_prefill.py:271:16
	mov.b32 	%r1346, %f5924;
	mov.b32 	%r1347, %f6060;
	// begin inline asm
	div.full.f32 %r1537, %r1346, %r1347;
	// end inline asm
	mov.b32 	%r1349, %f5925;
	// begin inline asm
	div.full.f32 %r1538, %r1349, %r1347;
	// end inline asm
	mov.b32 	%r1352, %f5926;
	mov.b32 	%r1353, %f6061;
	// begin inline asm
	div.full.f32 %r1539, %r1352, %r1353;
	// end inline asm
	mov.b32 	%r1355, %f5927;
	// begin inline asm
	div.full.f32 %r1540, %r1355, %r1353;
	// end inline asm
	mov.b32 	%r1358, %f5928;
	// begin inline asm
	div.full.f32 %r1541, %r1358, %r1347;
	// end inline asm
	mov.b32 	%r1361, %f5929;
	// begin inline asm
	div.full.f32 %r1542, %r1361, %r1347;
	// end inline asm
	mov.b32 	%r1364, %f5930;
	// begin inline asm
	div.full.f32 %r1543, %r1364, %r1353;
	// end inline asm
	mov.b32 	%r1367, %f5931;
	// begin inline asm
	div.full.f32 %r1544, %r1367, %r1353;
	// end inline asm
	mov.b32 	%r1370, %f5932;
	// begin inline asm
	div.full.f32 %r1545, %r1370, %r1347;
	// end inline asm
	mov.b32 	%r1373, %f5933;
	// begin inline asm
	div.full.f32 %r1546, %r1373, %r1347;
	// end inline asm
	mov.b32 	%r1376, %f5934;
	// begin inline asm
	div.full.f32 %r1547, %r1376, %r1353;
	// end inline asm
	mov.b32 	%r1379, %f5935;
	// begin inline asm
	div.full.f32 %r1548, %r1379, %r1353;
	// end inline asm
	mov.b32 	%r1382, %f5936;
	// begin inline asm
	div.full.f32 %r1549, %r1382, %r1347;
	// end inline asm
	mov.b32 	%r1385, %f5937;
	// begin inline asm
	div.full.f32 %r1550, %r1385, %r1347;
	// end inline asm
	mov.b32 	%r1388, %f5938;
	// begin inline asm
	div.full.f32 %r1551, %r1388, %r1353;
	// end inline asm
	mov.b32 	%r1391, %f5939;
	// begin inline asm
	div.full.f32 %r1552, %r1391, %r1353;
	// end inline asm
	mov.b32 	%r1394, %f5940;
	// begin inline asm
	div.full.f32 %r1553, %r1394, %r1347;
	// end inline asm
	mov.b32 	%r1397, %f5941;
	// begin inline asm
	div.full.f32 %r1554, %r1397, %r1347;
	// end inline asm
	mov.b32 	%r1400, %f5942;
	// begin inline asm
	div.full.f32 %r1555, %r1400, %r1353;
	// end inline asm
	mov.b32 	%r1403, %f5943;
	// begin inline asm
	div.full.f32 %r1556, %r1403, %r1353;
	// end inline asm
	mov.b32 	%r1406, %f5944;
	// begin inline asm
	div.full.f32 %r1557, %r1406, %r1347;
	// end inline asm
	mov.b32 	%r1409, %f5945;
	// begin inline asm
	div.full.f32 %r1558, %r1409, %r1347;
	// end inline asm
	mov.b32 	%r1412, %f5946;
	// begin inline asm
	div.full.f32 %r1559, %r1412, %r1353;
	// end inline asm
	mov.b32 	%r1415, %f5947;
	// begin inline asm
	div.full.f32 %r1560, %r1415, %r1353;
	// end inline asm
	mov.b32 	%r1418, %f5948;
	// begin inline asm
	div.full.f32 %r1561, %r1418, %r1347;
	// end inline asm
	mov.b32 	%r1421, %f5949;
	// begin inline asm
	div.full.f32 %r1562, %r1421, %r1347;
	// end inline asm
	mov.b32 	%r1424, %f5950;
	// begin inline asm
	div.full.f32 %r1563, %r1424, %r1353;
	// end inline asm
	mov.b32 	%r1427, %f5951;
	// begin inline asm
	div.full.f32 %r1564, %r1427, %r1353;
	// end inline asm
	mov.b32 	%r1430, %f5952;
	// begin inline asm
	div.full.f32 %r1565, %r1430, %r1347;
	// end inline asm
	mov.b32 	%r1433, %f5953;
	// begin inline asm
	div.full.f32 %r1566, %r1433, %r1347;
	// end inline asm
	mov.b32 	%r1436, %f5954;
	// begin inline asm
	div.full.f32 %r1567, %r1436, %r1353;
	// end inline asm
	mov.b32 	%r1439, %f5955;
	// begin inline asm
	div.full.f32 %r1568, %r1439, %r1353;
	// end inline asm
	mov.b32 	%r1442, %f5956;
	mov.b32 	%r1443, %f6062;
	// begin inline asm
	div.full.f32 %r1569, %r1442, %r1443;
	// end inline asm
	mov.b32 	%r1445, %f5957;
	// begin inline asm
	div.full.f32 %r1570, %r1445, %r1443;
	// end inline asm
	mov.b32 	%r1448, %f5958;
	mov.b32 	%r1449, %f6063;
	// begin inline asm
	div.full.f32 %r1571, %r1448, %r1449;
	// end inline asm
	mov.b32 	%r1451, %f5959;
	// begin inline asm
	div.full.f32 %r1572, %r1451, %r1449;
	// end inline asm
	mov.b32 	%r1454, %f5960;
	// begin inline asm
	div.full.f32 %r1573, %r1454, %r1443;
	// end inline asm
	mov.b32 	%r1457, %f5961;
	// begin inline asm
	div.full.f32 %r1574, %r1457, %r1443;
	// end inline asm
	mov.b32 	%r1460, %f5962;
	// begin inline asm
	div.full.f32 %r1575, %r1460, %r1449;
	// end inline asm
	mov.b32 	%r1463, %f5963;
	// begin inline asm
	div.full.f32 %r1576, %r1463, %r1449;
	// end inline asm
	mov.b32 	%r1466, %f5964;
	// begin inline asm
	div.full.f32 %r1577, %r1466, %r1443;
	// end inline asm
	mov.b32 	%r1469, %f5965;
	// begin inline asm
	div.full.f32 %r1578, %r1469, %r1443;
	// end inline asm
	mov.b32 	%r1472, %f5966;
	// begin inline asm
	div.full.f32 %r1579, %r1472, %r1449;
	// end inline asm
	mov.b32 	%r1475, %f5967;
	// begin inline asm
	div.full.f32 %r1580, %r1475, %r1449;
	// end inline asm
	mov.b32 	%r1478, %f5968;
	// begin inline asm
	div.full.f32 %r1581, %r1478, %r1443;
	// end inline asm
	mov.b32 	%r1481, %f5969;
	// begin inline asm
	div.full.f32 %r1582, %r1481, %r1443;
	// end inline asm
	mov.b32 	%r1484, %f5970;
	// begin inline asm
	div.full.f32 %r1583, %r1484, %r1449;
	// end inline asm
	mov.b32 	%r1487, %f5971;
	// begin inline asm
	div.full.f32 %r1584, %r1487, %r1449;
	// end inline asm
	mov.b32 	%r1490, %f5972;
	// begin inline asm
	div.full.f32 %r1585, %r1490, %r1443;
	// end inline asm
	mov.b32 	%r1493, %f5973;
	// begin inline asm
	div.full.f32 %r1586, %r1493, %r1443;
	// end inline asm
	mov.b32 	%r1496, %f5974;
	// begin inline asm
	div.full.f32 %r1587, %r1496, %r1449;
	// end inline asm
	mov.b32 	%r1499, %f5975;
	// begin inline asm
	div.full.f32 %r1588, %r1499, %r1449;
	// end inline asm
	mov.b32 	%r1502, %f5976;
	// begin inline asm
	div.full.f32 %r1589, %r1502, %r1443;
	// end inline asm
	mov.b32 	%r1505, %f5977;
	// begin inline asm
	div.full.f32 %r1590, %r1505, %r1443;
	// end inline asm
	mov.b32 	%r1508, %f5978;
	// begin inline asm
	div.full.f32 %r1591, %r1508, %r1449;
	// end inline asm
	mov.b32 	%r1511, %f5979;
	// begin inline asm
	div.full.f32 %r1592, %r1511, %r1449;
	// end inline asm
	mov.b32 	%r1514, %f5980;
	// begin inline asm
	div.full.f32 %r1593, %r1514, %r1443;
	// end inline asm
	mov.b32 	%r1517, %f5981;
	// begin inline asm
	div.full.f32 %r1594, %r1517, %r1443;
	// end inline asm
	mov.b32 	%r1520, %f5982;
	// begin inline asm
	div.full.f32 %r1595, %r1520, %r1449;
	// end inline asm
	mov.b32 	%r1523, %f5983;
	// begin inline asm
	div.full.f32 %r1596, %r1523, %r1449;
	// end inline asm
	mov.b32 	%r1526, %f5984;
	// begin inline asm
	div.full.f32 %r1597, %r1526, %r1443;
	// end inline asm
	mov.b32 	%r1529, %f5985;
	// begin inline asm
	div.full.f32 %r1598, %r1529, %r1443;
	// end inline asm
	mov.b32 	%r1532, %f5986;
	// begin inline asm
	div.full.f32 %r1599, %r1532, %r1449;
	// end inline asm
	mov.b32 	%r1535, %f5987;
	// begin inline asm
	div.full.f32 %r1600, %r1535, %r1449;
	// end inline asm
	.loc	1 275 13                        // prefix_prefill.py:275:13
	mad.lo.s32 	%r1665, %r284, %r280, %r10;
	.loc	1 275 36                        // prefix_prefill.py:275:36
	mad.lo.s32 	%r1666, %r34, %r279, %r1665;
	mad.lo.s32 	%r1667, %r35, %r279, %r1665;
	mad.lo.s32 	%r1668, %r36, %r279, %r1665;
	mad.lo.s32 	%r1669, %r37, %r279, %r1665;
	mad.lo.s32 	%r1670, %r38, %r279, %r1665;
	mad.lo.s32 	%r1671, %r39, %r279, %r1665;
	mad.lo.s32 	%r1672, %r40, %r279, %r1665;
	mad.lo.s32 	%r1673, %r41, %r279, %r1665;
	.loc	1 276 21                        // prefix_prefill.py:276:21
	mul.wide.s32 	%rd521, %r1666, 2;
	add.s64 	%rd513, %rd137, %rd521;
	mul.wide.s32 	%rd522, %r1667, 2;
	add.s64 	%rd514, %rd137, %rd522;
	mul.wide.s32 	%rd523, %r1668, 2;
	add.s64 	%rd515, %rd137, %rd523;
	mul.wide.s32 	%rd524, %r1669, 2;
	add.s64 	%rd516, %rd137, %rd524;
	mul.wide.s32 	%rd525, %r1670, 2;
	add.s64 	%rd517, %rd137, %rd525;
	mul.wide.s32 	%rd526, %r1671, 2;
	add.s64 	%rd518, %rd137, %rd526;
	mul.wide.s32 	%rd527, %r1672, 2;
	add.s64 	%rd519, %rd137, %rd527;
	mul.wide.s32 	%rd528, %r1673, 2;
	add.s64 	%rd520, %rd137, %rd528;
	.loc	1 278 13                        // prefix_prefill.py:278:13
	// begin inline asm
	cvt.rn.bf16.f32 %rs592, %r1537;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs593, %r1538;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs594, %r1539;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs595, %r1540;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs596, %r1541;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs597, %r1542;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs598, %r1543;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs599, %r1544;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs600, %r1545;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs601, %r1546;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs602, %r1547;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs603, %r1548;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs604, %r1549;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs605, %r1550;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs606, %r1551;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs607, %r1552;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs608, %r1553;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs609, %r1554;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs610, %r1555;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs611, %r1556;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs612, %r1557;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs613, %r1558;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs614, %r1559;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs615, %r1560;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs616, %r1561;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs617, %r1562;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs618, %r1563;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs619, %r1564;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs620, %r1565;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs621, %r1566;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs622, %r1567;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs623, %r1568;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs624, %r1569;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs625, %r1570;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs626, %r1571;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs627, %r1572;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs628, %r1573;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs629, %r1574;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs630, %r1575;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs631, %r1576;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs632, %r1577;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs633, %r1578;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs634, %r1579;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs635, %r1580;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs636, %r1581;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs637, %r1582;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs638, %r1583;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs639, %r1584;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs640, %r1585;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs641, %r1586;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs642, %r1587;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs643, %r1588;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs644, %r1589;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs645, %r1590;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs646, %r1591;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs647, %r1592;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs648, %r1593;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs649, %r1594;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs650, %r1595;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs651, %r1596;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs652, %r1597;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs653, %r1598;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs654, %r1599;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs655, %r1600;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r1674, %r7, 4;
	and.b32  	%r1675, %r1674, 448;
	or.b32  	%r1676, %r13, %r14;
	shl.b32 	%r1677, %r1676, 5;
	or.b32  	%r1678, %r1677, %r1675;
	or.b32  	%r1679, %r1678, %r42;
	and.b32  	%r1680, %r8, 1016;
	shr.u32 	%r1681, %r1678, 3;
	add.s32 	%r1682, %r1681, %r1679;
	shl.b32 	%r1683, %r1682, 1;
	add.s32 	%r1601, %r416, %r1683;
	// begin inline asm
	@%p437 st.shared.v2.b16 [ %r1601 + 0 ], { %rs592, %rs593 };
	// end inline asm
	or.b32  	%r1685, %r1678, 512;
	shr.u32 	%r1686, %r1685, 3;
	add.s32 	%r1687, %r1686, %r1679;
	shl.b32 	%r1688, %r1687, 1;
	add.s32 	%r1689, %r416, %r1688;
	add.s32 	%r1602, %r1689, 1024;
	// begin inline asm
	@%p437 st.shared.v2.b16 [ %r1602 + 0 ], { %rs594, %rs595 };
	// end inline asm
	add.s32 	%r1603, %r1601, 16;
	// begin inline asm
	@%p437 st.shared.v2.b16 [ %r1603 + 0 ], { %rs596, %rs597 };
	// end inline asm
	and.b32  	%r1690, %r1686, 504;
	add.s32 	%r1691, %r1690, %r1679;
	shl.b32 	%r1692, %r1691, 1;
	add.s32 	%r1693, %r416, %r1692;
	add.s32 	%r1604, %r1693, 1040;
	// begin inline asm
	@%p437 st.shared.v2.b16 [ %r1604 + 0 ], { %rs598, %rs599 };
	// end inline asm
	add.s32 	%r1605, %r1601, 32;
	// begin inline asm
	@%p437 st.shared.v2.b16 [ %r1605 + 0 ], { %rs600, %rs601 };
	// end inline asm
	add.s32 	%r1606, %r1693, 1056;
	// begin inline asm
	@%p437 st.shared.v2.b16 [ %r1606 + 0 ], { %rs602, %rs603 };
	// end inline asm
	add.s32 	%r1607, %r1601, 48;
	// begin inline asm
	@%p437 st.shared.v2.b16 [ %r1607 + 0 ], { %rs604, %rs605 };
	// end inline asm
	add.s32 	%r1608, %r1693, 1072;
	// begin inline asm
	@%p437 st.shared.v2.b16 [ %r1608 + 0 ], { %rs606, %rs607 };
	// end inline asm
	add.s32 	%r1609, %r1601, 64;
	// begin inline asm
	@%p437 st.shared.v2.b16 [ %r1609 + 0 ], { %rs608, %rs609 };
	// end inline asm
	add.s32 	%r1610, %r1693, 1088;
	// begin inline asm
	@%p437 st.shared.v2.b16 [ %r1610 + 0 ], { %rs610, %rs611 };
	// end inline asm
	add.s32 	%r1611, %r1601, 80;
	// begin inline asm
	@%p437 st.shared.v2.b16 [ %r1611 + 0 ], { %rs612, %rs613 };
	// end inline asm
	add.s32 	%r1612, %r1693, 1104;
	// begin inline asm
	@%p437 st.shared.v2.b16 [ %r1612 + 0 ], { %rs614, %rs615 };
	// end inline asm
	add.s32 	%r1613, %r1601, 96;
	// begin inline asm
	@%p437 st.shared.v2.b16 [ %r1613 + 0 ], { %rs616, %rs617 };
	// end inline asm
	add.s32 	%r1614, %r1693, 1120;
	// begin inline asm
	@%p437 st.shared.v2.b16 [ %r1614 + 0 ], { %rs618, %rs619 };
	// end inline asm
	add.s32 	%r1615, %r1601, 112;
	// begin inline asm
	@%p437 st.shared.v2.b16 [ %r1615 + 0 ], { %rs620, %rs621 };
	// end inline asm
	add.s32 	%r1616, %r1693, 1136;
	// begin inline asm
	@%p437 st.shared.v2.b16 [ %r1616 + 0 ], { %rs622, %rs623 };
	// end inline asm
	bar.sync 	0;
	and.b32  	%r1694, %r7, 120;
	add.s32 	%r1695, %r1680, %r1694;
	shl.b32 	%r1696, %r1695, 1;
	add.s32 	%r1697, %r416, %r1696;
	ld.shared.v4.u32 	{%r1633, %r1634, %r1635, %r1636}, [%r1697];
	or.b32  	%r1698, %r1680, 1024;
	shr.u32 	%r1699, %r1698, 3;
	and.b32  	%r1700, %r1699, 248;
	add.s32 	%r1701, %r1700, %r1680;
	shl.b32 	%r1702, %r1701, 1;
	add.s32 	%r1703, %r416, %r1702;
	ld.shared.v4.u32 	{%r1637, %r1638, %r1639, %r1640}, [%r1703+2048];
	or.b32  	%r1704, %r1680, 2048;
	shr.u32 	%r1705, %r1704, 3;
	and.b32  	%r1706, %r1705, 376;
	add.s32 	%r1707, %r1706, %r1680;
	shl.b32 	%r1708, %r1707, 1;
	add.s32 	%r1709, %r416, %r1708;
	ld.shared.v4.u32 	{%r1641, %r1642, %r1643, %r1644}, [%r1709+4096];
	or.b32  	%r1710, %r1680, 3072;
	shr.u32 	%r1711, %r1710, 3;
	and.b32  	%r1712, %r1711, 504;
	add.s32 	%r1713, %r1712, %r1680;
	shl.b32 	%r1714, %r1713, 1;
	add.s32 	%r1715, %r416, %r1714;
	ld.shared.v4.u32 	{%r1645, %r1646, %r1647, %r1648}, [%r1715+6144];
	bar.sync 	0;
	// begin inline asm
	@%p437 st.shared.v2.b16 [ %r1601 + 0 ], { %rs624, %rs625 };
	// end inline asm
	// begin inline asm
	@%p437 st.shared.v2.b16 [ %r1602 + 0 ], { %rs626, %rs627 };
	// end inline asm
	// begin inline asm
	@%p437 st.shared.v2.b16 [ %r1603 + 0 ], { %rs628, %rs629 };
	// end inline asm
	// begin inline asm
	@%p437 st.shared.v2.b16 [ %r1604 + 0 ], { %rs630, %rs631 };
	// end inline asm
	// begin inline asm
	@%p437 st.shared.v2.b16 [ %r1605 + 0 ], { %rs632, %rs633 };
	// end inline asm
	// begin inline asm
	@%p437 st.shared.v2.b16 [ %r1606 + 0 ], { %rs634, %rs635 };
	// end inline asm
	// begin inline asm
	@%p437 st.shared.v2.b16 [ %r1607 + 0 ], { %rs636, %rs637 };
	// end inline asm
	// begin inline asm
	@%p437 st.shared.v2.b16 [ %r1608 + 0 ], { %rs638, %rs639 };
	// end inline asm
	// begin inline asm
	@%p437 st.shared.v2.b16 [ %r1609 + 0 ], { %rs640, %rs641 };
	// end inline asm
	// begin inline asm
	@%p437 st.shared.v2.b16 [ %r1610 + 0 ], { %rs642, %rs643 };
	// end inline asm
	// begin inline asm
	@%p437 st.shared.v2.b16 [ %r1611 + 0 ], { %rs644, %rs645 };
	// end inline asm
	// begin inline asm
	@%p437 st.shared.v2.b16 [ %r1612 + 0 ], { %rs646, %rs647 };
	// end inline asm
	// begin inline asm
	@%p437 st.shared.v2.b16 [ %r1613 + 0 ], { %rs648, %rs649 };
	// end inline asm
	// begin inline asm
	@%p437 st.shared.v2.b16 [ %r1614 + 0 ], { %rs650, %rs651 };
	// end inline asm
	// begin inline asm
	@%p437 st.shared.v2.b16 [ %r1615 + 0 ], { %rs652, %rs653 };
	// end inline asm
	// begin inline asm
	@%p437 st.shared.v2.b16 [ %r1616 + 0 ], { %rs654, %rs655 };
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r1649, %r1650, %r1651, %r1652}, [%r1697];
	ld.shared.v4.u32 	{%r1653, %r1654, %r1655, %r1656}, [%r1703+2048];
	ld.shared.v4.u32 	{%r1657, %r1658, %r1659, %r1660}, [%r1709+4096];
	ld.shared.v4.u32 	{%r1661, %r1662, %r1663, %r1664}, [%r1715+6144];
	// begin inline asm
	@%p4 st.global.v4.b32 [ %rd513 + 0 ], { %r1633, %r1634, %r1635, %r1636 };
	// end inline asm
	// begin inline asm
	@%p9 st.global.v4.b32 [ %rd514 + 0 ], { %r1637, %r1638, %r1639, %r1640 };
	// end inline asm
	// begin inline asm
	@%p14 st.global.v4.b32 [ %rd515 + 0 ], { %r1641, %r1642, %r1643, %r1644 };
	// end inline asm
	// begin inline asm
	@%p19 st.global.v4.b32 [ %rd516 + 0 ], { %r1645, %r1646, %r1647, %r1648 };
	// end inline asm
	// begin inline asm
	@%p24 st.global.v4.b32 [ %rd517 + 0 ], { %r1649, %r1650, %r1651, %r1652 };
	// end inline asm
	// begin inline asm
	@%p29 st.global.v4.b32 [ %rd518 + 0 ], { %r1653, %r1654, %r1655, %r1656 };
	// end inline asm
	// begin inline asm
	@%p34 st.global.v4.b32 [ %rd519 + 0 ], { %r1657, %r1658, %r1659, %r1660 };
	// end inline asm
	// begin inline asm
	@%p39 st.global.v4.b32 [ %rd520 + 0 ], { %r1661, %r1662, %r1663, %r1664 };
	// end inline asm
	.loc	1 280 4                         // prefix_prefill.py:280:4
	ret;
$L__tmp27:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/data/home/scyb494/.conda/envs/verl/lib/python3.10/site-packages/vllm/attention/ops/prefix_prefill.py"
	.file	2 "/data/home/scyb494/.conda/envs/verl/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 256                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xf9 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 112                                 // DW_AT_name
.b8 114
.b8 101
.b8 102
.b8 105
.b8 120
.b8 95
.b8 112
.b8 114
.b8 101
.b8 102
.b8 105
.b8 108
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 100
.b8 97
.b8 116
.b8 97
.b8 47
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 115
.b8 99
.b8 121
.b8 98
.b8 52
.b8 57
.b8 52
.b8 47
.b8 46
.b8 99
.b8 111
.b8 110
.b8 100
.b8 97
.b8 47
.b8 101
.b8 110
.b8 118
.b8 115
.b8 47
.b8 118
.b8 101
.b8 114
.b8 108
.b8 47
.b8 108
.b8 105
.b8 98
.b8 47
.b8 112
.b8 121
.b8 116
.b8 104
.b8 111
.b8 110
.b8 51
.b8 46
.b8 49
.b8 48
.b8 47
.b8 115
.b8 105
.b8 116
.b8 101
.b8 45
.b8 112
.b8 97
.b8 99
.b8 107
.b8 97
.b8 103
.b8 101
.b8 115
.b8 47
.b8 118
.b8 108
.b8 108
.b8 109
.b8 47
.b8 97
.b8 116
.b8 116
.b8 101
.b8 110
.b8 116
.b8 105
.b8 111
.b8 110
.b8 47
.b8 111
.b8 112
.b8 115
.b8 0
.b8 2                                   // Abbrev [2] 0x7f:0xe DW_TAG_subprogram
.b8 95                                  // DW_AT_name
.b8 102
.b8 119
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8d:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 127                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa2:0x18 DW_TAG_inlined_subroutine
.b32 127                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp18                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 190                                 // DW_AT_call_line
.b8 38                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xba:0x18 DW_TAG_inlined_subroutine
.b32 127                                // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp20                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 192                                 // DW_AT_call_line
.b8 22                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd2:0x18 DW_TAG_inlined_subroutine
.b32 127                                // DW_AT_abstract_origin
.b64 $L__tmp21                          // DW_AT_low_pc
.b64 $L__tmp22                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 252                                 // DW_AT_call_line
.b8 38                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xea:0x18 DW_TAG_inlined_subroutine
.b32 127                                // DW_AT_abstract_origin
.b64 $L__tmp23                          // DW_AT_low_pc
.b64 $L__tmp26                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 254                                 // DW_AT_call_line
.b8 22                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
