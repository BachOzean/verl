//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	cross_entropy_fwd_kernel
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};

.visible .entry cross_entropy_fwd_kernel(
	.param .u64 cross_entropy_fwd_kernel_param_0,
	.param .u64 cross_entropy_fwd_kernel_param_1,
	.param .u64 cross_entropy_fwd_kernel_param_2,
	.param .u64 cross_entropy_fwd_kernel_param_3,
	.param .u64 cross_entropy_fwd_kernel_param_4,
	.param .f32 cross_entropy_fwd_kernel_param_5,
	.param .f32 cross_entropy_fwd_kernel_param_6,
	.param .f32 cross_entropy_fwd_kernel_param_7,
	.param .u32 cross_entropy_fwd_kernel_param_8,
	.param .u32 cross_entropy_fwd_kernel_param_9,
	.param .u32 cross_entropy_fwd_kernel_param_10,
	.param .u32 cross_entropy_fwd_kernel_param_11,
	.param .u32 cross_entropy_fwd_kernel_param_12
)
.maxntid 512, 1, 1
{
	.reg .pred 	%p<44>;
	.reg .b16 	%rs<35>;
	.reg .b32 	%r<152>;
	.reg .f32 	%f<326>;
	.reg .b64 	%rd<31>;
	.loc	1 25 0
$L__func_begin0:
	.loc	1 25 0

	ld.param.u32 	%r14, [cross_entropy_fwd_kernel_param_11];
	ld.param.f32 	%f14, [cross_entropy_fwd_kernel_param_6];
$L__tmp0:
	.loc	1 45 28
	// begin inline asm
	mov.u32 %r15, %ctaid.x;
	// end inline asm
	ld.param.u64 	%rd9, [cross_entropy_fwd_kernel_param_3];
	ld.param.u32 	%r16, [cross_entropy_fwd_kernel_param_12];
	.loc	1 46 40
	mul.wide.s32 	%rd10, %r15, %r16;
	.loc	1 46 30
	shl.b64 	%rd11, %rd10, 1;
	add.s64 	%rd2, %rd9, %rd11;
	.loc	1 53 45
	mov.u32 	%r1, %tid.x;
	.loc	1 52 43
	setp.lt.s32 	%p2, %r14, 1;
	mov.f32 	%f323, 0fFF800000;
	mov.f32 	%f322, 0f00000000;
	@%p2 bra 	$L__BB0_3;
	.loc	1 53 45
	shl.b32 	%r17, %r1, 3;
	and.b32  	%r2, %r17, 4088;
	and.b32  	%r3, %r1, 31;
	shr.u32 	%r19, %r1, 3;
	and.b32  	%r20, %r19, 60;
	mov.u32 	%r21, global_smem;
	add.s32 	%r88, %r21, %r20;
	setp.lt.s32 	%p26, %r1, 16;
	shl.b32 	%r22, %r1, 2;
	add.s32 	%r97, %r21, %r22;
	and.b32  	%r23, %r1, 15;
	setp.eq.s32 	%p4, %r23, 0;
	and.pred  	%p27, %p26, %p4;
	mov.b32 	%r149, 0;
	mov.f32 	%f322, 0f00000000;
	mov.f32 	%f320, 0fFF800000;
	setp.eq.s32 	%p25, %r3, 0;
$L__BB0_2:
	.loc	1 53 32
	add.s32 	%r100, %r2, %r149;
	add.s32 	%r101, %r100, 4096;
	add.s32 	%r102, %r100, 8192;
	.loc	1 54 60
	add.s32 	%r103, %r100, 12288;
	setp.lt.s32 	%p5, %r100, %r14;
	setp.lt.s32 	%p10, %r101, %r14;
	setp.lt.s32 	%p15, %r102, %r14;
	setp.lt.s32 	%p20, %r103, %r14;
	.loc	1 54 42
	mul.wide.s32 	%rd16, %r100, 2;
	add.s64 	%rd12, %rd2, %rd16;
	add.s64 	%rd13, %rd12, 8192;
	add.s64 	%rd14, %rd12, 16384;
	add.s64 	%rd15, %rd12, 24576;
	mov.b32 	%r28, -8323200;
	.loc	1 54 29
	// begin inline asm
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	@%p5 ld.global.v4.b32 { %r24, %r25, %r26, %r27 }, [ %rd12 + 0 ];
	@!%p5 mov.u32 %r24, %r28;
	@!%p5 mov.u32 %r25, %r28;
	@!%p5 mov.u32 %r26, %r28;
	@!%p5 mov.u32 %r27, %r28;
	// end inline asm
	cvt.u16.u32 	%rs1, %r24;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs2}, %r24; }
	cvt.u16.u32 	%rs3, %r25;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs4}, %r25; }
	cvt.u16.u32 	%rs5, %r26;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs6}, %r26; }
	cvt.u16.u32 	%rs7, %r27;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs8}, %r27; }
	// begin inline asm
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	mov.u32 %r34, 0x0;
	mov.u32 %r35, 0x0;
	@%p10 ld.global.v4.b32 { %r32, %r33, %r34, %r35 }, [ %rd13 + 0 ];
	@!%p10 mov.u32 %r32, %r28;
	@!%p10 mov.u32 %r33, %r28;
	@!%p10 mov.u32 %r34, %r28;
	@!%p10 mov.u32 %r35, %r28;
	// end inline asm
	cvt.u16.u32 	%rs9, %r32;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs10}, %r32; }
	cvt.u16.u32 	%rs11, %r33;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs12}, %r33; }
	cvt.u16.u32 	%rs13, %r34;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs14}, %r34; }
	cvt.u16.u32 	%rs15, %r35;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs16}, %r35; }
	// begin inline asm
	mov.u32 %r40, 0x0;
	mov.u32 %r41, 0x0;
	mov.u32 %r42, 0x0;
	mov.u32 %r43, 0x0;
	@%p15 ld.global.v4.b32 { %r40, %r41, %r42, %r43 }, [ %rd14 + 0 ];
	@!%p15 mov.u32 %r40, %r28;
	@!%p15 mov.u32 %r41, %r28;
	@!%p15 mov.u32 %r42, %r28;
	@!%p15 mov.u32 %r43, %r28;
	// end inline asm
	cvt.u16.u32 	%rs17, %r40;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs18}, %r40; }
	cvt.u16.u32 	%rs19, %r41;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs20}, %r41; }
	cvt.u16.u32 	%rs21, %r42;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs22}, %r42; }
	cvt.u16.u32 	%rs23, %r43;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs24}, %r43; }
	// begin inline asm
	mov.u32 %r48, 0x0;
	mov.u32 %r49, 0x0;
	mov.u32 %r50, 0x0;
	mov.u32 %r51, 0x0;
	@%p20 ld.global.v4.b32 { %r48, %r49, %r50, %r51 }, [ %rd15 + 0 ];
	@!%p20 mov.u32 %r48, %r28;
	@!%p20 mov.u32 %r49, %r28;
	@!%p20 mov.u32 %r50, %r28;
	@!%p20 mov.u32 %r51, %r28;
	// end inline asm
	cvt.u16.u32 	%rs25, %r48;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs26}, %r48; }
	cvt.u16.u32 	%rs27, %r49;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs28}, %r49; }
	cvt.u16.u32 	%rs29, %r50;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs30}, %r50; }
	cvt.u16.u32 	%rs31, %r51;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs32}, %r51; }
	.loc	1 55 16
	// begin inline asm
	cvt.f32.bf16 %r56, %rs1;
	// end inline asm
	mov.b32 	%f86, %r56;
	// begin inline asm
	cvt.f32.bf16 %r57, %rs2;
	// end inline asm
	mov.b32 	%f87, %r57;
	// begin inline asm
	cvt.f32.bf16 %r58, %rs3;
	// end inline asm
	mov.b32 	%f88, %r58;
	// begin inline asm
	cvt.f32.bf16 %r59, %rs4;
	// end inline asm
	mov.b32 	%f89, %r59;
	// begin inline asm
	cvt.f32.bf16 %r60, %rs5;
	// end inline asm
	mov.b32 	%f90, %r60;
	// begin inline asm
	cvt.f32.bf16 %r61, %rs6;
	// end inline asm
	mov.b32 	%f91, %r61;
	// begin inline asm
	cvt.f32.bf16 %r62, %rs7;
	// end inline asm
	mov.b32 	%f92, %r62;
	// begin inline asm
	cvt.f32.bf16 %r63, %rs8;
	// end inline asm
	mov.b32 	%f93, %r63;
	// begin inline asm
	cvt.f32.bf16 %r64, %rs9;
	// end inline asm
	mov.b32 	%f94, %r64;
	// begin inline asm
	cvt.f32.bf16 %r65, %rs10;
	// end inline asm
	mov.b32 	%f95, %r65;
	// begin inline asm
	cvt.f32.bf16 %r66, %rs11;
	// end inline asm
	mov.b32 	%f96, %r66;
	// begin inline asm
	cvt.f32.bf16 %r67, %rs12;
	// end inline asm
	mov.b32 	%f97, %r67;
	// begin inline asm
	cvt.f32.bf16 %r68, %rs13;
	// end inline asm
	mov.b32 	%f98, %r68;
	// begin inline asm
	cvt.f32.bf16 %r69, %rs14;
	// end inline asm
	mov.b32 	%f99, %r69;
	// begin inline asm
	cvt.f32.bf16 %r70, %rs15;
	// end inline asm
	mov.b32 	%f100, %r70;
	// begin inline asm
	cvt.f32.bf16 %r71, %rs16;
	// end inline asm
	mov.b32 	%f101, %r71;
	// begin inline asm
	cvt.f32.bf16 %r72, %rs17;
	// end inline asm
	mov.b32 	%f102, %r72;
	// begin inline asm
	cvt.f32.bf16 %r73, %rs18;
	// end inline asm
	mov.b32 	%f103, %r73;
	// begin inline asm
	cvt.f32.bf16 %r74, %rs19;
	// end inline asm
	mov.b32 	%f104, %r74;
	// begin inline asm
	cvt.f32.bf16 %r75, %rs20;
	// end inline asm
	mov.b32 	%f105, %r75;
	// begin inline asm
	cvt.f32.bf16 %r76, %rs21;
	// end inline asm
	mov.b32 	%f106, %r76;
	// begin inline asm
	cvt.f32.bf16 %r77, %rs22;
	// end inline asm
	mov.b32 	%f107, %r77;
	// begin inline asm
	cvt.f32.bf16 %r78, %rs23;
	// end inline asm
	mov.b32 	%f108, %r78;
	// begin inline asm
	cvt.f32.bf16 %r79, %rs24;
	// end inline asm
	mov.b32 	%f109, %r79;
	// begin inline asm
	cvt.f32.bf16 %r80, %rs25;
	// end inline asm
	mov.b32 	%f110, %r80;
	// begin inline asm
	cvt.f32.bf16 %r81, %rs26;
	// end inline asm
	mov.b32 	%f111, %r81;
	// begin inline asm
	cvt.f32.bf16 %r82, %rs27;
	// end inline asm
	mov.b32 	%f112, %r82;
	// begin inline asm
	cvt.f32.bf16 %r83, %rs28;
	// end inline asm
	mov.b32 	%f113, %r83;
	// begin inline asm
	cvt.f32.bf16 %r84, %rs29;
	// end inline asm
	mov.b32 	%f114, %r84;
	// begin inline asm
	cvt.f32.bf16 %r85, %rs30;
	// end inline asm
	mov.b32 	%f115, %r85;
	// begin inline asm
	cvt.f32.bf16 %r86, %rs31;
	// end inline asm
	mov.b32 	%f116, %r86;
	// begin inline asm
	cvt.f32.bf16 %r87, %rs32;
	// end inline asm
	mov.b32 	%f117, %r87;
	.loc	1 56 16
	mul.f32 	%f118, %f86, %f14;
	mul.f32 	%f119, %f87, %f14;
	mul.f32 	%f120, %f88, %f14;
	mul.f32 	%f121, %f89, %f14;
	mul.f32 	%f122, %f90, %f14;
	mul.f32 	%f123, %f91, %f14;
	mul.f32 	%f124, %f92, %f14;
	mul.f32 	%f125, %f93, %f14;
	mul.f32 	%f126, %f94, %f14;
	mul.f32 	%f127, %f95, %f14;
	mul.f32 	%f128, %f96, %f14;
	mul.f32 	%f129, %f97, %f14;
	mul.f32 	%f130, %f98, %f14;
	mul.f32 	%f131, %f99, %f14;
	mul.f32 	%f132, %f100, %f14;
	mul.f32 	%f133, %f101, %f14;
	mul.f32 	%f134, %f102, %f14;
	mul.f32 	%f135, %f103, %f14;
	mul.f32 	%f136, %f104, %f14;
	mul.f32 	%f137, %f105, %f14;
	mul.f32 	%f138, %f106, %f14;
	mul.f32 	%f139, %f107, %f14;
	mul.f32 	%f140, %f108, %f14;
	mul.f32 	%f141, %f109, %f14;
	mul.f32 	%f142, %f110, %f14;
	mul.f32 	%f143, %f111, %f14;
	mul.f32 	%f144, %f112, %f14;
	mul.f32 	%f145, %f113, %f14;
	mul.f32 	%f146, %f114, %f14;
	mul.f32 	%f147, %f115, %f14;
	mul.f32 	%f148, %f116, %f14;
	mul.f32 	%f149, %f117, %f14;
$L__tmp1:
	.loc	2 184 40
	bar.sync 	0;
	.loc	2 163 27
	max.f32 	%f150, %f118, %f119;
	max.f32 	%f151, %f150, %f120;
	max.f32 	%f152, %f151, %f121;
	max.f32 	%f153, %f152, %f122;
	max.f32 	%f154, %f153, %f123;
	max.f32 	%f155, %f154, %f124;
	max.f32 	%f156, %f155, %f125;
	max.f32 	%f157, %f156, %f126;
	max.f32 	%f158, %f157, %f127;
	max.f32 	%f159, %f158, %f128;
	max.f32 	%f160, %f159, %f129;
	max.f32 	%f161, %f160, %f130;
	max.f32 	%f162, %f161, %f131;
	max.f32 	%f163, %f162, %f132;
	max.f32 	%f164, %f163, %f133;
	max.f32 	%f165, %f164, %f134;
	max.f32 	%f166, %f165, %f135;
	max.f32 	%f167, %f166, %f136;
	max.f32 	%f168, %f167, %f137;
	max.f32 	%f169, %f168, %f138;
	max.f32 	%f170, %f169, %f139;
	max.f32 	%f171, %f170, %f140;
	max.f32 	%f172, %f171, %f141;
	max.f32 	%f173, %f172, %f142;
	max.f32 	%f174, %f173, %f143;
	max.f32 	%f175, %f174, %f144;
	max.f32 	%f176, %f175, %f145;
	max.f32 	%f177, %f176, %f146;
	max.f32 	%f178, %f177, %f147;
	max.f32 	%f179, %f178, %f148;
	max.f32 	%f180, %f179, %f149;
	.loc	2 184 40
	mov.b32 	%r104, %f180;
	shfl.sync.bfly.b32	%r105, %r104, 16, 31, -1;
	mov.b32 	%f181, %r105;
	.loc	2 163 27
	max.f32 	%f182, %f180, %f181;
	.loc	2 184 40
	mov.b32 	%r106, %f182;
	shfl.sync.bfly.b32	%r107, %r106, 8, 31, -1;
	mov.b32 	%f183, %r107;
	.loc	2 163 27
	max.f32 	%f184, %f182, %f183;
	.loc	2 184 40
	mov.b32 	%r108, %f184;
	shfl.sync.bfly.b32	%r109, %r108, 4, 31, -1;
	mov.b32 	%f185, %r109;
	.loc	2 163 27
	max.f32 	%f186, %f184, %f185;
	.loc	2 184 40
	mov.b32 	%r110, %f186;
	shfl.sync.bfly.b32	%r111, %r110, 2, 31, -1;
	mov.b32 	%f187, %r111;
	.loc	2 163 27
	max.f32 	%f188, %f186, %f187;
	.loc	2 184 40
	mov.b32 	%r112, %f188;
	shfl.sync.bfly.b32	%r113, %r112, 1, 31, -1;
	mov.b32 	%f189, %r113;
	.loc	2 163 27
	max.f32 	%f190, %f188, %f189;
	.loc	2 184 40
	mov.b32 	%r89, %f190;
	// begin inline asm
	@%p25 st.shared.b32 [ %r88 + 0 ], %r89;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p26 ld.shared.b32 %r90, [ %r97 + 0 ];
	// end inline asm
	mov.b32 	%f191, %r90;
	shfl.sync.bfly.b32	%r114, %r90, 8, 31, -1;
	mov.b32 	%f192, %r114;
	.loc	2 163 27
	max.f32 	%f193, %f191, %f192;
	.loc	2 184 40
	mov.b32 	%r115, %f193;
	shfl.sync.bfly.b32	%r116, %r115, 4, 31, -1;
	mov.b32 	%f194, %r116;
	.loc	2 163 27
	max.f32 	%f195, %f193, %f194;
	.loc	2 184 40
	mov.b32 	%r117, %f195;
	shfl.sync.bfly.b32	%r118, %r117, 2, 31, -1;
	mov.b32 	%f196, %r118;
	.loc	2 163 27
	max.f32 	%f197, %f195, %f196;
	.loc	2 184 40
	mov.b32 	%r119, %f197;
	shfl.sync.bfly.b32	%r120, %r119, 1, 31, -1;
	mov.b32 	%f198, %r120;
	.loc	2 163 27
	max.f32 	%f199, %f197, %f198;
	.loc	2 184 40
	mov.b32 	%r93, %f199;
	// begin inline asm
	@%p27 st.shared.b32 [ %r97 + 0 ], %r93;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f200, [global_smem];
$L__tmp2:
	.loc	1 59 38
	max.f32 	%f323, %f320, %f200;
	.loc	1 60 31
	sub.f32 	%f201, %f320, %f323;
	.loc	1 60 25
	mul.f32 	%f21, %f201, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f20, %f21;
	// end inline asm
	.loc	1 60 71
	neg.f32 	%f202, %f323;
	fma.rn.f32 	%f203, %f86, %f14, %f202;
	fma.rn.f32 	%f204, %f87, %f14, %f202;
	fma.rn.f32 	%f205, %f88, %f14, %f202;
	fma.rn.f32 	%f206, %f89, %f14, %f202;
	fma.rn.f32 	%f207, %f90, %f14, %f202;
	fma.rn.f32 	%f208, %f91, %f14, %f202;
	fma.rn.f32 	%f209, %f92, %f14, %f202;
	fma.rn.f32 	%f210, %f93, %f14, %f202;
	fma.rn.f32 	%f211, %f94, %f14, %f202;
	fma.rn.f32 	%f212, %f95, %f14, %f202;
	fma.rn.f32 	%f213, %f96, %f14, %f202;
	fma.rn.f32 	%f214, %f97, %f14, %f202;
	fma.rn.f32 	%f215, %f98, %f14, %f202;
	fma.rn.f32 	%f216, %f99, %f14, %f202;
	fma.rn.f32 	%f217, %f100, %f14, %f202;
	fma.rn.f32 	%f218, %f101, %f14, %f202;
	fma.rn.f32 	%f219, %f102, %f14, %f202;
	fma.rn.f32 	%f220, %f103, %f14, %f202;
	fma.rn.f32 	%f221, %f104, %f14, %f202;
	fma.rn.f32 	%f222, %f105, %f14, %f202;
	fma.rn.f32 	%f223, %f106, %f14, %f202;
	fma.rn.f32 	%f224, %f107, %f14, %f202;
	fma.rn.f32 	%f225, %f108, %f14, %f202;
	fma.rn.f32 	%f226, %f109, %f14, %f202;
	fma.rn.f32 	%f227, %f110, %f14, %f202;
	fma.rn.f32 	%f228, %f111, %f14, %f202;
	fma.rn.f32 	%f229, %f112, %f14, %f202;
	fma.rn.f32 	%f230, %f113, %f14, %f202;
	fma.rn.f32 	%f231, %f114, %f14, %f202;
	fma.rn.f32 	%f232, %f115, %f14, %f202;
	fma.rn.f32 	%f233, %f116, %f14, %f202;
	fma.rn.f32 	%f234, %f117, %f14, %f202;
	.loc	1 60 62
	mul.f32 	%f23, %f203, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f22, %f23;
	// end inline asm
	mul.f32 	%f25, %f204, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f24, %f25;
	// end inline asm
	mul.f32 	%f27, %f205, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f26, %f27;
	// end inline asm
	mul.f32 	%f29, %f206, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f28, %f29;
	// end inline asm
	mul.f32 	%f31, %f207, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f30, %f31;
	// end inline asm
	mul.f32 	%f33, %f208, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f32, %f33;
	// end inline asm
	mul.f32 	%f35, %f209, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f34, %f35;
	// end inline asm
	mul.f32 	%f37, %f210, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f36, %f37;
	// end inline asm
	mul.f32 	%f39, %f211, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f38, %f39;
	// end inline asm
	mul.f32 	%f41, %f212, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f40, %f41;
	// end inline asm
	mul.f32 	%f43, %f213, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f42, %f43;
	// end inline asm
	mul.f32 	%f45, %f214, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f44, %f45;
	// end inline asm
	mul.f32 	%f47, %f215, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f46, %f47;
	// end inline asm
	mul.f32 	%f49, %f216, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f48, %f49;
	// end inline asm
	mul.f32 	%f51, %f217, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f50, %f51;
	// end inline asm
	mul.f32 	%f53, %f218, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f52, %f53;
	// end inline asm
	mul.f32 	%f55, %f219, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f54, %f55;
	// end inline asm
	mul.f32 	%f57, %f220, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f56, %f57;
	// end inline asm
	mul.f32 	%f59, %f221, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f58, %f59;
	// end inline asm
	mul.f32 	%f61, %f222, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f60, %f61;
	// end inline asm
	mul.f32 	%f63, %f223, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f62, %f63;
	// end inline asm
	mul.f32 	%f65, %f224, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f64, %f65;
	// end inline asm
	mul.f32 	%f67, %f225, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f66, %f67;
	// end inline asm
	mul.f32 	%f69, %f226, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f68, %f69;
	// end inline asm
	mul.f32 	%f71, %f227, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f70, %f71;
	// end inline asm
	mul.f32 	%f73, %f228, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f72, %f73;
	// end inline asm
	mul.f32 	%f75, %f229, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f74, %f75;
	// end inline asm
	mul.f32 	%f77, %f230, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f76, %f77;
	// end inline asm
	mul.f32 	%f79, %f231, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f78, %f79;
	// end inline asm
	mul.f32 	%f81, %f232, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f80, %f81;
	// end inline asm
	mul.f32 	%f83, %f233, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f82, %f83;
	// end inline asm
	mul.f32 	%f85, %f234, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f84, %f85;
	// end inline asm
$L__tmp3:
	.loc	2 267 36
	bar.sync 	0;
	.loc	2 256 15
	add.f32 	%f235, %f22, %f24;
	add.f32 	%f236, %f235, %f26;
	add.f32 	%f237, %f236, %f28;
	add.f32 	%f238, %f237, %f30;
	add.f32 	%f239, %f238, %f32;
	add.f32 	%f240, %f239, %f34;
	add.f32 	%f241, %f240, %f36;
	add.f32 	%f242, %f241, %f38;
	add.f32 	%f243, %f242, %f40;
	add.f32 	%f244, %f243, %f42;
	add.f32 	%f245, %f244, %f44;
	add.f32 	%f246, %f245, %f46;
	add.f32 	%f247, %f246, %f48;
	add.f32 	%f248, %f247, %f50;
	add.f32 	%f249, %f248, %f52;
	add.f32 	%f250, %f249, %f54;
	add.f32 	%f251, %f250, %f56;
	add.f32 	%f252, %f251, %f58;
	add.f32 	%f253, %f252, %f60;
	add.f32 	%f254, %f253, %f62;
	add.f32 	%f255, %f254, %f64;
	add.f32 	%f256, %f255, %f66;
	add.f32 	%f257, %f256, %f68;
	add.f32 	%f258, %f257, %f70;
	add.f32 	%f259, %f258, %f72;
	add.f32 	%f260, %f259, %f74;
	add.f32 	%f261, %f260, %f76;
	add.f32 	%f262, %f261, %f78;
	add.f32 	%f263, %f262, %f80;
	add.f32 	%f264, %f263, %f82;
	add.f32 	%f265, %f264, %f84;
	.loc	2 267 36
	mov.b32 	%r121, %f265;
	shfl.sync.bfly.b32	%r122, %r121, 16, 31, -1;
	mov.b32 	%f266, %r122;
	.loc	2 256 15
	add.f32 	%f267, %f265, %f266;
	.loc	2 267 36
	mov.b32 	%r123, %f267;
	shfl.sync.bfly.b32	%r124, %r123, 8, 31, -1;
	mov.b32 	%f268, %r124;
	.loc	2 256 15
	add.f32 	%f269, %f267, %f268;
	.loc	2 267 36
	mov.b32 	%r125, %f269;
	shfl.sync.bfly.b32	%r126, %r125, 4, 31, -1;
	mov.b32 	%f270, %r126;
	.loc	2 256 15
	add.f32 	%f271, %f269, %f270;
	.loc	2 267 36
	mov.b32 	%r127, %f271;
	shfl.sync.bfly.b32	%r128, %r127, 2, 31, -1;
	mov.b32 	%f272, %r128;
	.loc	2 256 15
	add.f32 	%f273, %f271, %f272;
	.loc	2 267 36
	mov.b32 	%r129, %f273;
	shfl.sync.bfly.b32	%r130, %r129, 1, 31, -1;
	mov.b32 	%f274, %r130;
	.loc	2 256 15
	add.f32 	%f275, %f273, %f274;
	.loc	2 267 36
	mov.b32 	%r95, %f275;
	// begin inline asm
	@%p25 st.shared.b32 [ %r88 + 0 ], %r95;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p26 ld.shared.b32 %r96, [ %r97 + 0 ];
	// end inline asm
	mov.b32 	%f276, %r96;
	shfl.sync.bfly.b32	%r131, %r96, 8, 31, -1;
	mov.b32 	%f277, %r131;
	.loc	2 256 15
	add.f32 	%f278, %f276, %f277;
	.loc	2 267 36
	mov.b32 	%r132, %f278;
	shfl.sync.bfly.b32	%r133, %r132, 4, 31, -1;
	mov.b32 	%f279, %r133;
	.loc	2 256 15
	add.f32 	%f280, %f278, %f279;
	.loc	2 267 36
	mov.b32 	%r134, %f280;
	shfl.sync.bfly.b32	%r135, %r134, 2, 31, -1;
	mov.b32 	%f281, %r135;
	.loc	2 256 15
	add.f32 	%f282, %f280, %f281;
	.loc	2 267 36
	mov.b32 	%r136, %f282;
	shfl.sync.bfly.b32	%r137, %r136, 1, 31, -1;
	mov.b32 	%f283, %r137;
	.loc	2 256 15
	add.f32 	%f284, %f282, %f283;
	.loc	2 267 36
	mov.b32 	%r99, %f284;
	// begin inline asm
	@%p27 st.shared.b32 [ %r97 + 0 ], %r99;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f285, [global_smem];
$L__tmp4:
	.loc	1 60 48
	fma.rn.f32 	%f322, %f322, %f20, %f285;
	.loc	1 52 43
	add.s32 	%r149, %r149, 16384;
	setp.lt.s32 	%p31, %r149, %r14;
	mov.f32 	%f320, %f323;
	@%p31 bra 	$L__BB0_2;
$L__BB0_3:
	.loc	1 0 43
	ld.param.u32 	%r12, [cross_entropy_fwd_kernel_param_8];
	ld.param.u64 	%rd8, [cross_entropy_fwd_kernel_param_4];
	ld.param.u64 	%rd6, [cross_entropy_fwd_kernel_param_1];
	cvt.s64.s32 	%rd1, %r15;
	.loc	1 62 21
	setp.lt.f32 	%p32, %f322, 0f00800000;
	mul.f32 	%f286, %f322, 0f4B000000;
	selp.f32 	%f7, %f286, %f322, %p32;
	selp.f32 	%f287, 0fC1B80000, 0f00000000, %p32;
	mov.b32 	%r138, %f7;
	add.s32 	%r139, %r138, -1059760811;
	and.b32  	%r140, %r139, -8388608;
	sub.s32 	%r141, %r138, %r140;
	mov.b32 	%f288, %r141;
	cvt.rn.f32.s32 	%f289, %r140;
	mov.f32 	%f290, 0f34000000;
	fma.rn.ftz.f32 	%f291, %f289, %f290, %f287;
	add.f32 	%f292, %f288, 0fBF800000;
	mov.f32 	%f293, 0f3E1039F6;
	mov.f32 	%f294, 0fBE055027;
	fma.rn.ftz.f32 	%f295, %f294, %f292, %f293;
	mov.f32 	%f296, 0fBDF8CDCC;
	fma.rn.ftz.f32 	%f297, %f295, %f292, %f296;
	mov.f32 	%f298, 0f3E0F2955;
	fma.rn.ftz.f32 	%f299, %f297, %f292, %f298;
	mov.f32 	%f300, 0fBE2AD8B9;
	fma.rn.ftz.f32 	%f301, %f299, %f292, %f300;
	mov.f32 	%f302, 0f3E4CED0B;
	fma.rn.ftz.f32 	%f303, %f301, %f292, %f302;
	mov.f32 	%f304, 0fBE7FFF22;
	fma.rn.ftz.f32 	%f305, %f303, %f292, %f304;
	mov.f32 	%f306, 0f3EAAAA78;
	fma.rn.ftz.f32 	%f307, %f305, %f292, %f306;
	mov.f32 	%f308, 0fBF000000;
	fma.rn.ftz.f32 	%f309, %f307, %f292, %f308;
	mul.f32 	%f310, %f292, %f309;
	fma.rn.ftz.f32 	%f311, %f310, %f292, %f292;
	mov.f32 	%f312, 0f3F317218;
	fma.rn.ftz.f32 	%f324, %f291, %f312, %f311;
	setp.lt.u32 	%p33, %r138, 2139095040;
	@%p33 bra 	$L__BB0_5;
	.loc	1 0 21
	mov.f32 	%f313, 0f7F800000;
	fma.rn.ftz.f32 	%f324, %f7, %f313, %f313;
$L__BB0_5:
	ld.param.u64 	%rd7, [cross_entropy_fwd_kernel_param_2];
	ld.param.u64 	%rd5, [cross_entropy_fwd_kernel_param_0];
	mov.b32 	%r150, 0;
	.loc	1 62 21
	setp.eq.f32 	%p36, %f7, 0f00000000;
	selp.f32 	%f314, 0fFF800000, %f324, %p36;
	.loc	1 62 28
	add.f32 	%f11, %f323, %f314;
	.loc	1 63 27
	shl.b64 	%rd20, %rd1, 2;
	add.s64 	%rd17, %rd6, %rd20;
	.loc	1 63 36
	setp.eq.s32 	%p42, %r1, 0;
	mov.b32 	%r142, %f11;
	// begin inline asm
	@%p42 st.global.b32 [ %rd17 + 0 ], { %r142 };
	// end inline asm
	.loc	1 66 37
	shl.b64 	%rd21, %rd1, 3;
	add.s64 	%rd19, %rd8, %rd21;
	mov.pred 	%p35, -1;
	.loc	1 66 24
	// begin inline asm
	mov.u64 %rd18, 0x0;
	@%p35 ld.global.b64 { %rd18 }, [ %rd19 + 0 ];
	// end inline asm
	.loc	1 67 20
	cvt.s64.s32 	%rd22, %r12;
	setp.eq.s64 	%p37, %rd18, %rd22;
	mov.u32 	%r151, %r150;
	.loc	1 67 7
	@%p37 bra 	$L__BB0_9;
	.loc	1 0 7
	ld.param.u32 	%r13, [cross_entropy_fwd_kernel_param_10];
	ld.param.f32 	%f15, [cross_entropy_fwd_kernel_param_7];
	.loc	1 71 21
	cvt.s64.s32 	%rd23, %r13;
	sub.s64 	%rd24, %rd18, %rd23;
	.loc	1 72 24
	setp.lt.s64 	%p38, %rd24, 0;
	.loc	1 72 42
	cvt.s64.s32 	%rd25, %r14;
	setp.ge.s64 	%p39, %rd24, %rd25;
	mov.f32 	%f325, 0f00000000;
	.loc	1 72 11
	or.pred  	%p40, %p38, %p39;
	@%p40 bra 	$L__BB0_8;
	.loc	1 0 0
	shl.b64 	%rd26, %rd24, 1;
	add.s64 	%rd27, %rd2, %rd26;
	.loc	1 73 35
	// begin inline asm
	mov.u16 %rs34, 0x0;
	@%p35 ld.global.b16 { %rs34 }, [ %rd27 + 0 ];
	// end inline asm
	.loc	1 73 61
	// begin inline asm
	cvt.f32.bf16 %r144, %rs34;
	// end inline asm
	xor.b32  	%r145, %r144, -2147483648;
	mov.b32 	%f316, %r145;
	.loc	1 81 53
	fma.rn.f32 	%f325, %f316, %f14, %f11;
$L__BB0_8:
	.loc	1 89 40
	mul.f32 	%f317, %f11, %f15;
	.loc	1 89 46
	mul.f32 	%f318, %f11, %f317;
	.loc	1 90 20
	fma.rn.f32 	%f319, %f11, %f317, %f325;
	.loc	1 93 33
	mov.b32 	%r150, %f319;
	.loc	1 95 39
	mov.b32 	%r151, %f318;
$L__BB0_9:
	.loc	1 93 24
	add.s64 	%rd28, %rd5, %rd20;
	.loc	1 93 33
	// begin inline asm
	@%p42 st.global.b32 [ %rd28 + 0 ], { %r150 };
	// end inline asm
	.loc	1 95 30
	add.s64 	%rd29, %rd7, %rd20;
	.loc	1 95 39
	// begin inline asm
	@%p42 st.global.b32 [ %rd29 + 0 ], { %r151 };
	// end inline asm
	.loc	1 94 4
	ret;
$L__tmp5:
$L__func_end0:

}
	.file	1 "/data/home/scyb494/.conda/envs/verl/lib/python3.10/site-packages/flash_attn/ops/triton/cross_entropy.py"
	.file	2 "/data/home/scyb494/.conda/envs/verl/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1
.b8 17
.b8 1
.b8 37
.b8 8
.b8 19
.b8 5
.b8 3
.b8 8
.b8 16
.b8 6
.b8 27
.b8 8
.b8 17
.b8 1
.b8 18
.b8 1
.b8 0
.b8 0
.b8 2
.b8 46
.b8 0
.b8 3
.b8 8
.b8 32
.b8 11
.b8 0
.b8 0
.b8 3
.b8 46
.b8 1
.b8 17
.b8 1
.b8 18
.b8 1
.b8 49
.b8 19
.b8 0
.b8 0
.b8 4
.b8 29
.b8 0
.b8 49
.b8 19
.b8 17
.b8 1
.b8 18
.b8 1
.b8 88
.b8 11
.b8 89
.b8 11
.b8 87
.b8 11
.b8 0
.b8 0
.b8 0
	}
	.section	.debug_info
	{
.b32 239
.b8 2
.b8 0
.b32 .debug_abbrev
.b8 8
.b8 1
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2
.b8 0
.b8 99
.b8 114
.b8 111
.b8 115
.b8 115
.b8 95
.b8 101
.b8 110
.b8 116
.b8 114
.b8 111
.b8 112
.b8 121
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line
.b8 47
.b8 100
.b8 97
.b8 116
.b8 97
.b8 47
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 115
.b8 99
.b8 121
.b8 98
.b8 52
.b8 57
.b8 52
.b8 47
.b8 46
.b8 99
.b8 111
.b8 110
.b8 100
.b8 97
.b8 47
.b8 101
.b8 110
.b8 118
.b8 115
.b8 47
.b8 118
.b8 101
.b8 114
.b8 108
.b8 47
.b8 108
.b8 105
.b8 98
.b8 47
.b8 112
.b8 121
.b8 116
.b8 104
.b8 111
.b8 110
.b8 51
.b8 46
.b8 49
.b8 48
.b8 47
.b8 115
.b8 105
.b8 116
.b8 101
.b8 45
.b8 112
.b8 97
.b8 99
.b8 107
.b8 97
.b8 103
.b8 101
.b8 115
.b8 47
.b8 102
.b8 108
.b8 97
.b8 115
.b8 104
.b8 95
.b8 97
.b8 116
.b8 116
.b8 110
.b8 47
.b8 111
.b8 112
.b8 115
.b8 47
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b64 $L__func_begin0
.b64 $L__func_end0
.b8 2
.b8 99
.b8 114
.b8 111
.b8 115
.b8 115
.b8 95
.b8 101
.b8 110
.b8 116
.b8 114
.b8 111
.b8 112
.b8 121
.b8 95
.b8 102
.b8 119
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1
.b8 3
.b64 $L__func_begin0
.b64 $L__func_end0
.b32 145
.b8 4
.b32 145
.b64 $L__tmp1
.b64 $L__tmp2
.b8 1
.b8 59
.b8 45
.b8 4
.b32 145
.b64 $L__tmp3
.b64 $L__tmp4
.b8 1
.b8 60
.b8 55
.b8 0
.b8 0
	}
	.section	.debug_loc	{	}
