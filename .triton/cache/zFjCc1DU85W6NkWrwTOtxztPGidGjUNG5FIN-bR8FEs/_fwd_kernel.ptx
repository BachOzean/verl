//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	_fwd_kernel             // -- Begin function _fwd_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @_fwd_kernel
.visible .entry _fwd_kernel(
	.param .u64 .ptr .global .align 1 _fwd_kernel_param_0,
	.param .u64 .ptr .global .align 1 _fwd_kernel_param_1,
	.param .u64 .ptr .global .align 1 _fwd_kernel_param_2,
	.param .u64 .ptr .global .align 1 _fwd_kernel_param_3,
	.param .u64 .ptr .global .align 1 _fwd_kernel_param_4,
	.param .u64 .ptr .global .align 1 _fwd_kernel_param_5,
	.param .f32 _fwd_kernel_param_6,
	.param .u64 .ptr .global .align 1 _fwd_kernel_param_7,
	.param .u64 .ptr .global .align 1 _fwd_kernel_param_8,
	.param .u64 .ptr .global .align 1 _fwd_kernel_param_9,
	.param .u64 .ptr .global .align 1 _fwd_kernel_param_10,
	.param .u64 .ptr .global .align 1 _fwd_kernel_param_11,
	.param .u32 _fwd_kernel_param_12,
	.param .u32 _fwd_kernel_param_13,
	.param .u32 _fwd_kernel_param_14,
	.param .u32 _fwd_kernel_param_15,
	.param .u32 _fwd_kernel_param_16,
	.param .u32 _fwd_kernel_param_17,
	.param .u32 _fwd_kernel_param_18,
	.param .u32 _fwd_kernel_param_19,
	.param .u32 _fwd_kernel_param_20,
	.param .u32 _fwd_kernel_param_21,
	.param .u32 _fwd_kernel_param_22,
	.param .u32 _fwd_kernel_param_23,
	.param .u32 _fwd_kernel_param_24,
	.param .u32 _fwd_kernel_param_25
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<888>;
	.reg .b16 	%rs<865>;
	.reg .b32 	%r<2986>;
	.reg .f32 	%f<10756>;
	.reg .b64 	%rd<856>;
	.loc	1 36 0                          // prefix_prefill.py:36:0
$L__func_begin0:
	.loc	1 36 0                          // prefix_prefill.py:36:0

// %bb.0:
	ld.param.u32 	%r487, [_fwd_kernel_param_23];
	ld.param.u32 	%r486, [_fwd_kernel_param_20];
	ld.param.f32 	%f2401, [_fwd_kernel_param_6];
	ld.param.u64 	%rd188, [_fwd_kernel_param_4];
	ld.param.u64 	%rd187, [_fwd_kernel_param_3];
	ld.param.u64 	%rd209, [_fwd_kernel_param_0];
$L__tmp0:
	.loc	1 86 30                         // prefix_prefill.py:86:30
	// begin inline asm
	mov.u32 %r488, %ctaid.x;
	// end inline asm
	.loc	1 87 29                         // prefix_prefill.py:87:29
	// begin inline asm
	mov.u32 %r489, %ctaid.y;
	// end inline asm
	.loc	1 88 28                         // prefix_prefill.py:88:28
	// begin inline asm
	mov.u32 %r490, %ctaid.z;
	// end inline asm
	.loc	1 90 30                         // prefix_prefill.py:90:30
	mul.hi.s32 	%r622, %r489, 715827883;
	shr.u32 	%r623, %r622, 31;
	add.s32 	%r2, %r622, %r623;
	ld.param.u64 	%rd210, [_fwd_kernel_param_5];
	.loc	1 92 43                         // prefix_prefill.py:92:43
	mul.wide.s32 	%rd211, %r488, 4;
	ld.param.u64 	%rd212, [_fwd_kernel_param_10];
	add.s64 	%rd190, %rd212, %rd211;
	mov.pred 	%p744, -1;
	.loc	1 92 32                         // prefix_prefill.py:92:32
	// begin inline asm
	mov.u32 %r491, 0x0;
	@%p744 ld.global.b32 { %r491 }, [ %rd190 + 0 ];
	// end inline asm
	ld.param.u64 	%rd213, [_fwd_kernel_param_9];
	.loc	1 93 57                         // prefix_prefill.py:93:57
	add.s64 	%rd191, %rd213, %rd211;
	.loc	1 93 43                         // prefix_prefill.py:93:43
	// begin inline asm
	mov.u32 %r492, 0x0;
	@%p744 ld.global.b32 { %r492 }, [ %rd191 + 0 ];
	// end inline asm
	.loc	1 94 68                         // prefix_prefill.py:94:68
	add.s64 	%rd192, %rd191, 4;
	.loc	1 94 42                         // prefix_prefill.py:94:42
	// begin inline asm
	mov.u32 %r493, 0x0;
	@%p744 ld.global.b32 { %r493 }, [ %rd192 + 0 ];
	// end inline asm
	.loc	1 96 27                         // prefix_prefill.py:96:27
	sub.s32 	%r4, %r493, %r492;
	ld.param.u32 	%r624, [_fwd_kernel_param_12];
	.loc	1 97 44                         // prefix_prefill.py:97:44
	sub.s32 	%r5, %r491, %r4;
	ld.param.u32 	%r625, [_fwd_kernel_param_13];
	.loc	1 104 32                        // prefix_prefill.py:104:32
	shl.b32 	%r6, %r490, 7;
	.loc	1 112 26                        // prefix_prefill.py:112:26
	mov.u32 	%r7, %tid.x;
	shr.u32 	%r8, %r7, 5;
	bfe.s32 	%r626, %r7, 4, 1;
	and.b32  	%r9, %r7, 32;
	and.b32  	%r10, %r7, 64;
	ld.param.u32 	%r627, [_fwd_kernel_param_21];
	bfe.u32 	%r11, %r7, 4, 3;
	ld.param.u32 	%r628, [_fwd_kernel_param_22];
	or.b32  	%r12, %r11, 8;
	or.b32  	%r13, %r11, 16;
	ld.param.u32 	%r629, [_fwd_kernel_param_24];
	or.b32  	%r14, %r11, 24;
	ld.param.u32 	%r630, [_fwd_kernel_param_25];
	or.b32  	%r15, %r11, 56;
	or.b32  	%r16, %r11, 48;
	or.b32  	%r17, %r11, 40;
	or.b32  	%r18, %r11, 32;
	shl.b32 	%r19, %r7, 3;
	and.b32  	%r20, %r19, 8;
	and.b32  	%r631, %r19, 56;
	and.b32  	%r21, %r7, 8;
	shl.b32 	%r632, %r21, 3;
	or.b32  	%r22, %r631, %r632;
	bfe.u32 	%r633, %r7, 2, 3;
	shr.u32 	%r634, %r9, 1;
	or.b32  	%r635, %r633, %r634;
	shr.u32 	%r636, %r10, 1;
	or.b32  	%r23, %r635, %r636;
	or.b32  	%r24, %r23, 8;
	bfe.u32 	%r637, %r7, 1, 4;
	or.b32  	%r638, %r637, %r634;
	or.b32  	%r25, %r638, %r636;
	.loc	1 114 33                        // prefix_prefill.py:114:33
	or.b32  	%r26, %r6, %r11;
	or.b32  	%r27, %r6, %r12;
	or.b32  	%r28, %r6, %r13;
	or.b32  	%r29, %r6, %r14;
	or.b32  	%r31, %r6, %r18;
	or.b32  	%r33, %r6, %r17;
	or.b32  	%r35, %r6, %r16;
	or.b32  	%r37, %r6, %r15;
	or.b32  	%r38, %r26, 64;
	or.b32  	%r39, %r26, 72;
	or.b32  	%r40, %r26, 80;
	or.b32  	%r41, %r26, 88;
	or.b32  	%r42, %r26, 96;
	or.b32  	%r43, %r26, 104;
	or.b32  	%r44, %r26, 112;
	or.b32  	%r45, %r26, 120;
	.loc	1 116 45                        // prefix_prefill.py:116:45
	add.s32 	%r50, %r492, %r26;
	add.s32 	%r51, %r492, %r27;
	add.s32 	%r52, %r492, %r28;
	add.s32 	%r53, %r492, %r29;
	add.s32 	%r54, %r492, %r31;
	add.s32 	%r55, %r492, %r33;
	add.s32 	%r56, %r492, %r35;
	add.s32 	%r57, %r492, %r37;
	add.s32 	%r58, %r492, %r38;
	add.s32 	%r59, %r492, %r39;
	add.s32 	%r60, %r492, %r40;
	add.s32 	%r61, %r492, %r41;
	add.s32 	%r62, %r492, %r42;
	add.s32 	%r63, %r492, %r43;
	add.s32 	%r64, %r492, %r44;
	add.s32 	%r65, %r492, %r45;
	.loc	1 117 13                        // prefix_prefill.py:117:13
	mad.lo.s32 	%r639, %r489, %r625, %r22;
	.loc	1 117 36                        // prefix_prefill.py:117:36
	mad.lo.s32 	%r640, %r50, %r624, %r639;
	mad.lo.s32 	%r641, %r51, %r624, %r639;
	mad.lo.s32 	%r642, %r52, %r624, %r639;
	mad.lo.s32 	%r643, %r53, %r624, %r639;
	mad.lo.s32 	%r644, %r54, %r624, %r639;
	mad.lo.s32 	%r645, %r55, %r624, %r639;
	mad.lo.s32 	%r646, %r56, %r624, %r639;
	mad.lo.s32 	%r647, %r57, %r624, %r639;
	mad.lo.s32 	%r648, %r58, %r624, %r639;
	mad.lo.s32 	%r649, %r59, %r624, %r639;
	mad.lo.s32 	%r650, %r60, %r624, %r639;
	mad.lo.s32 	%r651, %r61, %r624, %r639;
	mad.lo.s32 	%r652, %r62, %r624, %r639;
	mad.lo.s32 	%r653, %r63, %r624, %r639;
	mad.lo.s32 	%r654, %r64, %r624, %r639;
	mad.lo.s32 	%r655, %r65, %r624, %r639;
	.loc	1 125 35                        // prefix_prefill.py:125:35
	setp.lt.s32 	%p4, %r26, %r4;
	setp.lt.s32 	%p9, %r27, %r4;
	setp.lt.s32 	%p14, %r28, %r4;
	setp.lt.s32 	%p19, %r29, %r4;
	setp.lt.s32 	%p24, %r31, %r4;
	setp.lt.s32 	%p29, %r33, %r4;
	setp.lt.s32 	%p34, %r35, %r4;
	setp.lt.s32 	%p39, %r37, %r4;
	setp.lt.s32 	%p44, %r38, %r4;
	setp.lt.s32 	%p49, %r39, %r4;
	setp.lt.s32 	%p54, %r40, %r4;
	setp.lt.s32 	%p59, %r41, %r4;
	setp.lt.s32 	%p64, %r42, %r4;
	setp.lt.s32 	%p69, %r43, %r4;
	setp.lt.s32 	%p74, %r44, %r4;
	setp.lt.s32 	%p79, %r45, %r4;
	.loc	1 123 20                        // prefix_prefill.py:123:20
	mul.wide.s32 	%rd214, %r640, 2;
	add.s64 	%rd193, %rd209, %rd214;
	mul.wide.s32 	%rd215, %r641, 2;
	add.s64 	%rd194, %rd209, %rd215;
	mul.wide.s32 	%rd216, %r642, 2;
	add.s64 	%rd195, %rd209, %rd216;
	mul.wide.s32 	%rd217, %r643, 2;
	add.s64 	%rd196, %rd209, %rd217;
	mul.wide.s32 	%rd218, %r644, 2;
	add.s64 	%rd197, %rd209, %rd218;
	mul.wide.s32 	%rd219, %r645, 2;
	add.s64 	%rd198, %rd209, %rd219;
	mul.wide.s32 	%rd220, %r646, 2;
	add.s64 	%rd199, %rd209, %rd220;
	mul.wide.s32 	%rd221, %r647, 2;
	add.s64 	%rd200, %rd209, %rd221;
	mul.wide.s32 	%rd222, %r648, 2;
	add.s64 	%rd201, %rd209, %rd222;
	mul.wide.s32 	%rd223, %r649, 2;
	add.s64 	%rd202, %rd209, %rd223;
	mul.wide.s32 	%rd224, %r650, 2;
	add.s64 	%rd203, %rd209, %rd224;
	mul.wide.s32 	%rd225, %r651, 2;
	add.s64 	%rd204, %rd209, %rd225;
	mul.wide.s32 	%rd226, %r652, 2;
	add.s64 	%rd205, %rd209, %rd226;
	mul.wide.s32 	%rd227, %r653, 2;
	add.s64 	%rd206, %rd209, %rd227;
	mul.wide.s32 	%rd228, %r654, 2;
	add.s64 	%rd207, %rd209, %rd228;
	mul.wide.s32 	%rd229, %r655, 2;
	add.s64 	%rd208, %rd209, %rd229;
	mov.b32 	%r621, 0;
	.loc	1 123 16                        // prefix_prefill.py:123:16
	// begin inline asm
	mov.u32 %r494, 0x0;
	mov.u32 %r495, 0x0;
	mov.u32 %r496, 0x0;
	mov.u32 %r497, 0x0;
	@%p4 ld.global.v4.b32 { %r494, %r495, %r496, %r497 }, [ %rd193 + 0 ];
	@!%p4 mov.u32 %r494, %r621;
	@!%p4 mov.u32 %r495, %r621;
	@!%p4 mov.u32 %r496, %r621;
	@!%p4 mov.u32 %r497, %r621;
	// end inline asm
	// begin inline asm
	mov.u32 %r502, 0x0;
	mov.u32 %r503, 0x0;
	mov.u32 %r504, 0x0;
	mov.u32 %r505, 0x0;
	@%p9 ld.global.v4.b32 { %r502, %r503, %r504, %r505 }, [ %rd194 + 0 ];
	@!%p9 mov.u32 %r502, %r621;
	@!%p9 mov.u32 %r503, %r621;
	@!%p9 mov.u32 %r504, %r621;
	@!%p9 mov.u32 %r505, %r621;
	// end inline asm
	// begin inline asm
	mov.u32 %r510, 0x0;
	mov.u32 %r511, 0x0;
	mov.u32 %r512, 0x0;
	mov.u32 %r513, 0x0;
	@%p14 ld.global.v4.b32 { %r510, %r511, %r512, %r513 }, [ %rd195 + 0 ];
	@!%p14 mov.u32 %r510, %r621;
	@!%p14 mov.u32 %r511, %r621;
	@!%p14 mov.u32 %r512, %r621;
	@!%p14 mov.u32 %r513, %r621;
	// end inline asm
	// begin inline asm
	mov.u32 %r518, 0x0;
	mov.u32 %r519, 0x0;
	mov.u32 %r520, 0x0;
	mov.u32 %r521, 0x0;
	@%p19 ld.global.v4.b32 { %r518, %r519, %r520, %r521 }, [ %rd196 + 0 ];
	@!%p19 mov.u32 %r518, %r621;
	@!%p19 mov.u32 %r519, %r621;
	@!%p19 mov.u32 %r520, %r621;
	@!%p19 mov.u32 %r521, %r621;
	// end inline asm
	// begin inline asm
	mov.u32 %r526, 0x0;
	mov.u32 %r527, 0x0;
	mov.u32 %r528, 0x0;
	mov.u32 %r529, 0x0;
	@%p24 ld.global.v4.b32 { %r526, %r527, %r528, %r529 }, [ %rd197 + 0 ];
	@!%p24 mov.u32 %r526, %r621;
	@!%p24 mov.u32 %r527, %r621;
	@!%p24 mov.u32 %r528, %r621;
	@!%p24 mov.u32 %r529, %r621;
	// end inline asm
	// begin inline asm
	mov.u32 %r534, 0x0;
	mov.u32 %r535, 0x0;
	mov.u32 %r536, 0x0;
	mov.u32 %r537, 0x0;
	@%p29 ld.global.v4.b32 { %r534, %r535, %r536, %r537 }, [ %rd198 + 0 ];
	@!%p29 mov.u32 %r534, %r621;
	@!%p29 mov.u32 %r535, %r621;
	@!%p29 mov.u32 %r536, %r621;
	@!%p29 mov.u32 %r537, %r621;
	// end inline asm
	// begin inline asm
	mov.u32 %r542, 0x0;
	mov.u32 %r543, 0x0;
	mov.u32 %r544, 0x0;
	mov.u32 %r545, 0x0;
	@%p34 ld.global.v4.b32 { %r542, %r543, %r544, %r545 }, [ %rd199 + 0 ];
	@!%p34 mov.u32 %r542, %r621;
	@!%p34 mov.u32 %r543, %r621;
	@!%p34 mov.u32 %r544, %r621;
	@!%p34 mov.u32 %r545, %r621;
	// end inline asm
	// begin inline asm
	mov.u32 %r550, 0x0;
	mov.u32 %r551, 0x0;
	mov.u32 %r552, 0x0;
	mov.u32 %r553, 0x0;
	@%p39 ld.global.v4.b32 { %r550, %r551, %r552, %r553 }, [ %rd200 + 0 ];
	@!%p39 mov.u32 %r550, %r621;
	@!%p39 mov.u32 %r551, %r621;
	@!%p39 mov.u32 %r552, %r621;
	@!%p39 mov.u32 %r553, %r621;
	// end inline asm
	// begin inline asm
	mov.u32 %r558, 0x0;
	mov.u32 %r559, 0x0;
	mov.u32 %r560, 0x0;
	mov.u32 %r561, 0x0;
	@%p44 ld.global.v4.b32 { %r558, %r559, %r560, %r561 }, [ %rd201 + 0 ];
	@!%p44 mov.u32 %r558, %r621;
	@!%p44 mov.u32 %r559, %r621;
	@!%p44 mov.u32 %r560, %r621;
	@!%p44 mov.u32 %r561, %r621;
	// end inline asm
	// begin inline asm
	mov.u32 %r566, 0x0;
	mov.u32 %r567, 0x0;
	mov.u32 %r568, 0x0;
	mov.u32 %r569, 0x0;
	@%p49 ld.global.v4.b32 { %r566, %r567, %r568, %r569 }, [ %rd202 + 0 ];
	@!%p49 mov.u32 %r566, %r621;
	@!%p49 mov.u32 %r567, %r621;
	@!%p49 mov.u32 %r568, %r621;
	@!%p49 mov.u32 %r569, %r621;
	// end inline asm
	// begin inline asm
	mov.u32 %r574, 0x0;
	mov.u32 %r575, 0x0;
	mov.u32 %r576, 0x0;
	mov.u32 %r577, 0x0;
	@%p54 ld.global.v4.b32 { %r574, %r575, %r576, %r577 }, [ %rd203 + 0 ];
	@!%p54 mov.u32 %r574, %r621;
	@!%p54 mov.u32 %r575, %r621;
	@!%p54 mov.u32 %r576, %r621;
	@!%p54 mov.u32 %r577, %r621;
	// end inline asm
	// begin inline asm
	mov.u32 %r582, 0x0;
	mov.u32 %r583, 0x0;
	mov.u32 %r584, 0x0;
	mov.u32 %r585, 0x0;
	@%p59 ld.global.v4.b32 { %r582, %r583, %r584, %r585 }, [ %rd204 + 0 ];
	@!%p59 mov.u32 %r582, %r621;
	@!%p59 mov.u32 %r583, %r621;
	@!%p59 mov.u32 %r584, %r621;
	@!%p59 mov.u32 %r585, %r621;
	// end inline asm
	// begin inline asm
	mov.u32 %r590, 0x0;
	mov.u32 %r591, 0x0;
	mov.u32 %r592, 0x0;
	mov.u32 %r593, 0x0;
	@%p64 ld.global.v4.b32 { %r590, %r591, %r592, %r593 }, [ %rd205 + 0 ];
	@!%p64 mov.u32 %r590, %r621;
	@!%p64 mov.u32 %r591, %r621;
	@!%p64 mov.u32 %r592, %r621;
	@!%p64 mov.u32 %r593, %r621;
	// end inline asm
	// begin inline asm
	mov.u32 %r598, 0x0;
	mov.u32 %r599, 0x0;
	mov.u32 %r600, 0x0;
	mov.u32 %r601, 0x0;
	@%p69 ld.global.v4.b32 { %r598, %r599, %r600, %r601 }, [ %rd206 + 0 ];
	@!%p69 mov.u32 %r598, %r621;
	@!%p69 mov.u32 %r599, %r621;
	@!%p69 mov.u32 %r600, %r621;
	@!%p69 mov.u32 %r601, %r621;
	// end inline asm
	// begin inline asm
	mov.u32 %r606, 0x0;
	mov.u32 %r607, 0x0;
	mov.u32 %r608, 0x0;
	mov.u32 %r609, 0x0;
	@%p74 ld.global.v4.b32 { %r606, %r607, %r608, %r609 }, [ %rd207 + 0 ];
	@!%p74 mov.u32 %r606, %r621;
	@!%p74 mov.u32 %r607, %r621;
	@!%p74 mov.u32 %r608, %r621;
	@!%p74 mov.u32 %r609, %r621;
	// end inline asm
	// begin inline asm
	mov.u32 %r614, 0x0;
	mov.u32 %r615, 0x0;
	mov.u32 %r616, 0x0;
	mov.u32 %r617, 0x0;
	@%p79 ld.global.v4.b32 { %r614, %r615, %r616, %r617 }, [ %rd208 + 0 ];
	@!%p79 mov.u32 %r614, %r621;
	@!%p79 mov.u32 %r615, %r621;
	@!%p79 mov.u32 %r616, %r621;
	@!%p79 mov.u32 %r617, %r621;
	// end inline asm
	and.b32  	%r720, %r626, 72;
	bfe.u32 	%r66, %r7, 5, 1;
	xor.b32  	%r721, %r631, %r720;
	xor.b32  	%r722, %r721, %r634;
	xor.b32  	%r67, %r722, %r636;
	shr.u32 	%r68, %r10, 5;
	or.b32  	%r69, %r68, %r66;
	or.b32  	%r723, %r69, %r632;
	shl.b32 	%r724, %r723, 8;
	shl.b32 	%r725, %r67, 1;
	or.b32  	%r726, %r724, %r725;
	mov.u32 	%r727, global_smem;
	add.s32 	%r728, %r727, %r726;
	st.shared.v4.b32 	[%r728], {%r494, %r495, %r496, %r497};
	st.shared.v4.b32 	[%r728+1024], {%r502, %r503, %r504, %r505};
	st.shared.v4.b32 	[%r728+2048], {%r510, %r511, %r512, %r513};
	st.shared.v4.b32 	[%r728+3072], {%r518, %r519, %r520, %r521};
	st.shared.v4.b32 	[%r728+4096], {%r526, %r527, %r528, %r529};
	st.shared.v4.b32 	[%r728+5120], {%r534, %r535, %r536, %r537};
	st.shared.v4.b32 	[%r728+6144], {%r542, %r543, %r544, %r545};
	st.shared.v4.b32 	[%r728+7168], {%r550, %r551, %r552, %r553};
	st.shared.v4.b32 	[%r728+8192], {%r558, %r559, %r560, %r561};
	st.shared.v4.b32 	[%r728+9216], {%r566, %r567, %r568, %r569};
	st.shared.v4.b32 	[%r728+10240], {%r574, %r575, %r576, %r577};
	st.shared.v4.b32 	[%r728+11264], {%r582, %r583, %r584, %r585};
	st.shared.v4.b32 	[%r728+12288], {%r590, %r591, %r592, %r593};
	st.shared.v4.b32 	[%r728+13312], {%r598, %r599, %r600, %r601};
	st.shared.v4.b32 	[%r728+14336], {%r606, %r607, %r608, %r609};
	st.shared.v4.b32 	[%r728+15360], {%r614, %r615, %r616, %r617};
	.loc	1 138 29                        // prefix_prefill.py:138:29
	add.s64 	%rd1, %rd210, %rd211;
	.loc	1 142 60                        // prefix_prefill.py:142:60
	mul.lo.s32 	%r70, %r2, %r627;
	.loc	1 143 32                        // prefix_prefill.py:143:32
	shr.u32 	%r729, %r22, 3;
	.loc	1 143 37                        // prefix_prefill.py:143:37
	mul.lo.s32 	%r71, %r628, %r729;
	.loc	1 144 34                        // prefix_prefill.py:144:34
	shl.b32 	%r730, %r7, 1;
	and.b32  	%r72, %r730, 6;
	.loc	1 149 31                        // prefix_prefill.py:149:31
	mul.lo.s32 	%r731, %r2, %r629;
	.loc	1 150 35                        // prefix_prefill.py:150:35
	mul.lo.s32 	%r732, %r630, %r25;
	shl.b32 	%r733, %r630, 6;
	add.s32 	%r734, %r732, %r733;
	.loc	1 151 27                        // prefix_prefill.py:151:27
	or.b32  	%r74, %r20, 1;
	or.b32  	%r75, %r20, 2;
	or.b32  	%r76, %r20, 3;
	or.b32  	%r77, %r20, 4;
	or.b32  	%r78, %r20, 5;
	or.b32  	%r79, %r20, 6;
	or.b32  	%r80, %r20, 7;
	.loc	1 135 28                        // prefix_prefill.py:135:28
	add.s32 	%r735, %r5, 15;
	and.b32  	%r2965, %r735, -64;
	add.s32 	%r82, %r731, %r732;
	add.s32 	%r83, %r731, %r734;
	setp.lt.s32 	%p84, %r2965, 1;
	mov.f32 	%f10208, 0fFF800000;
	mov.f32 	%f10480, 0f3F800000;
	mov.f32 	%f10216, 0f00000000;
	add.s32 	%r2887, %r70, %r71;
	or.b32  	%r2888, %r69, %r21;
	and.b32  	%r2889, %r8, 134217724;
	shl.b32 	%r2890, %r23, 3;
	shl.b32 	%r2891, %r24, 3;
	xor.b32  	%r2892, %r20, %r21;
	shl.b32 	%r2893, %r25, 5;
	mov.u16 	%rs258, 0;
	mov.f32 	%f10217, %f10216;
	mov.f32 	%f10218, %f10216;
	mov.f32 	%f10219, %f10216;
	mov.f32 	%f10220, %f10216;
	mov.f32 	%f10221, %f10216;
	mov.f32 	%f10222, %f10216;
	mov.f32 	%f10223, %f10216;
	mov.f32 	%f10224, %f10216;
	mov.f32 	%f10225, %f10216;
	mov.f32 	%f10226, %f10216;
	mov.f32 	%f10227, %f10216;
	mov.f32 	%f10228, %f10216;
	mov.f32 	%f10229, %f10216;
	mov.f32 	%f10230, %f10216;
	mov.f32 	%f10231, %f10216;
	mov.f32 	%f10232, %f10216;
	mov.f32 	%f10233, %f10216;
	mov.f32 	%f10234, %f10216;
	mov.f32 	%f10235, %f10216;
	mov.f32 	%f10236, %f10216;
	mov.f32 	%f10237, %f10216;
	mov.f32 	%f10238, %f10216;
	mov.f32 	%f10239, %f10216;
	mov.f32 	%f10240, %f10216;
	mov.f32 	%f10241, %f10216;
	mov.f32 	%f10242, %f10216;
	mov.f32 	%f10243, %f10216;
	mov.f32 	%f10244, %f10216;
	mov.f32 	%f10245, %f10216;
	mov.f32 	%f10246, %f10216;
	mov.f32 	%f10247, %f10216;
	mov.f32 	%f10248, %f10216;
	mov.f32 	%f10249, %f10216;
	mov.f32 	%f10250, %f10216;
	mov.f32 	%f10251, %f10216;
	mov.f32 	%f10252, %f10216;
	mov.f32 	%f10253, %f10216;
	mov.f32 	%f10254, %f10216;
	mov.f32 	%f10255, %f10216;
	mov.f32 	%f10256, %f10216;
	mov.f32 	%f10257, %f10216;
	mov.f32 	%f10258, %f10216;
	mov.f32 	%f10259, %f10216;
	mov.f32 	%f10260, %f10216;
	mov.f32 	%f10261, %f10216;
	mov.f32 	%f10262, %f10216;
	mov.f32 	%f10263, %f10216;
	mov.f32 	%f10264, %f10216;
	mov.f32 	%f10265, %f10216;
	mov.f32 	%f10266, %f10216;
	mov.f32 	%f10267, %f10216;
	mov.f32 	%f10268, %f10216;
	mov.f32 	%f10269, %f10216;
	mov.f32 	%f10270, %f10216;
	mov.f32 	%f10271, %f10216;
	mov.f32 	%f10272, %f10216;
	mov.f32 	%f10273, %f10216;
	mov.f32 	%f10274, %f10216;
	mov.f32 	%f10275, %f10216;
	mov.f32 	%f10276, %f10216;
	mov.f32 	%f10277, %f10216;
	mov.f32 	%f10278, %f10216;
	mov.f32 	%f10279, %f10216;
	mov.f32 	%f10280, %f10216;
	mov.f32 	%f10281, %f10216;
	mov.f32 	%f10282, %f10216;
	mov.f32 	%f10283, %f10216;
	mov.f32 	%f10284, %f10216;
	mov.f32 	%f10285, %f10216;
	mov.f32 	%f10286, %f10216;
	mov.f32 	%f10287, %f10216;
	mov.f32 	%f10288, %f10216;
	mov.f32 	%f10289, %f10216;
	mov.f32 	%f10290, %f10216;
	mov.f32 	%f10291, %f10216;
	mov.f32 	%f10292, %f10216;
	mov.f32 	%f10293, %f10216;
	mov.f32 	%f10294, %f10216;
	mov.f32 	%f10295, %f10216;
	mov.f32 	%f10296, %f10216;
	mov.f32 	%f10297, %f10216;
	mov.f32 	%f10298, %f10216;
	mov.f32 	%f10299, %f10216;
	mov.f32 	%f10300, %f10216;
	mov.f32 	%f10301, %f10216;
	mov.f32 	%f10302, %f10216;
	mov.f32 	%f10303, %f10216;
	mov.f32 	%f10304, %f10216;
	mov.f32 	%f10305, %f10216;
	mov.f32 	%f10306, %f10216;
	mov.f32 	%f10307, %f10216;
	mov.f32 	%f10308, %f10216;
	mov.f32 	%f10309, %f10216;
	mov.f32 	%f10310, %f10216;
	mov.f32 	%f10311, %f10216;
	mov.f32 	%f10312, %f10216;
	mov.f32 	%f10313, %f10216;
	mov.f32 	%f10314, %f10216;
	mov.f32 	%f10315, %f10216;
	mov.f32 	%f10316, %f10216;
	mov.f32 	%f10317, %f10216;
	mov.f32 	%f10318, %f10216;
	mov.f32 	%f10319, %f10216;
	mov.f32 	%f10320, %f10216;
	mov.f32 	%f10321, %f10216;
	mov.f32 	%f10322, %f10216;
	mov.f32 	%f10323, %f10216;
	mov.f32 	%f10324, %f10216;
	mov.f32 	%f10325, %f10216;
	mov.f32 	%f10326, %f10216;
	mov.f32 	%f10327, %f10216;
	mov.f32 	%f10328, %f10216;
	mov.f32 	%f10329, %f10216;
	mov.f32 	%f10330, %f10216;
	mov.f32 	%f10331, %f10216;
	mov.f32 	%f10332, %f10216;
	mov.f32 	%f10333, %f10216;
	mov.f32 	%f10334, %f10216;
	mov.f32 	%f10335, %f10216;
	mov.f32 	%f10336, %f10216;
	mov.f32 	%f10337, %f10216;
	mov.f32 	%f10338, %f10216;
	mov.f32 	%f10339, %f10216;
	mov.f32 	%f10340, %f10216;
	mov.f32 	%f10341, %f10216;
	mov.f32 	%f10342, %f10216;
	mov.f32 	%f10343, %f10216;
	mov.f32 	%f10481, %f10480;
	mov.f32 	%f10482, %f10480;
	mov.f32 	%f10483, %f10480;
	mov.f32 	%f10209, %f10208;
	mov.f32 	%f10210, %f10208;
	mov.f32 	%f10211, %f10208;
	@%p84 bra 	$L__BB0_4;
// %bb.1:                               // %.lr.ph
	.loc	1 0 28                          // prefix_prefill.py:0:28
	shl.b32 	%r739, %r2888, 8;
	or.b32  	%r741, %r739, %r725;
	add.s32 	%r743, %r727, 32768;
	add.s32 	%r84, %r743, %r741;
	shr.u32 	%r744, %r727, 4;
	cvt.u64.u32 	%rd230, %r744;
	and.b64  	%rd231, %rd230, 16383;
	or.b64  	%rd2, %rd231, 4611686293372403712;
	shr.u32 	%r745, %r743, 4;
	cvt.u64.u32 	%rd232, %r745;
	and.b64  	%rd233, %rd232, 16383;
	or.b64  	%rd3, %rd233, 4611686293313683456;
	add.s64 	%rd4, %rd231, 4611686293372403714;
	add.s64 	%rd5, %rd233, 4611686293313683458;
	add.s64 	%rd6, %rd231, 4611686293372403716;
	add.s64 	%rd7, %rd233, 4611686293313683460;
	add.s64 	%rd8, %rd231, 4611686293372403718;
	add.s64 	%rd9, %rd233, 4611686293313683462;
	add.s64 	%rd10, %rd231, 4611686293372404736;
	add.s64 	%rd11, %rd233, 4611686293313683584;
	add.s64 	%rd12, %rd231, 4611686293372404738;
	add.s64 	%rd13, %rd233, 4611686293313683586;
	add.s64 	%rd14, %rd231, 4611686293372404740;
	add.s64 	%rd15, %rd233, 4611686293313683588;
	add.s64 	%rd16, %rd231, 4611686293372404742;
	add.s64 	%rd17, %rd233, 4611686293313683590;
	add.s64 	%rd18, %rd231, 4611686293372404224;
	add.s64 	%rd19, %rd231, 4611686293372404226;
	add.s64 	%rd20, %rd231, 4611686293372404228;
	add.s64 	%rd21, %rd231, 4611686293372404230;
	add.s64 	%rd22, %rd231, 4611686293372405248;
	add.s64 	%rd23, %rd231, 4611686293372405250;
	add.s64 	%rd24, %rd231, 4611686293372405252;
	add.s64 	%rd25, %rd231, 4611686293372405254;
	add.s32 	%r87, %r743, %r2890;
	add.s32 	%r88, %r743, %r2891;
	shl.b32 	%r749, %r2892, 1;
	or.b32  	%r751, %r2893, %r749;
	add.s32 	%r89, %r743, %r751;
	add.s32 	%r90, %r89, 2048;
	or.b64  	%rd26, %rd233, -4611685949691133952;
	shl.b32 	%r752, %r11, 3;
	.loc	1 135 28                        // prefix_prefill.py:135:28
	add.s32 	%r91, %r2887, %r752;
	add.s32 	%r92, %r91, 64;
	mov.f32 	%f10480, 0f3F800000;
	mov.f32 	%f10208, 0fFF800000;
	mov.f32 	%f10216, 0f00000000;
	mov.u64 	%rd854, %rd1;
	mov.f32 	%f10217, %f10216;
	mov.f32 	%f10218, %f10216;
	mov.f32 	%f10219, %f10216;
	mov.f32 	%f10220, %f10216;
	mov.f32 	%f10221, %f10216;
	mov.f32 	%f10222, %f10216;
	mov.f32 	%f10223, %f10216;
	mov.f32 	%f10224, %f10216;
	mov.f32 	%f10225, %f10216;
	mov.f32 	%f10226, %f10216;
	mov.f32 	%f10227, %f10216;
	mov.f32 	%f10228, %f10216;
	mov.f32 	%f10229, %f10216;
	mov.f32 	%f10230, %f10216;
	mov.f32 	%f10231, %f10216;
	mov.f32 	%f10232, %f10216;
	mov.f32 	%f10233, %f10216;
	mov.f32 	%f10234, %f10216;
	mov.f32 	%f10235, %f10216;
	mov.f32 	%f10236, %f10216;
	mov.f32 	%f10237, %f10216;
	mov.f32 	%f10238, %f10216;
	mov.f32 	%f10239, %f10216;
	mov.f32 	%f10240, %f10216;
	mov.f32 	%f10241, %f10216;
	mov.f32 	%f10242, %f10216;
	mov.f32 	%f10243, %f10216;
	mov.f32 	%f10244, %f10216;
	mov.f32 	%f10245, %f10216;
	mov.f32 	%f10246, %f10216;
	mov.f32 	%f10247, %f10216;
	mov.f32 	%f10248, %f10216;
	mov.f32 	%f10249, %f10216;
	mov.f32 	%f10250, %f10216;
	mov.f32 	%f10251, %f10216;
	mov.f32 	%f10252, %f10216;
	mov.f32 	%f10253, %f10216;
	mov.f32 	%f10254, %f10216;
	mov.f32 	%f10255, %f10216;
	mov.f32 	%f10256, %f10216;
	mov.f32 	%f10257, %f10216;
	mov.f32 	%f10258, %f10216;
	mov.f32 	%f10259, %f10216;
	mov.f32 	%f10260, %f10216;
	mov.f32 	%f10261, %f10216;
	mov.f32 	%f10262, %f10216;
	mov.f32 	%f10263, %f10216;
	mov.f32 	%f10264, %f10216;
	mov.f32 	%f10265, %f10216;
	mov.f32 	%f10266, %f10216;
	mov.f32 	%f10267, %f10216;
	mov.f32 	%f10268, %f10216;
	mov.f32 	%f10269, %f10216;
	mov.f32 	%f10270, %f10216;
	mov.f32 	%f10271, %f10216;
	mov.f32 	%f10272, %f10216;
	mov.f32 	%f10273, %f10216;
	mov.f32 	%f10274, %f10216;
	mov.f32 	%f10275, %f10216;
	mov.f32 	%f10276, %f10216;
	mov.f32 	%f10277, %f10216;
	mov.f32 	%f10278, %f10216;
	mov.f32 	%f10279, %f10216;
	mov.f32 	%f10280, %f10216;
	mov.f32 	%f10281, %f10216;
	mov.f32 	%f10282, %f10216;
	mov.f32 	%f10283, %f10216;
	mov.f32 	%f10284, %f10216;
	mov.f32 	%f10285, %f10216;
	mov.f32 	%f10286, %f10216;
	mov.f32 	%f10287, %f10216;
	mov.f32 	%f10288, %f10216;
	mov.f32 	%f10289, %f10216;
	mov.f32 	%f10290, %f10216;
	mov.f32 	%f10291, %f10216;
	mov.f32 	%f10292, %f10216;
	mov.f32 	%f10293, %f10216;
	mov.f32 	%f10294, %f10216;
	mov.f32 	%f10295, %f10216;
	mov.f32 	%f10296, %f10216;
	mov.f32 	%f10297, %f10216;
	mov.f32 	%f10298, %f10216;
	mov.f32 	%f10299, %f10216;
	mov.f32 	%f10300, %f10216;
	mov.f32 	%f10301, %f10216;
	mov.f32 	%f10302, %f10216;
	mov.f32 	%f10303, %f10216;
	mov.f32 	%f10304, %f10216;
	mov.f32 	%f10305, %f10216;
	mov.f32 	%f10306, %f10216;
	mov.f32 	%f10307, %f10216;
	mov.f32 	%f10308, %f10216;
	mov.f32 	%f10309, %f10216;
	mov.f32 	%f10310, %f10216;
	mov.f32 	%f10311, %f10216;
	mov.f32 	%f10312, %f10216;
	mov.f32 	%f10313, %f10216;
	mov.f32 	%f10314, %f10216;
	mov.f32 	%f10315, %f10216;
	mov.f32 	%f10316, %f10216;
	mov.f32 	%f10317, %f10216;
	mov.f32 	%f10318, %f10216;
	mov.f32 	%f10319, %f10216;
	mov.f32 	%f10320, %f10216;
	mov.f32 	%f10321, %f10216;
	mov.f32 	%f10322, %f10216;
	mov.f32 	%f10323, %f10216;
	mov.f32 	%f10324, %f10216;
	mov.f32 	%f10325, %f10216;
	mov.f32 	%f10326, %f10216;
	mov.f32 	%f10327, %f10216;
	mov.f32 	%f10328, %f10216;
	mov.f32 	%f10329, %f10216;
	mov.f32 	%f10330, %f10216;
	mov.f32 	%f10331, %f10216;
	mov.f32 	%f10332, %f10216;
	mov.f32 	%f10333, %f10216;
	mov.f32 	%f10334, %f10216;
	mov.f32 	%f10335, %f10216;
	mov.f32 	%f10336, %f10216;
	mov.f32 	%f10337, %f10216;
	mov.f32 	%f10338, %f10216;
	mov.f32 	%f10339, %f10216;
	mov.f32 	%f10340, %f10216;
	mov.f32 	%f10341, %f10216;
	mov.f32 	%f10342, %f10216;
	mov.f32 	%f10343, %f10216;
	mov.u32 	%r2900, %r621;
	mov.f32 	%f10209, %f10208;
	mov.f32 	%f10210, %f10208;
	mov.f32 	%f10211, %f10208;
	mov.f32 	%f10481, %f10480;
	mov.f32 	%f10482, %f10480;
	mov.f32 	%f10483, %f10480;
	bra.uni 	$L__BB0_2;
$L__BB0_28:                             //   in Loop: Header=BB0_2 Depth=1
	.loc	1 0 0                           // prefix_prefill.py:0:0
	add.s32 	%r322, %r1170, %r74;
	add.s32 	%r323, %r1170, %r75;
	add.s32 	%r324, %r1170, %r76;
	add.s32 	%r325, %r1170, %r77;
	add.s32 	%r326, %r1170, %r78;
	add.s32 	%r327, %r1170, %r79;
	add.s32 	%r328, %r1170, %r80;
	add.s32 	%r330, %r1171, %r74;
	add.s32 	%r331, %r1171, %r75;
	add.s32 	%r332, %r1171, %r76;
	add.s32 	%r333, %r1171, %r77;
	add.s32 	%r334, %r1171, %r78;
	add.s32 	%r335, %r1171, %r79;
	add.s32 	%r336, %r1171, %r80;
	.loc	1 202 28                        // prefix_prefill.py:202:28
	add.s32 	%r1247, %r2898, 48;
	add.s32 	%r1248, %r2898, 49;
	add.s32 	%r1249, %r2898, 50;
	add.s32 	%r1250, %r2898, 51;
	add.s32 	%r1251, %r2898, 52;
	add.s32 	%r1252, %r2898, 53;
	add.s32 	%r1253, %r2898, 54;
	.loc	1 202 50                        // prefix_prefill.py:202:50
	add.s32 	%r1254, %r2898, 55;
	setp.lt.s32 	%p343, %r1247, %r5;
	setp.lt.s32 	%p345, %r1248, %r5;
	setp.lt.s32 	%p347, %r1249, %r5;
	setp.lt.s32 	%p349, %r1250, %r5;
	setp.lt.s32 	%p351, %r1251, %r5;
	setp.lt.s32 	%p353, %r1252, %r5;
	setp.lt.s32 	%p355, %r1253, %r5;
	setp.lt.s32 	%p357, %r1254, %r5;
	.loc	1 200 26                        // prefix_prefill.py:200:26
	add.s64 	%rd520, %rd188, %rd838;
	mul.wide.s32 	%rd537, %r322, 2;
	add.s64 	%rd521, %rd188, %rd537;
	mul.wide.s32 	%rd538, %r323, 2;
	add.s64 	%rd522, %rd188, %rd538;
	mul.wide.s32 	%rd539, %r324, 2;
	add.s64 	%rd523, %rd188, %rd539;
	mul.wide.s32 	%rd540, %r325, 2;
	add.s64 	%rd524, %rd188, %rd540;
	mul.wide.s32 	%rd541, %r326, 2;
	add.s64 	%rd525, %rd188, %rd541;
	mul.wide.s32 	%rd542, %r327, 2;
	add.s64 	%rd526, %rd188, %rd542;
	mul.wide.s32 	%rd543, %r328, 2;
	add.s64 	%rd527, %rd188, %rd543;
	add.s64 	%rd528, %rd188, %rd839;
	mul.wide.s32 	%rd545, %r330, 2;
	add.s64 	%rd529, %rd188, %rd545;
	mul.wide.s32 	%rd546, %r331, 2;
	add.s64 	%rd530, %rd188, %rd546;
	mul.wide.s32 	%rd547, %r332, 2;
	add.s64 	%rd531, %rd188, %rd547;
	mul.wide.s32 	%rd548, %r333, 2;
	add.s64 	%rd532, %rd188, %rd548;
	mul.wide.s32 	%rd549, %r334, 2;
	add.s64 	%rd533, %rd188, %rd549;
	mul.wide.s32 	%rd550, %r335, 2;
	add.s64 	%rd534, %rd188, %rd550;
	mul.wide.s32 	%rd551, %r336, 2;
	add.s64 	%rd535, %rd188, %rd551;
	.loc	1 200 16                        // prefix_prefill.py:200:16
	// begin inline asm
	mov.u16 %rs193, 0x0;
	@%p343 ld.global.b16 { %rs193 }, [ %rd520 + 0 ];
	@!%p343 mov.u16 %rs193, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs195, 0x0;
	@%p345 ld.global.b16 { %rs195 }, [ %rd521 + 0 ];
	@!%p345 mov.u16 %rs195, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs197, 0x0;
	@%p347 ld.global.b16 { %rs197 }, [ %rd522 + 0 ];
	@!%p347 mov.u16 %rs197, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs199, 0x0;
	@%p349 ld.global.b16 { %rs199 }, [ %rd523 + 0 ];
	@!%p349 mov.u16 %rs199, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs201, 0x0;
	@%p351 ld.global.b16 { %rs201 }, [ %rd524 + 0 ];
	@!%p351 mov.u16 %rs201, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs203, 0x0;
	@%p353 ld.global.b16 { %rs203 }, [ %rd525 + 0 ];
	@!%p353 mov.u16 %rs203, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs205, 0x0;
	@%p355 ld.global.b16 { %rs205 }, [ %rd526 + 0 ];
	@!%p355 mov.u16 %rs205, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs207, 0x0;
	@%p357 ld.global.b16 { %rs207 }, [ %rd527 + 0 ];
	@!%p357 mov.u16 %rs207, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs209, 0x0;
	@%p343 ld.global.b16 { %rs209 }, [ %rd528 + 0 ];
	@!%p343 mov.u16 %rs209, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs211, 0x0;
	@%p345 ld.global.b16 { %rs211 }, [ %rd529 + 0 ];
	@!%p345 mov.u16 %rs211, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs213, 0x0;
	@%p347 ld.global.b16 { %rs213 }, [ %rd530 + 0 ];
	@!%p347 mov.u16 %rs213, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs215, 0x0;
	@%p349 ld.global.b16 { %rs215 }, [ %rd531 + 0 ];
	@!%p349 mov.u16 %rs215, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs217, 0x0;
	@%p351 ld.global.b16 { %rs217 }, [ %rd532 + 0 ];
	@!%p351 mov.u16 %rs217, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs219, 0x0;
	@%p353 ld.global.b16 { %rs219 }, [ %rd533 + 0 ];
	@!%p353 mov.u16 %rs219, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs221, 0x0;
	@%p355 ld.global.b16 { %rs221 }, [ %rd534 + 0 ];
	@!%p355 mov.u16 %rs221, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs223, 0x0;
	@%p357 ld.global.b16 { %rs223 }, [ %rd535 + 0 ];
	@!%p357 mov.u16 %rs223, %rs258;
	// end inline asm
	mov.b32 	%r2957, {%rs193, %rs195};
	mov.b32 	%r2958, {%rs197, %rs199};
	mov.b32 	%r2959, {%rs201, %rs203};
	mov.b32 	%r2960, {%rs205, %rs207};
	mov.b32 	%r2961, {%rs209, %rs211};
	mov.b32 	%r2962, {%rs213, %rs215};
	mov.b32 	%r2963, {%rs217, %rs219};
	mov.b32 	%r2964, {%rs221, %rs223};
$L__BB0_30:                             //   in Loop: Header=BB0_2 Depth=1
	.loc	1 197 11                        // prefix_prefill.py:197:11
	bar.sync 	0;
	st.shared.v4.b32 	[%r89], {%r2957, %r2958, %r2959, %r2960};
	st.shared.v4.b32 	[%r90], {%r2961, %r2962, %r2963, %r2964};
	.loc	1 211 17                        // prefix_prefill.py:211:17
	mov.b32 	%r1263, %f5492;
	// begin inline asm
	cvt.rn.bf16.f32 %rs225, %r1263;
	// end inline asm
	mov.b32 	%r1264, %f5494;
	// begin inline asm
	cvt.rn.bf16.f32 %rs226, %r1264;
	// end inline asm
	mov.b32 	%r1265, %f5496;
	// begin inline asm
	cvt.rn.bf16.f32 %rs227, %r1265;
	// end inline asm
	mov.b32 	%r1266, %f5498;
	// begin inline asm
	cvt.rn.bf16.f32 %rs228, %r1266;
	// end inline asm
	mov.b32 	%r1267, %f5500;
	// begin inline asm
	cvt.rn.bf16.f32 %rs229, %r1267;
	// end inline asm
	mov.b32 	%r1268, %f5502;
	// begin inline asm
	cvt.rn.bf16.f32 %rs230, %r1268;
	// end inline asm
	mov.b32 	%r1269, %f5504;
	// begin inline asm
	cvt.rn.bf16.f32 %rs231, %r1269;
	// end inline asm
	mov.b32 	%r1270, %f5506;
	// begin inline asm
	cvt.rn.bf16.f32 %rs232, %r1270;
	// end inline asm
	mov.b32 	%r1271, %f5508;
	// begin inline asm
	cvt.rn.bf16.f32 %rs233, %r1271;
	// end inline asm
	mov.b32 	%r1272, %f5510;
	// begin inline asm
	cvt.rn.bf16.f32 %rs234, %r1272;
	// end inline asm
	mov.b32 	%r1273, %f5512;
	// begin inline asm
	cvt.rn.bf16.f32 %rs235, %r1273;
	// end inline asm
	mov.b32 	%r1274, %f5514;
	// begin inline asm
	cvt.rn.bf16.f32 %rs236, %r1274;
	// end inline asm
	mov.b32 	%r1275, %f5516;
	// begin inline asm
	cvt.rn.bf16.f32 %rs237, %r1275;
	// end inline asm
	mov.b32 	%r1276, %f5518;
	// begin inline asm
	cvt.rn.bf16.f32 %rs238, %r1276;
	// end inline asm
	mov.b32 	%r1277, %f5520;
	// begin inline asm
	cvt.rn.bf16.f32 %rs239, %r1277;
	// end inline asm
	mov.b32 	%r1278, %f5522;
	// begin inline asm
	cvt.rn.bf16.f32 %rs240, %r1278;
	// end inline asm
	.loc	1 213 24                        // prefix_prefill.py:213:24
	// begin inline asm
	fence.proxy.async.shared::cta;
	// end inline asm
	bar.sync 	0;
	mov.b32 	%r1287, {%rs225, %rs226};
	mov.b32 	%r1288, {%rs227, %rs228};
	mov.b32 	%r1289, {%rs229, %rs230};
	mov.b32 	%r1290, {%rs231, %rs232};
	mov.b32 	%r1291, {%rs233, %rs234};
	mov.b32 	%r1292, {%rs235, %rs236};
	mov.b32 	%r1293, {%rs237, %rs238};
	mov.b32 	%r1294, {%rs239, %rs240};
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.bf16.bf16 {%f10216,%f10217,%f10218,%f10219,%f10220,%f10221,%f10222,%f10223,%f10224,%f10225,%f10226,%f10227,%f10228,%f10229,%f10230,%f10231,%f10232,%f10233,%f10234,%f10235,%f10236,%f10237,%f10238,%f10239,%f10240,%f10241,%f10242,%f10243,%f10244,%f10245,%f10246,%f10247,%f10248,%f10249,%f10250,%f10251,%f10252,%f10253,%f10254,%f10255,%f10256,%f10257,%f10258,%f10259,%f10260,%f10261,%f10262,%f10263,%f10264,%f10265,%f10266,%f10267,%f10268,%f10269,%f10270,%f10271,%f10272,%f10273,%f10274,%f10275,%f10276,%f10277,%f10278,%f10279}, {%r1287,%r1288,%r1289,%r1290}, %rd26, %p744, 1, 1, 0;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.bf16.bf16 {%f10280,%f10281,%f10282,%f10283,%f10284,%f10285,%f10286,%f10287,%f10288,%f10289,%f10290,%f10291,%f10292,%f10293,%f10294,%f10295,%f10296,%f10297,%f10298,%f10299,%f10300,%f10301,%f10302,%f10303,%f10304,%f10305,%f10306,%f10307,%f10308,%f10309,%f10310,%f10311,%f10312,%f10313,%f10314,%f10315,%f10316,%f10317,%f10318,%f10319,%f10320,%f10321,%f10322,%f10323,%f10324,%f10325,%f10326,%f10327,%f10328,%f10329,%f10330,%f10331,%f10332,%f10333,%f10334,%f10335,%f10336,%f10337,%f10338,%f10339,%f10340,%f10341,%f10342,%f10343}, {%r1291,%r1292,%r1293,%r1294}, %rd26, %p744, 1, 1, 0;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	// begin inline asm
	// wait for regs: %f10216,%f10217,%f10218,%f10219,%f10220,%f10221,%f10222,%f10223,%f10224,%f10225,%f10226,%f10227,%f10228,%f10229,%f10230,%f10231,%f10232,%f10233,%f10234,%f10235,%f10236,%f10237,%f10238,%f10239,%f10240,%f10241,%f10242,%f10243,%f10244,%f10245,%f10246,%f10247,%f10248,%f10249,%f10250,%f10251,%f10252,%f10253,%f10254,%f10255,%f10256,%f10257,%f10258,%f10259,%f10260,%f10261,%f10262,%f10263,%f10264,%f10265,%f10266,%f10267,%f10268,%f10269,%f10270,%f10271,%f10272,%f10273,%f10274,%f10275,%f10276,%f10277,%f10278,%f10279,%f10280,%f10281,%f10282,%f10283,%f10284,%f10285,%f10286,%f10287,%f10288,%f10289,%f10290,%f10291,%f10292,%f10293,%f10294,%f10295,%f10296,%f10297,%f10298,%f10299,%f10300,%f10301,%f10302,%f10303,%f10304,%f10305,%f10306,%f10307,%f10308,%f10309,%f10310,%f10311,%f10312,%f10313,%f10314,%f10315,%f10316,%f10317,%f10318,%f10319,%f10320,%f10321,%f10322,%f10323,%f10324,%f10325,%f10326,%f10327,%f10328,%f10329,%f10330,%f10331,%f10332,%f10333,%f10334,%f10335,%f10336,%f10337,%f10338,%f10339,%f10340,%f10341,%f10342,%f10343
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	1 215 28                        // prefix_prefill.py:215:28
	fma.rn.f32 	%f10480, %f1145, %f5524, %f1169;
	fma.rn.f32 	%f10481, %f1146, %f5526, %f1170;
	fma.rn.f32 	%f10482, %f1147, %f5528, %f1171;
	fma.rn.f32 	%f10483, %f1148, %f5530, %f1172;
	.loc	1 135 28                        // prefix_prefill.py:135:28
	add.s64 	%rd854, %rd854, 16;
	setp.lt.s32 	%p377, %r2900, %r2965;
	@%p377 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_4;
$L__BB0_2:                              // =>This Inner Loop Header: Depth=1
	.loc	1 138 21                        // prefix_prefill.py:138:21
	// begin inline asm
	mov.u32 %r753, 0x0;
	@%p744 ld.global.b32 { %r753 }, [ %rd854 + 0 ];
	// end inline asm
	.loc	1 142 26                        // prefix_prefill.py:142:26
	mul.lo.s32 	%r754, %r753, %r486;
	.loc	1 144 24                        // prefix_prefill.py:144:24
	add.s32 	%r102, %r72, %r2900;
	add.s32 	%r103, %r102, 1;
	add.s32 	%r104, %r102, 8;
	add.s32 	%r105, %r102, 9;
	add.s32 	%r106, %r754, %r91;
	add.s32 	%r107, %r754, %r92;
	.loc	1 148 31                        // prefix_prefill.py:148:31
	mul.lo.s32 	%r755, %r753, %r487;
	add.s32 	%r756, %r755, %r82;
	add.s32 	%r757, %r755, %r83;
	.loc	1 151 17                        // prefix_prefill.py:151:17
	add.s32 	%r108, %r756, %r20;
	add.s32 	%r116, %r757, %r20;
	.loc	1 153 34                        // prefix_prefill.py:153:34
	add.s32 	%r124, %r2900, 16;
	setp.le.s32 	%p86, %r124, %r5;
	add.s32 	%r2899, %r11, %r2900;
	mul.wide.s32 	%rd852, %r106, 2;
	mul.wide.s32 	%rd853, %r107, 2;
	@%p86 bra 	$L__BB0_8;
// %bb.3:                               //   in Loop: Header=BB0_2 Depth=1
	.loc	1 144 24                        // prefix_prefill.py:144:24
	add.s32 	%r783, %r2899, 8;
	.loc	1 158 50                        // prefix_prefill.py:158:50
	setp.lt.s32 	%p89, %r2899, %r5;
	setp.lt.s32 	%p94, %r783, %r5;
	.loc	1 156 26                        // prefix_prefill.py:156:26
	add.s64 	%rd239, %rd187, %rd852;
	add.s64 	%rd240, %rd187, %rd853;
	mov.b32 	%r770, 0;
	.loc	1 156 16                        // prefix_prefill.py:156:16
	// begin inline asm
	mov.u32 %r2907, 0x0;
	mov.u32 %r2908, 0x0;
	mov.u32 %r2905, 0x0;
	mov.u32 %r2906, 0x0;
	@%p89 ld.global.v4.b32 { %r2907, %r2908, %r2905, %r2906 }, [ %rd239 + 0 ];
	@!%p89 mov.u32 %r2907, %r770;
	@!%p89 mov.u32 %r2908, %r770;
	@!%p89 mov.u32 %r2905, %r770;
	@!%p89 mov.u32 %r2906, %r770;
	// end inline asm
	// begin inline asm
	mov.u32 %r2901, 0x0;
	mov.u32 %r2902, 0x0;
	mov.u32 %r2903, 0x0;
	mov.u32 %r2904, 0x0;
	@%p94 ld.global.v4.b32 { %r2901, %r2902, %r2903, %r2904 }, [ %rd240 + 0 ];
	@!%p94 mov.u32 %r2901, %r770;
	@!%p94 mov.u32 %r2902, %r770;
	@!%p94 mov.u32 %r2903, %r770;
	@!%p94 mov.u32 %r2904, %r770;
	// end inline asm
	.loc	1 153 11                        // prefix_prefill.py:153:11
	bra.uni 	$L__BB0_9;
$L__BB0_8:                              //   in Loop: Header=BB0_2 Depth=1
	.loc	1 161 39                        // prefix_prefill.py:161:39
	add.s64 	%rd235, %rd187, %rd852;
	add.s64 	%rd236, %rd187, %rd853;
	.loc	1 161 29                        // prefix_prefill.py:161:29
	// begin inline asm
	mov.u32 %r2907, 0x0;
	mov.u32 %r2908, 0x0;
	mov.u32 %r2905, 0x0;
	mov.u32 %r2906, 0x0;
	@%p744 ld.global.v4.b32 { %r2907, %r2908, %r2905, %r2906 }, [ %rd235 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r2901, 0x0;
	mov.u32 %r2902, 0x0;
	mov.u32 %r2903, 0x0;
	mov.u32 %r2904, 0x0;
	@%p744 ld.global.v4.b32 { %r2901, %r2902, %r2903, %r2904 }, [ %rd236 + 0 ];
	// end inline asm
$L__BB0_9:                              //   in Loop: Header=BB0_2 Depth=1
	.loc	1 153 11                        // prefix_prefill.py:153:11
	bar.sync 	0;
	st.shared.v4.b32 	[%r84], {%r2907, %r2908, %r2905, %r2906};
	st.shared.v4.b32 	[%r84+1024], {%r2901, %r2902, %r2903, %r2904};
	.loc	1 169 23                        // prefix_prefill.py:169:23
	// begin inline asm
	fence.proxy.async.shared::cta;
	// end inline asm
	bar.sync 	0;
	shfl.sync.idx.b32	%r820, %r2889, 0, 31, -1;
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	shl.b32 	%r821, %r820, 7;
	and.b32  	%r822, %r821, 384;
	cvt.u64.u32 	%rd275, %r822;
	add.s64 	%rd243, %rd2, %rd275;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f2444,%f2445,%f2446,%f2447,%f2448,%f2449,%f2450,%f2451}, %rd243, %rd3, 0, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd245, %rd4, %rd275;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f2444,%f2445,%f2446,%f2447,%f2448,%f2449,%f2450,%f2451}, %rd245, %rd5, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd247, %rd6, %rd275;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f2444,%f2445,%f2446,%f2447,%f2448,%f2449,%f2450,%f2451}, %rd247, %rd7, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd249, %rd8, %rd275;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f2444,%f2445,%f2446,%f2447,%f2448,%f2449,%f2450,%f2451}, %rd249, %rd9, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd251, %rd10, %rd275;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f2444,%f2445,%f2446,%f2447,%f2448,%f2449,%f2450,%f2451}, %rd251, %rd11, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd253, %rd12, %rd275;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f2444,%f2445,%f2446,%f2447,%f2448,%f2449,%f2450,%f2451}, %rd253, %rd13, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd255, %rd14, %rd275;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f2444,%f2445,%f2446,%f2447,%f2448,%f2449,%f2450,%f2451}, %rd255, %rd15, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd257, %rd16, %rd275;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f2444,%f2445,%f2446,%f2447,%f2448,%f2449,%f2450,%f2451}, %rd257, %rd17, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd259, %rd18, %rd275;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f2564,%f2565,%f2566,%f2567,%f2568,%f2569,%f2570,%f2571}, %rd259, %rd3, 0, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd261, %rd19, %rd275;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f2564,%f2565,%f2566,%f2567,%f2568,%f2569,%f2570,%f2571}, %rd261, %rd5, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd263, %rd20, %rd275;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f2564,%f2565,%f2566,%f2567,%f2568,%f2569,%f2570,%f2571}, %rd263, %rd7, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd265, %rd21, %rd275;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f2564,%f2565,%f2566,%f2567,%f2568,%f2569,%f2570,%f2571}, %rd265, %rd9, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd267, %rd22, %rd275;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f2564,%f2565,%f2566,%f2567,%f2568,%f2569,%f2570,%f2571}, %rd267, %rd11, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd269, %rd23, %rd275;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f2564,%f2565,%f2566,%f2567,%f2568,%f2569,%f2570,%f2571}, %rd269, %rd13, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd271, %rd24, %rd275;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f2564,%f2565,%f2566,%f2567,%f2568,%f2569,%f2570,%f2571}, %rd271, %rd15, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd273, %rd25, %rd275;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f2564,%f2565,%f2566,%f2567,%f2568,%f2569,%f2570,%f2571}, %rd273, %rd17, %p744, 1, 1, 0, 0;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	// begin inline asm
	// wait for regs: %f2444,%f2445,%f2446,%f2447,%f2448,%f2449,%f2450,%f2451,%f2564,%f2565,%f2566,%f2567,%f2568,%f2569,%f2570,%f2571
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	1 170 55                        // prefix_prefill.py:170:55
	setp.lt.s32 	%p130, %r102, %r5;
	setp.lt.s32 	%p131, %r103, %r5;
	setp.lt.s32 	%p132, %r104, %r5;
	setp.lt.s32 	%p133, %r105, %r5;
	.loc	1 171 22                        // prefix_prefill.py:171:22
	selp.f32 	%f2732, %f2444, 0fFF800000, %p130;
	selp.f32 	%f2733, %f2445, 0fFF800000, %p131;
	selp.f32 	%f2734, %f2446, 0fFF800000, %p130;
	selp.f32 	%f2735, %f2447, 0fFF800000, %p131;
	selp.f32 	%f2736, %f2448, 0fFF800000, %p132;
	selp.f32 	%f2737, %f2449, 0fFF800000, %p133;
	selp.f32 	%f2738, %f2450, 0fFF800000, %p132;
	selp.f32 	%f2739, %f2451, 0fFF800000, %p133;
	selp.f32 	%f2740, %f2564, 0fFF800000, %p130;
	selp.f32 	%f2741, %f2565, 0fFF800000, %p131;
	selp.f32 	%f2742, %f2566, 0fFF800000, %p130;
	selp.f32 	%f2743, %f2567, 0fFF800000, %p131;
	selp.f32 	%f2744, %f2568, 0fFF800000, %p132;
	selp.f32 	%f2745, %f2569, 0fFF800000, %p133;
	selp.f32 	%f2746, %f2570, 0fFF800000, %p132;
	selp.f32 	%f2747, %f2571, 0fFF800000, %p133;
	.loc	1 172 14                        // prefix_prefill.py:172:14
	mul.f32 	%f2748, %f2401, %f2732;
	mul.f32 	%f2749, %f2401, %f2733;
	mul.f32 	%f2750, %f2401, %f2734;
	mul.f32 	%f2751, %f2401, %f2735;
	mul.f32 	%f2752, %f2401, %f2736;
	mul.f32 	%f2753, %f2401, %f2737;
	mul.f32 	%f2754, %f2401, %f2738;
	mul.f32 	%f2755, %f2401, %f2739;
	mul.f32 	%f2756, %f2401, %f2740;
	mul.f32 	%f2757, %f2401, %f2741;
	mul.f32 	%f2758, %f2401, %f2742;
	mul.f32 	%f2759, %f2401, %f2743;
	mul.f32 	%f2760, %f2401, %f2744;
	mul.f32 	%f2761, %f2401, %f2745;
	mul.f32 	%f2762, %f2401, %f2746;
	mul.f32 	%f2763, %f2401, %f2747;
$L__tmp1:
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f2764, %f2748, %f2749;
	max.f32 	%f2765, %f2750, %f2751;
	max.f32 	%f2766, %f2764, %f2752;
	max.f32 	%f2767, %f2766, %f2753;
	max.f32 	%f2768, %f2765, %f2754;
	max.f32 	%f2769, %f2768, %f2755;
	max.f32 	%f2770, %f2756, %f2757;
	max.f32 	%f2771, %f2758, %f2759;
	max.f32 	%f2772, %f2770, %f2760;
	max.f32 	%f2773, %f2772, %f2761;
	max.f32 	%f2774, %f2771, %f2762;
	max.f32 	%f2775, %f2774, %f2763;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r823, %f2767;
	shfl.sync.bfly.b32	%r824, %r823, 2, 31, -1;
	mov.b32 	%f2776, %r824;
	mov.b32 	%r825, %f2769;
	mov.b32 	%r826, %f2773;
	mov.b32 	%r827, %f2775;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f2777, %f2767, %f2776;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r828, %f2777;
	shfl.sync.bfly.b32	%r829, %r828, 1, 31, -1;
	shfl.sync.bfly.b32	%r830, %r825, 2, 31, -1;
	mov.b32 	%f2778, %r830;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f2779, %f2769, %f2778;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r831, %f2779;
	shfl.sync.bfly.b32	%r832, %r831, 1, 31, -1;
	shfl.sync.bfly.b32	%r833, %r826, 2, 31, -1;
	mov.b32 	%f2780, %r833;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f2781, %f2773, %f2780;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r834, %f2781;
	shfl.sync.bfly.b32	%r835, %r834, 1, 31, -1;
	shfl.sync.bfly.b32	%r836, %r827, 2, 31, -1;
	mov.b32 	%f2782, %r836;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f2783, %f2775, %f2782;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r837, %f2783;
	shfl.sync.bfly.b32	%r838, %r837, 1, 31, -1;
	mov.b32 	%f2784, %r838;
	mov.b32 	%f2785, %r835;
	mov.b32 	%f2786, %r832;
	mov.b32 	%f2787, %r829;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f2788, %f2777, %f2787;
	max.f32 	%f2789, %f2779, %f2786;
	max.f32 	%f2790, %f2781, %f2785;
	max.f32 	%f2791, %f2783, %f2784;
$L__tmp2:
	.loc	1 190 31                        // prefix_prefill.py:190:31
	max.f32 	%f276, %f10211, %f2791;
	max.f32 	%f275, %f10210, %f2790;
	max.f32 	%f274, %f10209, %f2789;
	max.f32 	%f273, %f10208, %f2788;
	.loc	1 191 24                        // prefix_prefill.py:191:24
	neg.f32 	%f2792, %f273;
	fma.rn.f32 	%f2793, %f2401, %f2732, %f2792;
	fma.rn.f32 	%f2794, %f2401, %f2733, %f2792;
	neg.f32 	%f2795, %f274;
	fma.rn.f32 	%f2796, %f2401, %f2734, %f2795;
	fma.rn.f32 	%f2797, %f2401, %f2735, %f2795;
	fma.rn.f32 	%f2798, %f2401, %f2736, %f2792;
	fma.rn.f32 	%f2799, %f2401, %f2737, %f2792;
	fma.rn.f32 	%f2800, %f2401, %f2738, %f2795;
	fma.rn.f32 	%f2801, %f2401, %f2739, %f2795;
	neg.f32 	%f2802, %f275;
	fma.rn.f32 	%f2803, %f2401, %f2740, %f2802;
	fma.rn.f32 	%f2804, %f2401, %f2741, %f2802;
	neg.f32 	%f2805, %f276;
	fma.rn.f32 	%f2806, %f2401, %f2742, %f2805;
	fma.rn.f32 	%f2807, %f2401, %f2743, %f2805;
	fma.rn.f32 	%f2808, %f2401, %f2744, %f2802;
	fma.rn.f32 	%f2809, %f2401, %f2745, %f2802;
	fma.rn.f32 	%f2810, %f2401, %f2746, %f2805;
	fma.rn.f32 	%f2811, %f2401, %f2747, %f2805;
	.loc	1 191 19                        // prefix_prefill.py:191:19
	mul.f32 	%f2693, %f2793, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2692, %f2693;
	// end inline asm
	mul.f32 	%f2695, %f2794, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2694, %f2695;
	// end inline asm
	mul.f32 	%f2697, %f2796, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2696, %f2697;
	// end inline asm
	mul.f32 	%f2699, %f2797, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2698, %f2699;
	// end inline asm
	mul.f32 	%f2701, %f2798, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2700, %f2701;
	// end inline asm
	mul.f32 	%f2703, %f2799, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2702, %f2703;
	// end inline asm
	mul.f32 	%f2705, %f2800, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2704, %f2705;
	// end inline asm
	mul.f32 	%f2707, %f2801, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2706, %f2707;
	// end inline asm
	mul.f32 	%f2709, %f2803, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2708, %f2709;
	// end inline asm
	mul.f32 	%f2711, %f2804, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2710, %f2711;
	// end inline asm
	mul.f32 	%f2713, %f2806, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2712, %f2713;
	// end inline asm
	mul.f32 	%f2715, %f2807, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2714, %f2715;
	// end inline asm
	mul.f32 	%f2717, %f2808, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2716, %f2717;
	// end inline asm
	mul.f32 	%f2719, %f2809, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2718, %f2719;
	// end inline asm
	mul.f32 	%f2721, %f2810, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2720, %f2721;
	// end inline asm
	mul.f32 	%f2723, %f2811, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2722, %f2723;
	// end inline asm
$L__tmp3:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f2812, %f2692, %f2694;
	add.f32 	%f2813, %f2696, %f2698;
	add.f32 	%f2814, %f2812, %f2700;
	add.f32 	%f2815, %f2814, %f2702;
	add.f32 	%f2816, %f2813, %f2704;
	add.f32 	%f2817, %f2816, %f2706;
	add.f32 	%f2818, %f2708, %f2710;
	add.f32 	%f2819, %f2712, %f2714;
	add.f32 	%f2820, %f2818, %f2716;
	add.f32 	%f2821, %f2820, %f2718;
	add.f32 	%f2822, %f2819, %f2720;
	add.f32 	%f2823, %f2822, %f2722;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r839, %f2815;
	shfl.sync.bfly.b32	%r840, %r839, 2, 31, -1;
	mov.b32 	%f2824, %r840;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f2825, %f2815, %f2824;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r841, %f2825;
	shfl.sync.bfly.b32	%r842, %r841, 1, 31, -1;
	mov.b32 	%r843, %f2817;
	shfl.sync.bfly.b32	%r844, %r843, 2, 31, -1;
	mov.b32 	%f2826, %r844;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f2827, %f2817, %f2826;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r845, %f2827;
	shfl.sync.bfly.b32	%r846, %r845, 1, 31, -1;
	mov.b32 	%r847, %f2821;
	shfl.sync.bfly.b32	%r848, %r847, 2, 31, -1;
	mov.b32 	%f2828, %r848;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f2829, %f2821, %f2828;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r849, %f2829;
	shfl.sync.bfly.b32	%r850, %r849, 1, 31, -1;
	mov.b32 	%r851, %f2823;
	shfl.sync.bfly.b32	%r852, %r851, 2, 31, -1;
	mov.b32 	%f2830, %r852;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f2831, %f2823, %f2830;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r853, %f2831;
	shfl.sync.bfly.b32	%r854, %r853, 1, 31, -1;
$L__tmp4:
	.loc	1 193 29                        // prefix_prefill.py:193:29
	sub.f32 	%f2836, %f10211, %f276;
	sub.f32 	%f2837, %f10210, %f275;
	sub.f32 	%f2838, %f10209, %f274;
	sub.f32 	%f2839, %f10208, %f273;
	.loc	1 193 23                        // prefix_prefill.py:193:23
	mul.f32 	%f2725, %f2839, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2724, %f2725;
	// end inline asm
	mul.f32 	%f2727, %f2838, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2726, %f2727;
	// end inline asm
	mul.f32 	%f2729, %f2837, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2728, %f2729;
	// end inline asm
	mul.f32 	%f2731, %f2836, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f2730, %f2731;
	// end inline asm
	.loc	1 194 20                        // prefix_prefill.py:194:20
	bar.sync 	0;
	mov.b32 	%r785, %f2724;
	// begin inline asm
	@%p744 st.shared.b32 [ %r87 + 0 ], %r785;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r87 + 0 ], %r785;
	// end inline asm
	mov.b32 	%r789, %f2726;
	// begin inline asm
	@%p744 st.shared.b32 [ %r88 + 0 ], %r789;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r88 + 0 ], %r789;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r87 + 0 ], %r785;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r87 + 0 ], %r785;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r88 + 0 ], %r789;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r88 + 0 ], %r789;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f2840, [%r87];
	ld.shared.f32 	%f2841, [%r88];
	bar.sync 	0;
	mov.b32 	%r801, %f2728;
	// begin inline asm
	@%p744 st.shared.b32 [ %r87 + 0 ], %r801;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r87 + 0 ], %r801;
	// end inline asm
	mov.b32 	%r805, %f2730;
	// begin inline asm
	@%p744 st.shared.b32 [ %r88 + 0 ], %r805;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r88 + 0 ], %r805;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r87 + 0 ], %r801;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r87 + 0 ], %r801;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r88 + 0 ], %r805;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r88 + 0 ], %r805;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f2842, [%r87];
	ld.shared.f32 	%f2843, [%r88];
	mul.f32 	%f3100, %f10216, %f2840;
	mul.f32 	%f3101, %f10217, %f2840;
	mul.f32 	%f3102, %f10218, %f2841;
	mul.f32 	%f3103, %f10219, %f2841;
	mul.f32 	%f3104, %f10220, %f2840;
	mul.f32 	%f3105, %f10221, %f2840;
	mul.f32 	%f3106, %f10222, %f2841;
	mul.f32 	%f3107, %f10223, %f2841;
	mul.f32 	%f3108, %f10224, %f2840;
	mul.f32 	%f3109, %f10225, %f2840;
	mul.f32 	%f3110, %f10226, %f2841;
	mul.f32 	%f3111, %f10227, %f2841;
	mul.f32 	%f3112, %f10228, %f2840;
	mul.f32 	%f3113, %f10229, %f2840;
	mul.f32 	%f3114, %f10230, %f2841;
	mul.f32 	%f3115, %f10231, %f2841;
	mul.f32 	%f3116, %f10232, %f2840;
	mul.f32 	%f3117, %f10233, %f2840;
	mul.f32 	%f3118, %f10234, %f2841;
	mul.f32 	%f3119, %f10235, %f2841;
	mul.f32 	%f3120, %f10236, %f2840;
	mul.f32 	%f3121, %f10237, %f2840;
	mul.f32 	%f3122, %f10238, %f2841;
	mul.f32 	%f3123, %f10239, %f2841;
	mul.f32 	%f3124, %f10240, %f2840;
	mul.f32 	%f3125, %f10241, %f2840;
	mul.f32 	%f3126, %f10242, %f2841;
	mul.f32 	%f3127, %f10243, %f2841;
	mul.f32 	%f3128, %f10244, %f2840;
	mul.f32 	%f3129, %f10245, %f2840;
	mul.f32 	%f3130, %f10246, %f2841;
	mul.f32 	%f3131, %f10247, %f2841;
	mul.f32 	%f3132, %f10248, %f2840;
	mul.f32 	%f3133, %f10249, %f2840;
	mul.f32 	%f3134, %f10250, %f2841;
	mul.f32 	%f3135, %f10251, %f2841;
	mul.f32 	%f3136, %f10252, %f2840;
	mul.f32 	%f3137, %f10253, %f2840;
	mul.f32 	%f3138, %f10254, %f2841;
	mul.f32 	%f3139, %f10255, %f2841;
	mul.f32 	%f3140, %f10256, %f2840;
	mul.f32 	%f3141, %f10257, %f2840;
	mul.f32 	%f3142, %f10258, %f2841;
	mul.f32 	%f3143, %f10259, %f2841;
	mul.f32 	%f3144, %f10260, %f2840;
	mul.f32 	%f3145, %f10261, %f2840;
	mul.f32 	%f3146, %f10262, %f2841;
	mul.f32 	%f3147, %f10263, %f2841;
	mul.f32 	%f3148, %f10264, %f2840;
	mul.f32 	%f3149, %f10265, %f2840;
	mul.f32 	%f3150, %f10266, %f2841;
	mul.f32 	%f3151, %f10267, %f2841;
	mul.f32 	%f3152, %f10268, %f2840;
	mul.f32 	%f3153, %f10269, %f2840;
	mul.f32 	%f3154, %f10270, %f2841;
	mul.f32 	%f3155, %f10271, %f2841;
	mul.f32 	%f3156, %f10272, %f2840;
	mul.f32 	%f3157, %f10273, %f2840;
	mul.f32 	%f3158, %f10274, %f2841;
	mul.f32 	%f3159, %f10275, %f2841;
	mul.f32 	%f3160, %f10276, %f2840;
	mul.f32 	%f3161, %f10277, %f2840;
	mul.f32 	%f3162, %f10278, %f2841;
	mul.f32 	%f3163, %f10279, %f2841;
	mul.f32 	%f3164, %f10280, %f2842;
	mul.f32 	%f3165, %f10281, %f2842;
	mul.f32 	%f3166, %f10282, %f2843;
	mul.f32 	%f3167, %f10283, %f2843;
	mul.f32 	%f3168, %f10284, %f2842;
	mul.f32 	%f3169, %f10285, %f2842;
	mul.f32 	%f3170, %f10286, %f2843;
	mul.f32 	%f3171, %f10287, %f2843;
	mul.f32 	%f3172, %f10288, %f2842;
	mul.f32 	%f3173, %f10289, %f2842;
	mul.f32 	%f3174, %f10290, %f2843;
	mul.f32 	%f3175, %f10291, %f2843;
	mul.f32 	%f3176, %f10292, %f2842;
	mul.f32 	%f3177, %f10293, %f2842;
	mul.f32 	%f3178, %f10294, %f2843;
	mul.f32 	%f3179, %f10295, %f2843;
	mul.f32 	%f3180, %f10296, %f2842;
	mul.f32 	%f3181, %f10297, %f2842;
	mul.f32 	%f3182, %f10298, %f2843;
	mul.f32 	%f3183, %f10299, %f2843;
	mul.f32 	%f3184, %f10300, %f2842;
	mul.f32 	%f3185, %f10301, %f2842;
	mul.f32 	%f3186, %f10302, %f2843;
	mul.f32 	%f3187, %f10303, %f2843;
	mul.f32 	%f3188, %f10304, %f2842;
	mul.f32 	%f3189, %f10305, %f2842;
	mul.f32 	%f3190, %f10306, %f2843;
	mul.f32 	%f3191, %f10307, %f2843;
	mul.f32 	%f3192, %f10308, %f2842;
	mul.f32 	%f3193, %f10309, %f2842;
	mul.f32 	%f3194, %f10310, %f2843;
	mul.f32 	%f3195, %f10311, %f2843;
	mul.f32 	%f3196, %f10312, %f2842;
	mul.f32 	%f3197, %f10313, %f2842;
	mul.f32 	%f3198, %f10314, %f2843;
	mul.f32 	%f3199, %f10315, %f2843;
	mul.f32 	%f3200, %f10316, %f2842;
	mul.f32 	%f3201, %f10317, %f2842;
	mul.f32 	%f3202, %f10318, %f2843;
	mul.f32 	%f3203, %f10319, %f2843;
	mul.f32 	%f3204, %f10320, %f2842;
	mul.f32 	%f3205, %f10321, %f2842;
	mul.f32 	%f3206, %f10322, %f2843;
	mul.f32 	%f3207, %f10323, %f2843;
	mul.f32 	%f3208, %f10324, %f2842;
	mul.f32 	%f3209, %f10325, %f2842;
	mul.f32 	%f3210, %f10326, %f2843;
	mul.f32 	%f3211, %f10327, %f2843;
	mul.f32 	%f3212, %f10328, %f2842;
	mul.f32 	%f3213, %f10329, %f2842;
	mul.f32 	%f3214, %f10330, %f2843;
	mul.f32 	%f3215, %f10331, %f2843;
	mul.f32 	%f3216, %f10332, %f2842;
	mul.f32 	%f3217, %f10333, %f2842;
	mul.f32 	%f3218, %f10334, %f2843;
	mul.f32 	%f3219, %f10335, %f2843;
	mul.f32 	%f3220, %f10336, %f2842;
	mul.f32 	%f3221, %f10337, %f2842;
	mul.f32 	%f3222, %f10338, %f2843;
	mul.f32 	%f3223, %f10339, %f2843;
	mul.f32 	%f3224, %f10340, %f2842;
	mul.f32 	%f3225, %f10341, %f2842;
	mul.f32 	%f3226, %f10342, %f2843;
	mul.f32 	%f3227, %f10343, %f2843;
	add.s32 	%r2898, %r20, %r2900;
	mul.wide.s32 	%rd850, %r108, 2;
	mul.wide.s32 	%rd851, %r116, 2;
	.loc	1 197 11                        // prefix_prefill.py:197:11
	@%p86 bra 	$L__BB0_11;
// %bb.10:                              //   in Loop: Header=BB0_2 Depth=1
	.loc	1 0 0                           // prefix_prefill.py:0:0
	add.s32 	%r109, %r756, %r74;
	add.s32 	%r110, %r756, %r75;
	add.s32 	%r111, %r756, %r76;
	add.s32 	%r112, %r756, %r77;
	add.s32 	%r113, %r756, %r78;
	add.s32 	%r114, %r756, %r79;
	add.s32 	%r115, %r756, %r80;
	add.s32 	%r117, %r757, %r74;
	add.s32 	%r118, %r757, %r75;
	add.s32 	%r119, %r757, %r76;
	add.s32 	%r120, %r757, %r77;
	add.s32 	%r121, %r757, %r78;
	add.s32 	%r122, %r757, %r79;
	add.s32 	%r123, %r757, %r80;
	.loc	1 202 28                        // prefix_prefill.py:202:28
	add.s32 	%r864, %r2898, 1;
	add.s32 	%r865, %r2898, 2;
	add.s32 	%r866, %r2898, 3;
	add.s32 	%r867, %r2898, 4;
	add.s32 	%r868, %r2898, 5;
	add.s32 	%r869, %r2898, 6;
	.loc	1 202 50                        // prefix_prefill.py:202:50
	add.s32 	%r870, %r2898, 7;
	setp.lt.s32 	%p136, %r2898, %r5;
	setp.lt.s32 	%p138, %r864, %r5;
	setp.lt.s32 	%p140, %r865, %r5;
	setp.lt.s32 	%p142, %r866, %r5;
	setp.lt.s32 	%p144, %r867, %r5;
	setp.lt.s32 	%p146, %r868, %r5;
	setp.lt.s32 	%p148, %r869, %r5;
	setp.lt.s32 	%p150, %r870, %r5;
	.loc	1 200 26                        // prefix_prefill.py:200:26
	add.s64 	%rd280, %rd188, %rd850;
	mul.wide.s32 	%rd297, %r109, 2;
	add.s64 	%rd281, %rd188, %rd297;
	mul.wide.s32 	%rd298, %r110, 2;
	add.s64 	%rd282, %rd188, %rd298;
	mul.wide.s32 	%rd299, %r111, 2;
	add.s64 	%rd283, %rd188, %rd299;
	mul.wide.s32 	%rd300, %r112, 2;
	add.s64 	%rd284, %rd188, %rd300;
	mul.wide.s32 	%rd301, %r113, 2;
	add.s64 	%rd285, %rd188, %rd301;
	mul.wide.s32 	%rd302, %r114, 2;
	add.s64 	%rd286, %rd188, %rd302;
	mul.wide.s32 	%rd303, %r115, 2;
	add.s64 	%rd287, %rd188, %rd303;
	add.s64 	%rd288, %rd188, %rd851;
	mul.wide.s32 	%rd305, %r117, 2;
	add.s64 	%rd289, %rd188, %rd305;
	mul.wide.s32 	%rd306, %r118, 2;
	add.s64 	%rd290, %rd188, %rd306;
	mul.wide.s32 	%rd307, %r119, 2;
	add.s64 	%rd291, %rd188, %rd307;
	mul.wide.s32 	%rd308, %r120, 2;
	add.s64 	%rd292, %rd188, %rd308;
	mul.wide.s32 	%rd309, %r121, 2;
	add.s64 	%rd293, %rd188, %rd309;
	mul.wide.s32 	%rd310, %r122, 2;
	add.s64 	%rd294, %rd188, %rd310;
	mul.wide.s32 	%rd311, %r123, 2;
	add.s64 	%rd295, %rd188, %rd311;
	.loc	1 200 16                        // prefix_prefill.py:200:16
	// begin inline asm
	mov.u16 %rs1, 0x0;
	@%p136 ld.global.b16 { %rs1 }, [ %rd280 + 0 ];
	@!%p136 mov.u16 %rs1, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs3, 0x0;
	@%p138 ld.global.b16 { %rs3 }, [ %rd281 + 0 ];
	@!%p138 mov.u16 %rs3, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs5, 0x0;
	@%p140 ld.global.b16 { %rs5 }, [ %rd282 + 0 ];
	@!%p140 mov.u16 %rs5, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs7, 0x0;
	@%p142 ld.global.b16 { %rs7 }, [ %rd283 + 0 ];
	@!%p142 mov.u16 %rs7, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs9, 0x0;
	@%p144 ld.global.b16 { %rs9 }, [ %rd284 + 0 ];
	@!%p144 mov.u16 %rs9, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs11, 0x0;
	@%p146 ld.global.b16 { %rs11 }, [ %rd285 + 0 ];
	@!%p146 mov.u16 %rs11, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs13, 0x0;
	@%p148 ld.global.b16 { %rs13 }, [ %rd286 + 0 ];
	@!%p148 mov.u16 %rs13, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs15, 0x0;
	@%p150 ld.global.b16 { %rs15 }, [ %rd287 + 0 ];
	@!%p150 mov.u16 %rs15, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs17, 0x0;
	@%p136 ld.global.b16 { %rs17 }, [ %rd288 + 0 ];
	@!%p136 mov.u16 %rs17, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs19, 0x0;
	@%p138 ld.global.b16 { %rs19 }, [ %rd289 + 0 ];
	@!%p138 mov.u16 %rs19, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs21, 0x0;
	@%p140 ld.global.b16 { %rs21 }, [ %rd290 + 0 ];
	@!%p140 mov.u16 %rs21, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs23, 0x0;
	@%p142 ld.global.b16 { %rs23 }, [ %rd291 + 0 ];
	@!%p142 mov.u16 %rs23, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs25, 0x0;
	@%p144 ld.global.b16 { %rs25 }, [ %rd292 + 0 ];
	@!%p144 mov.u16 %rs25, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs27, 0x0;
	@%p146 ld.global.b16 { %rs27 }, [ %rd293 + 0 ];
	@!%p146 mov.u16 %rs27, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs29, 0x0;
	@%p148 ld.global.b16 { %rs29 }, [ %rd294 + 0 ];
	@!%p148 mov.u16 %rs29, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs31, 0x0;
	@%p150 ld.global.b16 { %rs31 }, [ %rd295 + 0 ];
	@!%p150 mov.u16 %rs31, %rs258;
	// end inline asm
	mov.b32 	%r2909, {%rs1, %rs3};
	mov.b32 	%r2910, {%rs5, %rs7};
	mov.b32 	%r2911, {%rs9, %rs11};
	mov.b32 	%r2912, {%rs13, %rs15};
	mov.b32 	%r2913, {%rs17, %rs19};
	mov.b32 	%r2914, {%rs21, %rs23};
	mov.b32 	%r2915, {%rs25, %rs27};
	mov.b32 	%r2916, {%rs29, %rs31};
	.loc	1 197 11                        // prefix_prefill.py:197:11
	bra.uni 	$L__BB0_12;
$L__BB0_11:                             //   in Loop: Header=BB0_2 Depth=1
	.loc	1 205 39                        // prefix_prefill.py:205:39
	add.s64 	%rd276, %rd188, %rd850;
	add.s64 	%rd277, %rd188, %rd851;
	.loc	1 205 29                        // prefix_prefill.py:205:29
	// begin inline asm
	mov.u32 %r2909, 0x0;
	mov.u32 %r2910, 0x0;
	mov.u32 %r2911, 0x0;
	mov.u32 %r2912, 0x0;
	@%p744 ld.global.v4.b32 { %r2909, %r2910, %r2911, %r2912 }, [ %rd276 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r2913, 0x0;
	mov.u32 %r2914, 0x0;
	mov.u32 %r2915, 0x0;
	mov.u32 %r2916, 0x0;
	@%p744 ld.global.v4.b32 { %r2913, %r2914, %r2915, %r2916 }, [ %rd277 + 0 ];
	// end inline asm
$L__BB0_12:                             //   in Loop: Header=BB0_2 Depth=1
	.loc	1 197 11                        // prefix_prefill.py:197:11
	bar.sync 	0;
	st.shared.v4.b32 	[%r89], {%r2909, %r2910, %r2911, %r2912};
	st.shared.v4.b32 	[%r90], {%r2913, %r2914, %r2915, %r2916};
	.loc	1 211 17                        // prefix_prefill.py:211:17
	mov.b32 	%r879, %f2692;
	// begin inline asm
	cvt.rn.bf16.f32 %rs33, %r879;
	// end inline asm
	mov.b32 	%r880, %f2694;
	// begin inline asm
	cvt.rn.bf16.f32 %rs34, %r880;
	// end inline asm
	mov.b32 	%r881, %f2696;
	// begin inline asm
	cvt.rn.bf16.f32 %rs35, %r881;
	// end inline asm
	mov.b32 	%r882, %f2698;
	// begin inline asm
	cvt.rn.bf16.f32 %rs36, %r882;
	// end inline asm
	mov.b32 	%r883, %f2700;
	// begin inline asm
	cvt.rn.bf16.f32 %rs37, %r883;
	// end inline asm
	mov.b32 	%r884, %f2702;
	// begin inline asm
	cvt.rn.bf16.f32 %rs38, %r884;
	// end inline asm
	mov.b32 	%r885, %f2704;
	// begin inline asm
	cvt.rn.bf16.f32 %rs39, %r885;
	// end inline asm
	mov.b32 	%r886, %f2706;
	// begin inline asm
	cvt.rn.bf16.f32 %rs40, %r886;
	// end inline asm
	mov.b32 	%r887, %f2708;
	// begin inline asm
	cvt.rn.bf16.f32 %rs41, %r887;
	// end inline asm
	mov.b32 	%r888, %f2710;
	// begin inline asm
	cvt.rn.bf16.f32 %rs42, %r888;
	// end inline asm
	mov.b32 	%r889, %f2712;
	// begin inline asm
	cvt.rn.bf16.f32 %rs43, %r889;
	// end inline asm
	mov.b32 	%r890, %f2714;
	// begin inline asm
	cvt.rn.bf16.f32 %rs44, %r890;
	// end inline asm
	mov.b32 	%r891, %f2716;
	// begin inline asm
	cvt.rn.bf16.f32 %rs45, %r891;
	// end inline asm
	mov.b32 	%r892, %f2718;
	// begin inline asm
	cvt.rn.bf16.f32 %rs46, %r892;
	// end inline asm
	mov.b32 	%r893, %f2720;
	// begin inline asm
	cvt.rn.bf16.f32 %rs47, %r893;
	// end inline asm
	mov.b32 	%r894, %f2722;
	// begin inline asm
	cvt.rn.bf16.f32 %rs48, %r894;
	// end inline asm
	.loc	1 213 24                        // prefix_prefill.py:213:24
	// begin inline asm
	fence.proxy.async.shared::cta;
	// end inline asm
	bar.sync 	0;
	mov.b32 	%r904, {%rs33, %rs34};
	mov.b32 	%r905, {%rs35, %rs36};
	mov.b32 	%r906, {%rs37, %rs38};
	mov.b32 	%r907, {%rs39, %rs40};
	mov.b32 	%r908, {%rs41, %rs42};
	mov.b32 	%r909, {%rs43, %rs44};
	mov.b32 	%r910, {%rs45, %rs46};
	mov.b32 	%r911, {%rs47, %rs48};
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.bf16.bf16 {%f3100,%f3101,%f3102,%f3103,%f3104,%f3105,%f3106,%f3107,%f3108,%f3109,%f3110,%f3111,%f3112,%f3113,%f3114,%f3115,%f3116,%f3117,%f3118,%f3119,%f3120,%f3121,%f3122,%f3123,%f3124,%f3125,%f3126,%f3127,%f3128,%f3129,%f3130,%f3131,%f3132,%f3133,%f3134,%f3135,%f3136,%f3137,%f3138,%f3139,%f3140,%f3141,%f3142,%f3143,%f3144,%f3145,%f3146,%f3147,%f3148,%f3149,%f3150,%f3151,%f3152,%f3153,%f3154,%f3155,%f3156,%f3157,%f3158,%f3159,%f3160,%f3161,%f3162,%f3163}, {%r904,%r905,%r906,%r907}, %rd26, %p744, 1, 1, 0;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.bf16.bf16 {%f3164,%f3165,%f3166,%f3167,%f3168,%f3169,%f3170,%f3171,%f3172,%f3173,%f3174,%f3175,%f3176,%f3177,%f3178,%f3179,%f3180,%f3181,%f3182,%f3183,%f3184,%f3185,%f3186,%f3187,%f3188,%f3189,%f3190,%f3191,%f3192,%f3193,%f3194,%f3195,%f3196,%f3197,%f3198,%f3199,%f3200,%f3201,%f3202,%f3203,%f3204,%f3205,%f3206,%f3207,%f3208,%f3209,%f3210,%f3211,%f3212,%f3213,%f3214,%f3215,%f3216,%f3217,%f3218,%f3219,%f3220,%f3221,%f3222,%f3223,%f3224,%f3225,%f3226,%f3227}, {%r908,%r909,%r910,%r911}, %rd26, %p744, 1, 1, 0;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	// begin inline asm
	// wait for regs: %f3100,%f3101,%f3102,%f3103,%f3104,%f3105,%f3106,%f3107,%f3108,%f3109,%f3110,%f3111,%f3112,%f3113,%f3114,%f3115,%f3116,%f3117,%f3118,%f3119,%f3120,%f3121,%f3122,%f3123,%f3124,%f3125,%f3126,%f3127,%f3128,%f3129,%f3130,%f3131,%f3132,%f3133,%f3134,%f3135,%f3136,%f3137,%f3138,%f3139,%f3140,%f3141,%f3142,%f3143,%f3144,%f3145,%f3146,%f3147,%f3148,%f3149,%f3150,%f3151,%f3152,%f3153,%f3154,%f3155,%f3156,%f3157,%f3158,%f3159,%f3160,%f3161,%f3162,%f3163,%f3164,%f3165,%f3166,%f3167,%f3168,%f3169,%f3170,%f3171,%f3172,%f3173,%f3174,%f3175,%f3176,%f3177,%f3178,%f3179,%f3180,%f3181,%f3182,%f3183,%f3184,%f3185,%f3186,%f3187,%f3188,%f3189,%f3190,%f3191,%f3192,%f3193,%f3194,%f3195,%f3196,%f3197,%f3198,%f3199,%f3200,%f3201,%f3202,%f3203,%f3204,%f3205,%f3206,%f3207,%f3208,%f3209,%f3210,%f3211,%f3212,%f3213,%f3214,%f3215,%f3216,%f3217,%f3218,%f3219,%f3220,%f3221,%f3222,%f3223,%f3224,%f3225,%f3226,%f3227
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	1 138 21                        // prefix_prefill.py:138:21
	add.s64 	%rd314, %rd854, 4;
	// begin inline asm
	mov.u32 %r903, 0x0;
	@%p744 ld.global.b32 { %r903 }, [ %rd314 + 0 ];
	// end inline asm
	.loc	1 142 26                        // prefix_prefill.py:142:26
	mul.lo.s32 	%r912, %r903, %r486;
	.loc	1 144 24                        // prefix_prefill.py:144:24
	add.s32 	%r173, %r102, 16;
	add.s32 	%r174, %r102, 17;
	add.s32 	%r175, %r102, 24;
	add.s32 	%r176, %r102, 25;
	add.s32 	%r177, %r912, %r91;
	add.s32 	%r178, %r912, %r92;
	.loc	1 148 31                        // prefix_prefill.py:148:31
	mul.lo.s32 	%r913, %r903, %r487;
	add.s32 	%r914, %r913, %r82;
	add.s32 	%r915, %r913, %r83;
	.loc	1 151 17                        // prefix_prefill.py:151:17
	add.s32 	%r179, %r914, %r20;
	add.s32 	%r187, %r915, %r20;
	.loc	1 153 34                        // prefix_prefill.py:153:34
	add.s32 	%r195, %r2900, 32;
	setp.le.s32 	%p171, %r195, %r5;
	mul.wide.s32 	%rd848, %r177, 2;
	mul.wide.s32 	%rd849, %r178, 2;
	.loc	1 153 11                        // prefix_prefill.py:153:11
	@%p171 bra 	$L__BB0_14;
// %bb.13:                              //   in Loop: Header=BB0_2 Depth=1
	.loc	1 144 24                        // prefix_prefill.py:144:24
	add.s32 	%r941, %r2899, 24;
	.loc	1 158 50                        // prefix_prefill.py:158:50
	add.s32 	%r942, %r2899, 16;
	setp.lt.s32 	%p174, %r942, %r5;
	setp.lt.s32 	%p179, %r941, %r5;
	.loc	1 156 26                        // prefix_prefill.py:156:26
	add.s64 	%rd319, %rd187, %rd848;
	add.s64 	%rd320, %rd187, %rd849;
	mov.b32 	%r928, 0;
	.loc	1 156 16                        // prefix_prefill.py:156:16
	// begin inline asm
	mov.u32 %r2923, 0x0;
	mov.u32 %r2924, 0x0;
	mov.u32 %r2921, 0x0;
	mov.u32 %r2922, 0x0;
	@%p174 ld.global.v4.b32 { %r2923, %r2924, %r2921, %r2922 }, [ %rd319 + 0 ];
	@!%p174 mov.u32 %r2923, %r928;
	@!%p174 mov.u32 %r2924, %r928;
	@!%p174 mov.u32 %r2921, %r928;
	@!%p174 mov.u32 %r2922, %r928;
	// end inline asm
	// begin inline asm
	mov.u32 %r2917, 0x0;
	mov.u32 %r2918, 0x0;
	mov.u32 %r2919, 0x0;
	mov.u32 %r2920, 0x0;
	@%p179 ld.global.v4.b32 { %r2917, %r2918, %r2919, %r2920 }, [ %rd320 + 0 ];
	@!%p179 mov.u32 %r2917, %r928;
	@!%p179 mov.u32 %r2918, %r928;
	@!%p179 mov.u32 %r2919, %r928;
	@!%p179 mov.u32 %r2920, %r928;
	// end inline asm
	.loc	1 153 11                        // prefix_prefill.py:153:11
	bra.uni 	$L__BB0_15;
$L__BB0_14:                             //   in Loop: Header=BB0_2 Depth=1
	.loc	1 161 39                        // prefix_prefill.py:161:39
	add.s64 	%rd315, %rd187, %rd848;
	add.s64 	%rd316, %rd187, %rd849;
	.loc	1 161 29                        // prefix_prefill.py:161:29
	// begin inline asm
	mov.u32 %r2923, 0x0;
	mov.u32 %r2924, 0x0;
	mov.u32 %r2921, 0x0;
	mov.u32 %r2922, 0x0;
	@%p744 ld.global.v4.b32 { %r2923, %r2924, %r2921, %r2922 }, [ %rd315 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r2917, 0x0;
	mov.u32 %r2918, 0x0;
	mov.u32 %r2919, 0x0;
	mov.u32 %r2920, 0x0;
	@%p744 ld.global.v4.b32 { %r2917, %r2918, %r2919, %r2920 }, [ %rd316 + 0 ];
	// end inline asm
$L__BB0_15:                             //   in Loop: Header=BB0_2 Depth=1
	.loc	1 0 0                           // prefix_prefill.py:0:0
	mov.b32 	%f2832, %r854;
	mov.b32 	%f2833, %r850;
	mov.b32 	%f2834, %r846;
	mov.b32 	%f2835, %r842;
	.loc	1 153 11                        // prefix_prefill.py:153:11
	bar.sync 	0;
	st.shared.v4.b32 	[%r84], {%r2923, %r2924, %r2921, %r2922};
	st.shared.v4.b32 	[%r84+1024], {%r2917, %r2918, %r2919, %r2920};
	.loc	1 169 23                        // prefix_prefill.py:169:23
	// begin inline asm
	fence.proxy.async.shared::cta;
	// end inline asm
	bar.sync 	0;
	shfl.sync.idx.b32	%r947, %r2889, 0, 31, -1;
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	shl.b32 	%r948, %r947, 7;
	and.b32  	%r949, %r948, 384;
	cvt.u64.u32 	%rd355, %r949;
	add.s64 	%rd323, %rd2, %rd355;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f3380,%f3381,%f3382,%f3383,%f3384,%f3385,%f3386,%f3387}, %rd323, %rd3, 0, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd325, %rd4, %rd355;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f3380,%f3381,%f3382,%f3383,%f3384,%f3385,%f3386,%f3387}, %rd325, %rd5, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd327, %rd6, %rd355;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f3380,%f3381,%f3382,%f3383,%f3384,%f3385,%f3386,%f3387}, %rd327, %rd7, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd329, %rd8, %rd355;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f3380,%f3381,%f3382,%f3383,%f3384,%f3385,%f3386,%f3387}, %rd329, %rd9, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd331, %rd10, %rd355;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f3380,%f3381,%f3382,%f3383,%f3384,%f3385,%f3386,%f3387}, %rd331, %rd11, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd333, %rd12, %rd355;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f3380,%f3381,%f3382,%f3383,%f3384,%f3385,%f3386,%f3387}, %rd333, %rd13, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd335, %rd14, %rd355;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f3380,%f3381,%f3382,%f3383,%f3384,%f3385,%f3386,%f3387}, %rd335, %rd15, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd337, %rd16, %rd355;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f3380,%f3381,%f3382,%f3383,%f3384,%f3385,%f3386,%f3387}, %rd337, %rd17, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd339, %rd18, %rd355;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f3500,%f3501,%f3502,%f3503,%f3504,%f3505,%f3506,%f3507}, %rd339, %rd3, 0, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd341, %rd19, %rd355;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f3500,%f3501,%f3502,%f3503,%f3504,%f3505,%f3506,%f3507}, %rd341, %rd5, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd343, %rd20, %rd355;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f3500,%f3501,%f3502,%f3503,%f3504,%f3505,%f3506,%f3507}, %rd343, %rd7, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd345, %rd21, %rd355;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f3500,%f3501,%f3502,%f3503,%f3504,%f3505,%f3506,%f3507}, %rd345, %rd9, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd347, %rd22, %rd355;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f3500,%f3501,%f3502,%f3503,%f3504,%f3505,%f3506,%f3507}, %rd347, %rd11, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd349, %rd23, %rd355;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f3500,%f3501,%f3502,%f3503,%f3504,%f3505,%f3506,%f3507}, %rd349, %rd13, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd351, %rd24, %rd355;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f3500,%f3501,%f3502,%f3503,%f3504,%f3505,%f3506,%f3507}, %rd351, %rd15, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd353, %rd25, %rd355;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f3500,%f3501,%f3502,%f3503,%f3504,%f3505,%f3506,%f3507}, %rd353, %rd17, %p744, 1, 1, 0, 0;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	// begin inline asm
	// wait for regs: %f3380,%f3381,%f3382,%f3383,%f3384,%f3385,%f3386,%f3387,%f3500,%f3501,%f3502,%f3503,%f3504,%f3505,%f3506,%f3507
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	1 170 55                        // prefix_prefill.py:170:55
	setp.lt.s32 	%p199, %r173, %r5;
	setp.lt.s32 	%p200, %r174, %r5;
	setp.lt.s32 	%p201, %r175, %r5;
	setp.lt.s32 	%p202, %r176, %r5;
	.loc	1 171 22                        // prefix_prefill.py:171:22
	selp.f32 	%f3668, %f3380, 0fFF800000, %p199;
	selp.f32 	%f3669, %f3381, 0fFF800000, %p200;
	selp.f32 	%f3670, %f3382, 0fFF800000, %p199;
	selp.f32 	%f3671, %f3383, 0fFF800000, %p200;
	selp.f32 	%f3672, %f3384, 0fFF800000, %p201;
	selp.f32 	%f3673, %f3385, 0fFF800000, %p202;
	selp.f32 	%f3674, %f3386, 0fFF800000, %p201;
	selp.f32 	%f3675, %f3387, 0fFF800000, %p202;
	selp.f32 	%f3676, %f3500, 0fFF800000, %p199;
	selp.f32 	%f3677, %f3501, 0fFF800000, %p200;
	selp.f32 	%f3678, %f3502, 0fFF800000, %p199;
	selp.f32 	%f3679, %f3503, 0fFF800000, %p200;
	selp.f32 	%f3680, %f3504, 0fFF800000, %p201;
	selp.f32 	%f3681, %f3505, 0fFF800000, %p202;
	selp.f32 	%f3682, %f3506, 0fFF800000, %p201;
	selp.f32 	%f3683, %f3507, 0fFF800000, %p202;
	.loc	1 172 14                        // prefix_prefill.py:172:14
	mul.f32 	%f3684, %f2401, %f3668;
	mul.f32 	%f3685, %f2401, %f3669;
	mul.f32 	%f3686, %f2401, %f3670;
	mul.f32 	%f3687, %f2401, %f3671;
	mul.f32 	%f3688, %f2401, %f3672;
	mul.f32 	%f3689, %f2401, %f3673;
	mul.f32 	%f3690, %f2401, %f3674;
	mul.f32 	%f3691, %f2401, %f3675;
	mul.f32 	%f3692, %f2401, %f3676;
	mul.f32 	%f3693, %f2401, %f3677;
	mul.f32 	%f3694, %f2401, %f3678;
	mul.f32 	%f3695, %f2401, %f3679;
	mul.f32 	%f3696, %f2401, %f3680;
	mul.f32 	%f3697, %f2401, %f3681;
	mul.f32 	%f3698, %f2401, %f3682;
	mul.f32 	%f3699, %f2401, %f3683;
$L__tmp5:
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f3700, %f3684, %f3685;
	max.f32 	%f3701, %f3686, %f3687;
	max.f32 	%f3702, %f3700, %f3688;
	max.f32 	%f3703, %f3702, %f3689;
	max.f32 	%f3704, %f3701, %f3690;
	max.f32 	%f3705, %f3704, %f3691;
	max.f32 	%f3706, %f3692, %f3693;
	max.f32 	%f3707, %f3694, %f3695;
	max.f32 	%f3708, %f3706, %f3696;
	max.f32 	%f3709, %f3708, %f3697;
	max.f32 	%f3710, %f3707, %f3698;
	max.f32 	%f3711, %f3710, %f3699;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r950, %f3703;
	shfl.sync.bfly.b32	%r951, %r950, 2, 31, -1;
	mov.b32 	%f3712, %r951;
	mov.b32 	%r952, %f3705;
	mov.b32 	%r953, %f3709;
	mov.b32 	%r954, %f3711;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f3713, %f3703, %f3712;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r955, %f3713;
	shfl.sync.bfly.b32	%r956, %r955, 1, 31, -1;
	shfl.sync.bfly.b32	%r957, %r952, 2, 31, -1;
	mov.b32 	%f3714, %r957;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f3715, %f3705, %f3714;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r958, %f3715;
	shfl.sync.bfly.b32	%r959, %r958, 1, 31, -1;
	shfl.sync.bfly.b32	%r960, %r953, 2, 31, -1;
	mov.b32 	%f3716, %r960;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f3717, %f3709, %f3716;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r961, %f3717;
	shfl.sync.bfly.b32	%r962, %r961, 1, 31, -1;
	shfl.sync.bfly.b32	%r963, %r954, 2, 31, -1;
	mov.b32 	%f3718, %r963;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f3719, %f3711, %f3718;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r964, %f3719;
	shfl.sync.bfly.b32	%r965, %r964, 1, 31, -1;
	mov.b32 	%f3720, %r965;
	mov.b32 	%f3721, %r962;
	mov.b32 	%f3722, %r959;
	mov.b32 	%f3723, %r956;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f3724, %f3713, %f3723;
	max.f32 	%f3725, %f3715, %f3722;
	max.f32 	%f3726, %f3717, %f3721;
	max.f32 	%f3727, %f3719, %f3720;
$L__tmp6:
	.loc	1 190 31                        // prefix_prefill.py:190:31
	max.f32 	%f568, %f276, %f3727;
	max.f32 	%f567, %f275, %f3726;
	max.f32 	%f566, %f274, %f3725;
	max.f32 	%f565, %f273, %f3724;
	.loc	1 191 24                        // prefix_prefill.py:191:24
	neg.f32 	%f3728, %f565;
	fma.rn.f32 	%f3729, %f2401, %f3668, %f3728;
	fma.rn.f32 	%f3730, %f2401, %f3669, %f3728;
	neg.f32 	%f3731, %f566;
	fma.rn.f32 	%f3732, %f2401, %f3670, %f3731;
	fma.rn.f32 	%f3733, %f2401, %f3671, %f3731;
	fma.rn.f32 	%f3734, %f2401, %f3672, %f3728;
	fma.rn.f32 	%f3735, %f2401, %f3673, %f3728;
	fma.rn.f32 	%f3736, %f2401, %f3674, %f3731;
	fma.rn.f32 	%f3737, %f2401, %f3675, %f3731;
	neg.f32 	%f3738, %f567;
	fma.rn.f32 	%f3739, %f2401, %f3676, %f3738;
	fma.rn.f32 	%f3740, %f2401, %f3677, %f3738;
	neg.f32 	%f3741, %f568;
	fma.rn.f32 	%f3742, %f2401, %f3678, %f3741;
	fma.rn.f32 	%f3743, %f2401, %f3679, %f3741;
	fma.rn.f32 	%f3744, %f2401, %f3680, %f3738;
	fma.rn.f32 	%f3745, %f2401, %f3681, %f3738;
	fma.rn.f32 	%f3746, %f2401, %f3682, %f3741;
	fma.rn.f32 	%f3747, %f2401, %f3683, %f3741;
	.loc	1 191 19                        // prefix_prefill.py:191:19
	mul.f32 	%f3629, %f3729, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3628, %f3629;
	// end inline asm
	mul.f32 	%f3631, %f3730, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3630, %f3631;
	// end inline asm
	mul.f32 	%f3633, %f3732, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3632, %f3633;
	// end inline asm
	mul.f32 	%f3635, %f3733, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3634, %f3635;
	// end inline asm
	mul.f32 	%f3637, %f3734, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3636, %f3637;
	// end inline asm
	mul.f32 	%f3639, %f3735, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3638, %f3639;
	// end inline asm
	mul.f32 	%f3641, %f3736, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3640, %f3641;
	// end inline asm
	mul.f32 	%f3643, %f3737, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3642, %f3643;
	// end inline asm
	mul.f32 	%f3645, %f3739, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3644, %f3645;
	// end inline asm
	mul.f32 	%f3647, %f3740, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3646, %f3647;
	// end inline asm
	mul.f32 	%f3649, %f3742, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3648, %f3649;
	// end inline asm
	mul.f32 	%f3651, %f3743, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3650, %f3651;
	// end inline asm
	mul.f32 	%f3653, %f3744, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3652, %f3653;
	// end inline asm
	mul.f32 	%f3655, %f3745, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3654, %f3655;
	// end inline asm
	mul.f32 	%f3657, %f3746, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3656, %f3657;
	// end inline asm
	mul.f32 	%f3659, %f3747, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3658, %f3659;
	// end inline asm
$L__tmp7:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f3748, %f3628, %f3630;
	add.f32 	%f3749, %f3632, %f3634;
	add.f32 	%f3750, %f3748, %f3636;
	add.f32 	%f3751, %f3750, %f3638;
	add.f32 	%f3752, %f3749, %f3640;
	add.f32 	%f3753, %f3752, %f3642;
	add.f32 	%f3754, %f3644, %f3646;
	add.f32 	%f3755, %f3648, %f3650;
	add.f32 	%f3756, %f3754, %f3652;
	add.f32 	%f3757, %f3756, %f3654;
	add.f32 	%f3758, %f3755, %f3656;
	add.f32 	%f3759, %f3758, %f3658;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r966, %f3751;
	shfl.sync.bfly.b32	%r967, %r966, 2, 31, -1;
	mov.b32 	%f3760, %r967;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f3761, %f3751, %f3760;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r968, %f3761;
	shfl.sync.bfly.b32	%r969, %r968, 1, 31, -1;
	mov.b32 	%r970, %f3753;
	shfl.sync.bfly.b32	%r971, %r970, 2, 31, -1;
	mov.b32 	%f3762, %r971;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f3763, %f3753, %f3762;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r972, %f3763;
	shfl.sync.bfly.b32	%r973, %r972, 1, 31, -1;
	mov.b32 	%r974, %f3757;
	shfl.sync.bfly.b32	%r975, %r974, 2, 31, -1;
	mov.b32 	%f3764, %r975;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f3765, %f3757, %f3764;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r976, %f3765;
	shfl.sync.bfly.b32	%r977, %r976, 1, 31, -1;
	mov.b32 	%r978, %f3759;
	shfl.sync.bfly.b32	%r979, %r978, 2, 31, -1;
	mov.b32 	%f3766, %r979;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f3767, %f3759, %f3766;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r980, %f3767;
	shfl.sync.bfly.b32	%r981, %r980, 1, 31, -1;
$L__tmp8:
	.loc	1 193 29                        // prefix_prefill.py:193:29
	sub.f32 	%f3772, %f273, %f565;
	sub.f32 	%f3773, %f274, %f566;
	sub.f32 	%f3774, %f275, %f567;
	sub.f32 	%f3775, %f276, %f568;
	.loc	1 193 23                        // prefix_prefill.py:193:23
	mul.f32 	%f3661, %f3772, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3660, %f3661;
	// end inline asm
	mul.f32 	%f3663, %f3773, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3662, %f3663;
	// end inline asm
	mul.f32 	%f3665, %f3774, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3664, %f3665;
	// end inline asm
	mul.f32 	%f3667, %f3775, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3666, %f3667;
	// end inline asm
	.loc	1 194 20                        // prefix_prefill.py:194:20
	mul.f32 	%f4032, %f3100, %f3660;
	mul.f32 	%f4033, %f3101, %f3660;
	mul.f32 	%f4034, %f3102, %f3662;
	mul.f32 	%f4035, %f3103, %f3662;
	mul.f32 	%f4036, %f3104, %f3660;
	mul.f32 	%f4037, %f3105, %f3660;
	mul.f32 	%f4038, %f3106, %f3662;
	mul.f32 	%f4039, %f3107, %f3662;
	mul.f32 	%f4040, %f3108, %f3660;
	mul.f32 	%f4041, %f3109, %f3660;
	mul.f32 	%f4042, %f3110, %f3662;
	mul.f32 	%f4043, %f3111, %f3662;
	mul.f32 	%f4044, %f3112, %f3660;
	mul.f32 	%f4045, %f3113, %f3660;
	mul.f32 	%f4046, %f3114, %f3662;
	mul.f32 	%f4047, %f3115, %f3662;
	mul.f32 	%f4048, %f3116, %f3660;
	mul.f32 	%f4049, %f3117, %f3660;
	mul.f32 	%f4050, %f3118, %f3662;
	mul.f32 	%f4051, %f3119, %f3662;
	mul.f32 	%f4052, %f3120, %f3660;
	mul.f32 	%f4053, %f3121, %f3660;
	mul.f32 	%f4054, %f3122, %f3662;
	mul.f32 	%f4055, %f3123, %f3662;
	mul.f32 	%f4056, %f3124, %f3660;
	mul.f32 	%f4057, %f3125, %f3660;
	mul.f32 	%f4058, %f3126, %f3662;
	mul.f32 	%f4059, %f3127, %f3662;
	mul.f32 	%f4060, %f3128, %f3660;
	mul.f32 	%f4061, %f3129, %f3660;
	mul.f32 	%f4062, %f3130, %f3662;
	mul.f32 	%f4063, %f3131, %f3662;
	mul.f32 	%f4064, %f3132, %f3660;
	mul.f32 	%f4065, %f3133, %f3660;
	mul.f32 	%f4066, %f3134, %f3662;
	mul.f32 	%f4067, %f3135, %f3662;
	mul.f32 	%f4068, %f3136, %f3660;
	mul.f32 	%f4069, %f3137, %f3660;
	mul.f32 	%f4070, %f3138, %f3662;
	mul.f32 	%f4071, %f3139, %f3662;
	mul.f32 	%f4072, %f3140, %f3660;
	mul.f32 	%f4073, %f3141, %f3660;
	mul.f32 	%f4074, %f3142, %f3662;
	mul.f32 	%f4075, %f3143, %f3662;
	mul.f32 	%f4076, %f3144, %f3660;
	mul.f32 	%f4077, %f3145, %f3660;
	mul.f32 	%f4078, %f3146, %f3662;
	mul.f32 	%f4079, %f3147, %f3662;
	mul.f32 	%f4080, %f3148, %f3660;
	mul.f32 	%f4081, %f3149, %f3660;
	mul.f32 	%f4082, %f3150, %f3662;
	mul.f32 	%f4083, %f3151, %f3662;
	mul.f32 	%f4084, %f3152, %f3660;
	mul.f32 	%f4085, %f3153, %f3660;
	mul.f32 	%f4086, %f3154, %f3662;
	mul.f32 	%f4087, %f3155, %f3662;
	mul.f32 	%f4088, %f3156, %f3660;
	mul.f32 	%f4089, %f3157, %f3660;
	mul.f32 	%f4090, %f3158, %f3662;
	mul.f32 	%f4091, %f3159, %f3662;
	mul.f32 	%f4092, %f3160, %f3660;
	mul.f32 	%f4093, %f3161, %f3660;
	mul.f32 	%f4094, %f3162, %f3662;
	mul.f32 	%f4095, %f3163, %f3662;
	mul.f32 	%f4096, %f3164, %f3664;
	mul.f32 	%f4097, %f3165, %f3664;
	mul.f32 	%f4098, %f3166, %f3666;
	mul.f32 	%f4099, %f3167, %f3666;
	mul.f32 	%f4100, %f3168, %f3664;
	mul.f32 	%f4101, %f3169, %f3664;
	mul.f32 	%f4102, %f3170, %f3666;
	mul.f32 	%f4103, %f3171, %f3666;
	mul.f32 	%f4104, %f3172, %f3664;
	mul.f32 	%f4105, %f3173, %f3664;
	mul.f32 	%f4106, %f3174, %f3666;
	mul.f32 	%f4107, %f3175, %f3666;
	mul.f32 	%f4108, %f3176, %f3664;
	mul.f32 	%f4109, %f3177, %f3664;
	mul.f32 	%f4110, %f3178, %f3666;
	mul.f32 	%f4111, %f3179, %f3666;
	mul.f32 	%f4112, %f3180, %f3664;
	mul.f32 	%f4113, %f3181, %f3664;
	mul.f32 	%f4114, %f3182, %f3666;
	mul.f32 	%f4115, %f3183, %f3666;
	mul.f32 	%f4116, %f3184, %f3664;
	mul.f32 	%f4117, %f3185, %f3664;
	mul.f32 	%f4118, %f3186, %f3666;
	mul.f32 	%f4119, %f3187, %f3666;
	mul.f32 	%f4120, %f3188, %f3664;
	mul.f32 	%f4121, %f3189, %f3664;
	mul.f32 	%f4122, %f3190, %f3666;
	mul.f32 	%f4123, %f3191, %f3666;
	mul.f32 	%f4124, %f3192, %f3664;
	mul.f32 	%f4125, %f3193, %f3664;
	mul.f32 	%f4126, %f3194, %f3666;
	mul.f32 	%f4127, %f3195, %f3666;
	mul.f32 	%f4128, %f3196, %f3664;
	mul.f32 	%f4129, %f3197, %f3664;
	mul.f32 	%f4130, %f3198, %f3666;
	mul.f32 	%f4131, %f3199, %f3666;
	mul.f32 	%f4132, %f3200, %f3664;
	mul.f32 	%f4133, %f3201, %f3664;
	mul.f32 	%f4134, %f3202, %f3666;
	mul.f32 	%f4135, %f3203, %f3666;
	mul.f32 	%f4136, %f3204, %f3664;
	mul.f32 	%f4137, %f3205, %f3664;
	mul.f32 	%f4138, %f3206, %f3666;
	mul.f32 	%f4139, %f3207, %f3666;
	mul.f32 	%f4140, %f3208, %f3664;
	mul.f32 	%f4141, %f3209, %f3664;
	mul.f32 	%f4142, %f3210, %f3666;
	mul.f32 	%f4143, %f3211, %f3666;
	mul.f32 	%f4144, %f3212, %f3664;
	mul.f32 	%f4145, %f3213, %f3664;
	mul.f32 	%f4146, %f3214, %f3666;
	mul.f32 	%f4147, %f3215, %f3666;
	mul.f32 	%f4148, %f3216, %f3664;
	mul.f32 	%f4149, %f3217, %f3664;
	mul.f32 	%f4150, %f3218, %f3666;
	mul.f32 	%f4151, %f3219, %f3666;
	mul.f32 	%f4152, %f3220, %f3664;
	mul.f32 	%f4153, %f3221, %f3664;
	mul.f32 	%f4154, %f3222, %f3666;
	mul.f32 	%f4155, %f3223, %f3666;
	mul.f32 	%f4156, %f3224, %f3664;
	mul.f32 	%f4157, %f3225, %f3664;
	mul.f32 	%f4158, %f3226, %f3666;
	mul.f32 	%f4159, %f3227, %f3666;
	mul.wide.s32 	%rd846, %r179, 2;
	mul.wide.s32 	%rd847, %r187, 2;
	.loc	1 197 11                        // prefix_prefill.py:197:11
	@%p171 bra 	$L__BB0_17;
// %bb.16:                              //   in Loop: Header=BB0_2 Depth=1
	.loc	1 0 0                           // prefix_prefill.py:0:0
	add.s32 	%r180, %r914, %r74;
	add.s32 	%r181, %r914, %r75;
	add.s32 	%r182, %r914, %r76;
	add.s32 	%r183, %r914, %r77;
	add.s32 	%r184, %r914, %r78;
	add.s32 	%r185, %r914, %r79;
	add.s32 	%r186, %r914, %r80;
	add.s32 	%r188, %r915, %r74;
	add.s32 	%r189, %r915, %r75;
	add.s32 	%r190, %r915, %r76;
	add.s32 	%r191, %r915, %r77;
	add.s32 	%r192, %r915, %r78;
	add.s32 	%r193, %r915, %r79;
	add.s32 	%r194, %r915, %r80;
	.loc	1 202 28                        // prefix_prefill.py:202:28
	add.s32 	%r991, %r2898, 16;
	add.s32 	%r992, %r2898, 17;
	add.s32 	%r993, %r2898, 18;
	add.s32 	%r994, %r2898, 19;
	add.s32 	%r995, %r2898, 20;
	add.s32 	%r996, %r2898, 21;
	add.s32 	%r997, %r2898, 22;
	.loc	1 202 50                        // prefix_prefill.py:202:50
	add.s32 	%r998, %r2898, 23;
	setp.lt.s32 	%p205, %r991, %r5;
	setp.lt.s32 	%p207, %r992, %r5;
	setp.lt.s32 	%p209, %r993, %r5;
	setp.lt.s32 	%p211, %r994, %r5;
	setp.lt.s32 	%p213, %r995, %r5;
	setp.lt.s32 	%p215, %r996, %r5;
	setp.lt.s32 	%p217, %r997, %r5;
	setp.lt.s32 	%p219, %r998, %r5;
	.loc	1 200 26                        // prefix_prefill.py:200:26
	add.s64 	%rd360, %rd188, %rd846;
	mul.wide.s32 	%rd377, %r180, 2;
	add.s64 	%rd361, %rd188, %rd377;
	mul.wide.s32 	%rd378, %r181, 2;
	add.s64 	%rd362, %rd188, %rd378;
	mul.wide.s32 	%rd379, %r182, 2;
	add.s64 	%rd363, %rd188, %rd379;
	mul.wide.s32 	%rd380, %r183, 2;
	add.s64 	%rd364, %rd188, %rd380;
	mul.wide.s32 	%rd381, %r184, 2;
	add.s64 	%rd365, %rd188, %rd381;
	mul.wide.s32 	%rd382, %r185, 2;
	add.s64 	%rd366, %rd188, %rd382;
	mul.wide.s32 	%rd383, %r186, 2;
	add.s64 	%rd367, %rd188, %rd383;
	add.s64 	%rd368, %rd188, %rd847;
	mul.wide.s32 	%rd385, %r188, 2;
	add.s64 	%rd369, %rd188, %rd385;
	mul.wide.s32 	%rd386, %r189, 2;
	add.s64 	%rd370, %rd188, %rd386;
	mul.wide.s32 	%rd387, %r190, 2;
	add.s64 	%rd371, %rd188, %rd387;
	mul.wide.s32 	%rd388, %r191, 2;
	add.s64 	%rd372, %rd188, %rd388;
	mul.wide.s32 	%rd389, %r192, 2;
	add.s64 	%rd373, %rd188, %rd389;
	mul.wide.s32 	%rd390, %r193, 2;
	add.s64 	%rd374, %rd188, %rd390;
	mul.wide.s32 	%rd391, %r194, 2;
	add.s64 	%rd375, %rd188, %rd391;
	.loc	1 200 16                        // prefix_prefill.py:200:16
	// begin inline asm
	mov.u16 %rs65, 0x0;
	@%p205 ld.global.b16 { %rs65 }, [ %rd360 + 0 ];
	@!%p205 mov.u16 %rs65, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs67, 0x0;
	@%p207 ld.global.b16 { %rs67 }, [ %rd361 + 0 ];
	@!%p207 mov.u16 %rs67, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs69, 0x0;
	@%p209 ld.global.b16 { %rs69 }, [ %rd362 + 0 ];
	@!%p209 mov.u16 %rs69, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs71, 0x0;
	@%p211 ld.global.b16 { %rs71 }, [ %rd363 + 0 ];
	@!%p211 mov.u16 %rs71, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs73, 0x0;
	@%p213 ld.global.b16 { %rs73 }, [ %rd364 + 0 ];
	@!%p213 mov.u16 %rs73, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs75, 0x0;
	@%p215 ld.global.b16 { %rs75 }, [ %rd365 + 0 ];
	@!%p215 mov.u16 %rs75, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs77, 0x0;
	@%p217 ld.global.b16 { %rs77 }, [ %rd366 + 0 ];
	@!%p217 mov.u16 %rs77, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs79, 0x0;
	@%p219 ld.global.b16 { %rs79 }, [ %rd367 + 0 ];
	@!%p219 mov.u16 %rs79, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs81, 0x0;
	@%p205 ld.global.b16 { %rs81 }, [ %rd368 + 0 ];
	@!%p205 mov.u16 %rs81, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs83, 0x0;
	@%p207 ld.global.b16 { %rs83 }, [ %rd369 + 0 ];
	@!%p207 mov.u16 %rs83, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs85, 0x0;
	@%p209 ld.global.b16 { %rs85 }, [ %rd370 + 0 ];
	@!%p209 mov.u16 %rs85, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs87, 0x0;
	@%p211 ld.global.b16 { %rs87 }, [ %rd371 + 0 ];
	@!%p211 mov.u16 %rs87, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs89, 0x0;
	@%p213 ld.global.b16 { %rs89 }, [ %rd372 + 0 ];
	@!%p213 mov.u16 %rs89, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs91, 0x0;
	@%p215 ld.global.b16 { %rs91 }, [ %rd373 + 0 ];
	@!%p215 mov.u16 %rs91, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs93, 0x0;
	@%p217 ld.global.b16 { %rs93 }, [ %rd374 + 0 ];
	@!%p217 mov.u16 %rs93, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs95, 0x0;
	@%p219 ld.global.b16 { %rs95 }, [ %rd375 + 0 ];
	@!%p219 mov.u16 %rs95, %rs258;
	// end inline asm
	mov.b32 	%r2925, {%rs65, %rs67};
	mov.b32 	%r2926, {%rs69, %rs71};
	mov.b32 	%r2927, {%rs73, %rs75};
	mov.b32 	%r2928, {%rs77, %rs79};
	mov.b32 	%r2929, {%rs81, %rs83};
	mov.b32 	%r2930, {%rs85, %rs87};
	mov.b32 	%r2931, {%rs89, %rs91};
	mov.b32 	%r2932, {%rs93, %rs95};
	.loc	1 197 11                        // prefix_prefill.py:197:11
	bra.uni 	$L__BB0_18;
$L__BB0_17:                             //   in Loop: Header=BB0_2 Depth=1
	.loc	1 205 39                        // prefix_prefill.py:205:39
	add.s64 	%rd356, %rd188, %rd846;
	add.s64 	%rd357, %rd188, %rd847;
	.loc	1 205 29                        // prefix_prefill.py:205:29
	// begin inline asm
	mov.u32 %r2925, 0x0;
	mov.u32 %r2926, 0x0;
	mov.u32 %r2927, 0x0;
	mov.u32 %r2928, 0x0;
	@%p744 ld.global.v4.b32 { %r2925, %r2926, %r2927, %r2928 }, [ %rd356 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r2929, 0x0;
	mov.u32 %r2930, 0x0;
	mov.u32 %r2931, 0x0;
	mov.u32 %r2932, 0x0;
	@%p744 ld.global.v4.b32 { %r2929, %r2930, %r2931, %r2932 }, [ %rd357 + 0 ];
	// end inline asm
$L__BB0_18:                             //   in Loop: Header=BB0_2 Depth=1
	.loc	1 0 0                           // prefix_prefill.py:0:0
	add.f32 	%f297, %f2825, %f2835;
	add.f32 	%f298, %f2827, %f2834;
	add.f32 	%f299, %f2829, %f2833;
	add.f32 	%f300, %f2831, %f2832;
	mov.b32 	%f3768, %r981;
	mov.b32 	%f3769, %r977;
	mov.b32 	%f3770, %r973;
	mov.b32 	%f3771, %r969;
	.loc	1 197 11                        // prefix_prefill.py:197:11
	bar.sync 	0;
	st.shared.v4.b32 	[%r89], {%r2925, %r2926, %r2927, %r2928};
	st.shared.v4.b32 	[%r90], {%r2929, %r2930, %r2931, %r2932};
	.loc	1 211 17                        // prefix_prefill.py:211:17
	mov.b32 	%r1007, %f3628;
	// begin inline asm
	cvt.rn.bf16.f32 %rs97, %r1007;
	// end inline asm
	mov.b32 	%r1008, %f3630;
	// begin inline asm
	cvt.rn.bf16.f32 %rs98, %r1008;
	// end inline asm
	mov.b32 	%r1009, %f3632;
	// begin inline asm
	cvt.rn.bf16.f32 %rs99, %r1009;
	// end inline asm
	mov.b32 	%r1010, %f3634;
	// begin inline asm
	cvt.rn.bf16.f32 %rs100, %r1010;
	// end inline asm
	mov.b32 	%r1011, %f3636;
	// begin inline asm
	cvt.rn.bf16.f32 %rs101, %r1011;
	// end inline asm
	mov.b32 	%r1012, %f3638;
	// begin inline asm
	cvt.rn.bf16.f32 %rs102, %r1012;
	// end inline asm
	mov.b32 	%r1013, %f3640;
	// begin inline asm
	cvt.rn.bf16.f32 %rs103, %r1013;
	// end inline asm
	mov.b32 	%r1014, %f3642;
	// begin inline asm
	cvt.rn.bf16.f32 %rs104, %r1014;
	// end inline asm
	mov.b32 	%r1015, %f3644;
	// begin inline asm
	cvt.rn.bf16.f32 %rs105, %r1015;
	// end inline asm
	mov.b32 	%r1016, %f3646;
	// begin inline asm
	cvt.rn.bf16.f32 %rs106, %r1016;
	// end inline asm
	mov.b32 	%r1017, %f3648;
	// begin inline asm
	cvt.rn.bf16.f32 %rs107, %r1017;
	// end inline asm
	mov.b32 	%r1018, %f3650;
	// begin inline asm
	cvt.rn.bf16.f32 %rs108, %r1018;
	// end inline asm
	mov.b32 	%r1019, %f3652;
	// begin inline asm
	cvt.rn.bf16.f32 %rs109, %r1019;
	// end inline asm
	mov.b32 	%r1020, %f3654;
	// begin inline asm
	cvt.rn.bf16.f32 %rs110, %r1020;
	// end inline asm
	mov.b32 	%r1021, %f3656;
	// begin inline asm
	cvt.rn.bf16.f32 %rs111, %r1021;
	// end inline asm
	mov.b32 	%r1022, %f3658;
	// begin inline asm
	cvt.rn.bf16.f32 %rs112, %r1022;
	// end inline asm
	.loc	1 213 24                        // prefix_prefill.py:213:24
	// begin inline asm
	fence.proxy.async.shared::cta;
	// end inline asm
	bar.sync 	0;
	mov.b32 	%r1032, {%rs97, %rs98};
	mov.b32 	%r1033, {%rs99, %rs100};
	mov.b32 	%r1034, {%rs101, %rs102};
	mov.b32 	%r1035, {%rs103, %rs104};
	mov.b32 	%r1036, {%rs105, %rs106};
	mov.b32 	%r1037, {%rs107, %rs108};
	mov.b32 	%r1038, {%rs109, %rs110};
	mov.b32 	%r1039, {%rs111, %rs112};
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.bf16.bf16 {%f4032,%f4033,%f4034,%f4035,%f4036,%f4037,%f4038,%f4039,%f4040,%f4041,%f4042,%f4043,%f4044,%f4045,%f4046,%f4047,%f4048,%f4049,%f4050,%f4051,%f4052,%f4053,%f4054,%f4055,%f4056,%f4057,%f4058,%f4059,%f4060,%f4061,%f4062,%f4063,%f4064,%f4065,%f4066,%f4067,%f4068,%f4069,%f4070,%f4071,%f4072,%f4073,%f4074,%f4075,%f4076,%f4077,%f4078,%f4079,%f4080,%f4081,%f4082,%f4083,%f4084,%f4085,%f4086,%f4087,%f4088,%f4089,%f4090,%f4091,%f4092,%f4093,%f4094,%f4095}, {%r1032,%r1033,%r1034,%r1035}, %rd26, %p744, 1, 1, 0;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.bf16.bf16 {%f4096,%f4097,%f4098,%f4099,%f4100,%f4101,%f4102,%f4103,%f4104,%f4105,%f4106,%f4107,%f4108,%f4109,%f4110,%f4111,%f4112,%f4113,%f4114,%f4115,%f4116,%f4117,%f4118,%f4119,%f4120,%f4121,%f4122,%f4123,%f4124,%f4125,%f4126,%f4127,%f4128,%f4129,%f4130,%f4131,%f4132,%f4133,%f4134,%f4135,%f4136,%f4137,%f4138,%f4139,%f4140,%f4141,%f4142,%f4143,%f4144,%f4145,%f4146,%f4147,%f4148,%f4149,%f4150,%f4151,%f4152,%f4153,%f4154,%f4155,%f4156,%f4157,%f4158,%f4159}, {%r1036,%r1037,%r1038,%r1039}, %rd26, %p744, 1, 1, 0;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	// begin inline asm
	// wait for regs: %f4032,%f4033,%f4034,%f4035,%f4036,%f4037,%f4038,%f4039,%f4040,%f4041,%f4042,%f4043,%f4044,%f4045,%f4046,%f4047,%f4048,%f4049,%f4050,%f4051,%f4052,%f4053,%f4054,%f4055,%f4056,%f4057,%f4058,%f4059,%f4060,%f4061,%f4062,%f4063,%f4064,%f4065,%f4066,%f4067,%f4068,%f4069,%f4070,%f4071,%f4072,%f4073,%f4074,%f4075,%f4076,%f4077,%f4078,%f4079,%f4080,%f4081,%f4082,%f4083,%f4084,%f4085,%f4086,%f4087,%f4088,%f4089,%f4090,%f4091,%f4092,%f4093,%f4094,%f4095,%f4096,%f4097,%f4098,%f4099,%f4100,%f4101,%f4102,%f4103,%f4104,%f4105,%f4106,%f4107,%f4108,%f4109,%f4110,%f4111,%f4112,%f4113,%f4114,%f4115,%f4116,%f4117,%f4118,%f4119,%f4120,%f4121,%f4122,%f4123,%f4124,%f4125,%f4126,%f4127,%f4128,%f4129,%f4130,%f4131,%f4132,%f4133,%f4134,%f4135,%f4136,%f4137,%f4138,%f4139,%f4140,%f4141,%f4142,%f4143,%f4144,%f4145,%f4146,%f4147,%f4148,%f4149,%f4150,%f4151,%f4152,%f4153,%f4154,%f4155,%f4156,%f4157,%f4158,%f4159
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	1 138 21                        // prefix_prefill.py:138:21
	add.s64 	%rd394, %rd854, 8;
	// begin inline asm
	mov.u32 %r1031, 0x0;
	@%p744 ld.global.b32 { %r1031 }, [ %rd394 + 0 ];
	// end inline asm
	.loc	1 142 26                        // prefix_prefill.py:142:26
	mul.lo.s32 	%r1040, %r1031, %r486;
	.loc	1 144 24                        // prefix_prefill.py:144:24
	add.s32 	%r244, %r102, 32;
	add.s32 	%r245, %r102, 33;
	add.s32 	%r246, %r102, 40;
	add.s32 	%r247, %r102, 41;
	add.s32 	%r248, %r1040, %r91;
	add.s32 	%r249, %r1040, %r92;
	.loc	1 148 31                        // prefix_prefill.py:148:31
	mul.lo.s32 	%r1041, %r1031, %r487;
	add.s32 	%r1042, %r1041, %r82;
	add.s32 	%r1043, %r1041, %r83;
	.loc	1 151 17                        // prefix_prefill.py:151:17
	add.s32 	%r250, %r1042, %r20;
	add.s32 	%r258, %r1043, %r20;
	.loc	1 153 34                        // prefix_prefill.py:153:34
	add.s32 	%r266, %r2900, 48;
	setp.le.s32 	%p240, %r266, %r5;
	mul.wide.s32 	%rd844, %r248, 2;
	mul.wide.s32 	%rd845, %r249, 2;
	.loc	1 153 11                        // prefix_prefill.py:153:11
	@%p240 bra 	$L__BB0_20;
// %bb.19:                              //   in Loop: Header=BB0_2 Depth=1
	.loc	1 144 24                        // prefix_prefill.py:144:24
	add.s32 	%r1069, %r2899, 40;
	.loc	1 158 50                        // prefix_prefill.py:158:50
	add.s32 	%r1070, %r2899, 32;
	setp.lt.s32 	%p243, %r1070, %r5;
	setp.lt.s32 	%p248, %r1069, %r5;
	.loc	1 156 26                        // prefix_prefill.py:156:26
	add.s64 	%rd399, %rd187, %rd844;
	add.s64 	%rd400, %rd187, %rd845;
	mov.b32 	%r1056, 0;
	.loc	1 156 16                        // prefix_prefill.py:156:16
	// begin inline asm
	mov.u32 %r2939, 0x0;
	mov.u32 %r2940, 0x0;
	mov.u32 %r2937, 0x0;
	mov.u32 %r2938, 0x0;
	@%p243 ld.global.v4.b32 { %r2939, %r2940, %r2937, %r2938 }, [ %rd399 + 0 ];
	@!%p243 mov.u32 %r2939, %r1056;
	@!%p243 mov.u32 %r2940, %r1056;
	@!%p243 mov.u32 %r2937, %r1056;
	@!%p243 mov.u32 %r2938, %r1056;
	// end inline asm
	// begin inline asm
	mov.u32 %r2933, 0x0;
	mov.u32 %r2934, 0x0;
	mov.u32 %r2935, 0x0;
	mov.u32 %r2936, 0x0;
	@%p248 ld.global.v4.b32 { %r2933, %r2934, %r2935, %r2936 }, [ %rd400 + 0 ];
	@!%p248 mov.u32 %r2933, %r1056;
	@!%p248 mov.u32 %r2934, %r1056;
	@!%p248 mov.u32 %r2935, %r1056;
	@!%p248 mov.u32 %r2936, %r1056;
	// end inline asm
	.loc	1 153 11                        // prefix_prefill.py:153:11
	bra.uni 	$L__BB0_21;
$L__BB0_20:                             //   in Loop: Header=BB0_2 Depth=1
	.loc	1 161 39                        // prefix_prefill.py:161:39
	add.s64 	%rd395, %rd187, %rd844;
	add.s64 	%rd396, %rd187, %rd845;
	.loc	1 161 29                        // prefix_prefill.py:161:29
	// begin inline asm
	mov.u32 %r2939, 0x0;
	mov.u32 %r2940, 0x0;
	mov.u32 %r2937, 0x0;
	mov.u32 %r2938, 0x0;
	@%p744 ld.global.v4.b32 { %r2939, %r2940, %r2937, %r2938 }, [ %rd395 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r2933, 0x0;
	mov.u32 %r2934, 0x0;
	mov.u32 %r2935, 0x0;
	mov.u32 %r2936, 0x0;
	@%p744 ld.global.v4.b32 { %r2933, %r2934, %r2935, %r2936 }, [ %rd396 + 0 ];
	// end inline asm
$L__BB0_21:                             //   in Loop: Header=BB0_2 Depth=1
	.loc	1 0 0                           // prefix_prefill.py:0:0
	fma.rn.f32 	%f561, %f10480, %f2724, %f297;
	fma.rn.f32 	%f562, %f10481, %f2726, %f298;
	fma.rn.f32 	%f563, %f10482, %f2728, %f299;
	fma.rn.f32 	%f564, %f10483, %f2730, %f300;
	add.f32 	%f589, %f3761, %f3771;
	add.f32 	%f590, %f3763, %f3770;
	add.f32 	%f591, %f3765, %f3769;
	add.f32 	%f592, %f3767, %f3768;
	.loc	1 153 11                        // prefix_prefill.py:153:11
	bar.sync 	0;
	st.shared.v4.b32 	[%r84], {%r2939, %r2940, %r2937, %r2938};
	st.shared.v4.b32 	[%r84+1024], {%r2933, %r2934, %r2935, %r2936};
	.loc	1 169 23                        // prefix_prefill.py:169:23
	// begin inline asm
	fence.proxy.async.shared::cta;
	// end inline asm
	bar.sync 	0;
	shfl.sync.idx.b32	%r1075, %r2889, 0, 31, -1;
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	shl.b32 	%r1076, %r1075, 7;
	and.b32  	%r1077, %r1076, 384;
	cvt.u64.u32 	%rd435, %r1077;
	add.s64 	%rd403, %rd2, %rd435;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f4312,%f4313,%f4314,%f4315,%f4316,%f4317,%f4318,%f4319}, %rd403, %rd3, 0, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd405, %rd4, %rd435;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f4312,%f4313,%f4314,%f4315,%f4316,%f4317,%f4318,%f4319}, %rd405, %rd5, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd407, %rd6, %rd435;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f4312,%f4313,%f4314,%f4315,%f4316,%f4317,%f4318,%f4319}, %rd407, %rd7, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd409, %rd8, %rd435;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f4312,%f4313,%f4314,%f4315,%f4316,%f4317,%f4318,%f4319}, %rd409, %rd9, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd411, %rd10, %rd435;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f4312,%f4313,%f4314,%f4315,%f4316,%f4317,%f4318,%f4319}, %rd411, %rd11, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd413, %rd12, %rd435;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f4312,%f4313,%f4314,%f4315,%f4316,%f4317,%f4318,%f4319}, %rd413, %rd13, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd415, %rd14, %rd435;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f4312,%f4313,%f4314,%f4315,%f4316,%f4317,%f4318,%f4319}, %rd415, %rd15, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd417, %rd16, %rd435;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f4312,%f4313,%f4314,%f4315,%f4316,%f4317,%f4318,%f4319}, %rd417, %rd17, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd419, %rd18, %rd435;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f4432,%f4433,%f4434,%f4435,%f4436,%f4437,%f4438,%f4439}, %rd419, %rd3, 0, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd421, %rd19, %rd435;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f4432,%f4433,%f4434,%f4435,%f4436,%f4437,%f4438,%f4439}, %rd421, %rd5, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd423, %rd20, %rd435;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f4432,%f4433,%f4434,%f4435,%f4436,%f4437,%f4438,%f4439}, %rd423, %rd7, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd425, %rd21, %rd435;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f4432,%f4433,%f4434,%f4435,%f4436,%f4437,%f4438,%f4439}, %rd425, %rd9, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd427, %rd22, %rd435;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f4432,%f4433,%f4434,%f4435,%f4436,%f4437,%f4438,%f4439}, %rd427, %rd11, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd429, %rd23, %rd435;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f4432,%f4433,%f4434,%f4435,%f4436,%f4437,%f4438,%f4439}, %rd429, %rd13, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd431, %rd24, %rd435;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f4432,%f4433,%f4434,%f4435,%f4436,%f4437,%f4438,%f4439}, %rd431, %rd15, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd433, %rd25, %rd435;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f4432,%f4433,%f4434,%f4435,%f4436,%f4437,%f4438,%f4439}, %rd433, %rd17, %p744, 1, 1, 0, 0;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	// begin inline asm
	// wait for regs: %f4312,%f4313,%f4314,%f4315,%f4316,%f4317,%f4318,%f4319,%f4432,%f4433,%f4434,%f4435,%f4436,%f4437,%f4438,%f4439
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	1 170 55                        // prefix_prefill.py:170:55
	setp.lt.s32 	%p268, %r244, %r5;
	setp.lt.s32 	%p269, %r245, %r5;
	setp.lt.s32 	%p270, %r246, %r5;
	setp.lt.s32 	%p271, %r247, %r5;
	.loc	1 171 22                        // prefix_prefill.py:171:22
	selp.f32 	%f4600, %f4312, 0fFF800000, %p268;
	selp.f32 	%f4601, %f4313, 0fFF800000, %p269;
	selp.f32 	%f4602, %f4314, 0fFF800000, %p268;
	selp.f32 	%f4603, %f4315, 0fFF800000, %p269;
	selp.f32 	%f4604, %f4316, 0fFF800000, %p270;
	selp.f32 	%f4605, %f4317, 0fFF800000, %p271;
	selp.f32 	%f4606, %f4318, 0fFF800000, %p270;
	selp.f32 	%f4607, %f4319, 0fFF800000, %p271;
	selp.f32 	%f4608, %f4432, 0fFF800000, %p268;
	selp.f32 	%f4609, %f4433, 0fFF800000, %p269;
	selp.f32 	%f4610, %f4434, 0fFF800000, %p268;
	selp.f32 	%f4611, %f4435, 0fFF800000, %p269;
	selp.f32 	%f4612, %f4436, 0fFF800000, %p270;
	selp.f32 	%f4613, %f4437, 0fFF800000, %p271;
	selp.f32 	%f4614, %f4438, 0fFF800000, %p270;
	selp.f32 	%f4615, %f4439, 0fFF800000, %p271;
	.loc	1 172 14                        // prefix_prefill.py:172:14
	mul.f32 	%f4616, %f2401, %f4600;
	mul.f32 	%f4617, %f2401, %f4601;
	mul.f32 	%f4618, %f2401, %f4602;
	mul.f32 	%f4619, %f2401, %f4603;
	mul.f32 	%f4620, %f2401, %f4604;
	mul.f32 	%f4621, %f2401, %f4605;
	mul.f32 	%f4622, %f2401, %f4606;
	mul.f32 	%f4623, %f2401, %f4607;
	mul.f32 	%f4624, %f2401, %f4608;
	mul.f32 	%f4625, %f2401, %f4609;
	mul.f32 	%f4626, %f2401, %f4610;
	mul.f32 	%f4627, %f2401, %f4611;
	mul.f32 	%f4628, %f2401, %f4612;
	mul.f32 	%f4629, %f2401, %f4613;
	mul.f32 	%f4630, %f2401, %f4614;
	mul.f32 	%f4631, %f2401, %f4615;
$L__tmp9:
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f4632, %f4616, %f4617;
	max.f32 	%f4633, %f4618, %f4619;
	max.f32 	%f4634, %f4632, %f4620;
	max.f32 	%f4635, %f4634, %f4621;
	max.f32 	%f4636, %f4633, %f4622;
	max.f32 	%f4637, %f4636, %f4623;
	max.f32 	%f4638, %f4624, %f4625;
	max.f32 	%f4639, %f4626, %f4627;
	max.f32 	%f4640, %f4638, %f4628;
	max.f32 	%f4641, %f4640, %f4629;
	max.f32 	%f4642, %f4639, %f4630;
	max.f32 	%f4643, %f4642, %f4631;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r1078, %f4635;
	shfl.sync.bfly.b32	%r1079, %r1078, 2, 31, -1;
	mov.b32 	%f4644, %r1079;
	mov.b32 	%r1080, %f4637;
	mov.b32 	%r1081, %f4641;
	mov.b32 	%r1082, %f4643;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f4645, %f4635, %f4644;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r1083, %f4645;
	shfl.sync.bfly.b32	%r1084, %r1083, 1, 31, -1;
	shfl.sync.bfly.b32	%r1085, %r1080, 2, 31, -1;
	mov.b32 	%f4646, %r1085;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f4647, %f4637, %f4646;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r1086, %f4647;
	shfl.sync.bfly.b32	%r1087, %r1086, 1, 31, -1;
	shfl.sync.bfly.b32	%r1088, %r1081, 2, 31, -1;
	mov.b32 	%f4648, %r1088;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f4649, %f4641, %f4648;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r1089, %f4649;
	shfl.sync.bfly.b32	%r1090, %r1089, 1, 31, -1;
	shfl.sync.bfly.b32	%r1091, %r1082, 2, 31, -1;
	mov.b32 	%f4650, %r1091;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f4651, %f4643, %f4650;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r1092, %f4651;
	shfl.sync.bfly.b32	%r1093, %r1092, 1, 31, -1;
	mov.b32 	%f4652, %r1093;
	mov.b32 	%f4653, %r1090;
	mov.b32 	%f4654, %r1087;
	mov.b32 	%f4655, %r1084;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f4656, %f4645, %f4655;
	max.f32 	%f4657, %f4647, %f4654;
	max.f32 	%f4658, %f4649, %f4653;
	max.f32 	%f4659, %f4651, %f4652;
$L__tmp10:
	.loc	1 190 31                        // prefix_prefill.py:190:31
	max.f32 	%f860, %f568, %f4659;
	max.f32 	%f859, %f567, %f4658;
	max.f32 	%f858, %f566, %f4657;
	max.f32 	%f857, %f565, %f4656;
	.loc	1 191 24                        // prefix_prefill.py:191:24
	neg.f32 	%f4660, %f857;
	fma.rn.f32 	%f4661, %f2401, %f4600, %f4660;
	fma.rn.f32 	%f4662, %f2401, %f4601, %f4660;
	neg.f32 	%f4663, %f858;
	fma.rn.f32 	%f4664, %f2401, %f4602, %f4663;
	fma.rn.f32 	%f4665, %f2401, %f4603, %f4663;
	fma.rn.f32 	%f4666, %f2401, %f4604, %f4660;
	fma.rn.f32 	%f4667, %f2401, %f4605, %f4660;
	fma.rn.f32 	%f4668, %f2401, %f4606, %f4663;
	fma.rn.f32 	%f4669, %f2401, %f4607, %f4663;
	neg.f32 	%f4670, %f859;
	fma.rn.f32 	%f4671, %f2401, %f4608, %f4670;
	fma.rn.f32 	%f4672, %f2401, %f4609, %f4670;
	neg.f32 	%f4673, %f860;
	fma.rn.f32 	%f4674, %f2401, %f4610, %f4673;
	fma.rn.f32 	%f4675, %f2401, %f4611, %f4673;
	fma.rn.f32 	%f4676, %f2401, %f4612, %f4670;
	fma.rn.f32 	%f4677, %f2401, %f4613, %f4670;
	fma.rn.f32 	%f4678, %f2401, %f4614, %f4673;
	fma.rn.f32 	%f4679, %f2401, %f4615, %f4673;
	.loc	1 191 19                        // prefix_prefill.py:191:19
	mul.f32 	%f4561, %f4661, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4560, %f4561;
	// end inline asm
	mul.f32 	%f4563, %f4662, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4562, %f4563;
	// end inline asm
	mul.f32 	%f4565, %f4664, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4564, %f4565;
	// end inline asm
	mul.f32 	%f4567, %f4665, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4566, %f4567;
	// end inline asm
	mul.f32 	%f4569, %f4666, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4568, %f4569;
	// end inline asm
	mul.f32 	%f4571, %f4667, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4570, %f4571;
	// end inline asm
	mul.f32 	%f4573, %f4668, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4572, %f4573;
	// end inline asm
	mul.f32 	%f4575, %f4669, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4574, %f4575;
	// end inline asm
	mul.f32 	%f4577, %f4671, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4576, %f4577;
	// end inline asm
	mul.f32 	%f4579, %f4672, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4578, %f4579;
	// end inline asm
	mul.f32 	%f4581, %f4674, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4580, %f4581;
	// end inline asm
	mul.f32 	%f4583, %f4675, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4582, %f4583;
	// end inline asm
	mul.f32 	%f4585, %f4676, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4584, %f4585;
	// end inline asm
	mul.f32 	%f4587, %f4677, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4586, %f4587;
	// end inline asm
	mul.f32 	%f4589, %f4678, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4588, %f4589;
	// end inline asm
	mul.f32 	%f4591, %f4679, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4590, %f4591;
	// end inline asm
$L__tmp11:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f4680, %f4560, %f4562;
	add.f32 	%f4681, %f4564, %f4566;
	add.f32 	%f4682, %f4680, %f4568;
	add.f32 	%f4683, %f4682, %f4570;
	add.f32 	%f4684, %f4681, %f4572;
	add.f32 	%f4685, %f4684, %f4574;
	add.f32 	%f4686, %f4576, %f4578;
	add.f32 	%f4687, %f4580, %f4582;
	add.f32 	%f4688, %f4686, %f4584;
	add.f32 	%f4689, %f4688, %f4586;
	add.f32 	%f4690, %f4687, %f4588;
	add.f32 	%f4691, %f4690, %f4590;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r1094, %f4683;
	shfl.sync.bfly.b32	%r1095, %r1094, 2, 31, -1;
	mov.b32 	%f4692, %r1095;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f4693, %f4683, %f4692;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r1096, %f4693;
	shfl.sync.bfly.b32	%r1097, %r1096, 1, 31, -1;
	mov.b32 	%r1098, %f4685;
	shfl.sync.bfly.b32	%r1099, %r1098, 2, 31, -1;
	mov.b32 	%f4694, %r1099;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f4695, %f4685, %f4694;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r1100, %f4695;
	shfl.sync.bfly.b32	%r1101, %r1100, 1, 31, -1;
	mov.b32 	%r1102, %f4689;
	shfl.sync.bfly.b32	%r1103, %r1102, 2, 31, -1;
	mov.b32 	%f4696, %r1103;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f4697, %f4689, %f4696;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r1104, %f4697;
	shfl.sync.bfly.b32	%r1105, %r1104, 1, 31, -1;
	mov.b32 	%r1106, %f4691;
	shfl.sync.bfly.b32	%r1107, %r1106, 2, 31, -1;
	mov.b32 	%f4698, %r1107;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f4699, %f4691, %f4698;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r1108, %f4699;
	shfl.sync.bfly.b32	%r1109, %r1108, 1, 31, -1;
	mov.b32 	%f4700, %r1109;
	mov.b32 	%f4701, %r1105;
	mov.b32 	%f4702, %r1101;
	mov.b32 	%f4703, %r1097;
$L__tmp12:
	.loc	1 193 29                        // prefix_prefill.py:193:29
	sub.f32 	%f4704, %f565, %f857;
	sub.f32 	%f4705, %f566, %f858;
	sub.f32 	%f4706, %f567, %f859;
	sub.f32 	%f4707, %f568, %f860;
	.loc	1 193 23                        // prefix_prefill.py:193:23
	mul.f32 	%f4593, %f4704, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4592, %f4593;
	// end inline asm
	mul.f32 	%f4595, %f4705, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4594, %f4595;
	// end inline asm
	mul.f32 	%f4597, %f4706, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4596, %f4597;
	// end inline asm
	mul.f32 	%f4599, %f4707, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f4598, %f4599;
	// end inline asm
	.loc	1 194 20                        // prefix_prefill.py:194:20
	mul.f32 	%f4964, %f4032, %f4592;
	mul.f32 	%f4965, %f4033, %f4592;
	mul.f32 	%f4966, %f4034, %f4594;
	mul.f32 	%f4967, %f4035, %f4594;
	mul.f32 	%f4968, %f4036, %f4592;
	mul.f32 	%f4969, %f4037, %f4592;
	mul.f32 	%f4970, %f4038, %f4594;
	mul.f32 	%f4971, %f4039, %f4594;
	mul.f32 	%f4972, %f4040, %f4592;
	mul.f32 	%f4973, %f4041, %f4592;
	mul.f32 	%f4974, %f4042, %f4594;
	mul.f32 	%f4975, %f4043, %f4594;
	mul.f32 	%f4976, %f4044, %f4592;
	mul.f32 	%f4977, %f4045, %f4592;
	mul.f32 	%f4978, %f4046, %f4594;
	mul.f32 	%f4979, %f4047, %f4594;
	mul.f32 	%f4980, %f4048, %f4592;
	mul.f32 	%f4981, %f4049, %f4592;
	mul.f32 	%f4982, %f4050, %f4594;
	mul.f32 	%f4983, %f4051, %f4594;
	mul.f32 	%f4984, %f4052, %f4592;
	mul.f32 	%f4985, %f4053, %f4592;
	mul.f32 	%f4986, %f4054, %f4594;
	mul.f32 	%f4987, %f4055, %f4594;
	mul.f32 	%f4988, %f4056, %f4592;
	mul.f32 	%f4989, %f4057, %f4592;
	mul.f32 	%f4990, %f4058, %f4594;
	mul.f32 	%f4991, %f4059, %f4594;
	mul.f32 	%f4992, %f4060, %f4592;
	mul.f32 	%f4993, %f4061, %f4592;
	mul.f32 	%f4994, %f4062, %f4594;
	mul.f32 	%f4995, %f4063, %f4594;
	mul.f32 	%f4996, %f4064, %f4592;
	mul.f32 	%f4997, %f4065, %f4592;
	mul.f32 	%f4998, %f4066, %f4594;
	mul.f32 	%f4999, %f4067, %f4594;
	mul.f32 	%f5000, %f4068, %f4592;
	mul.f32 	%f5001, %f4069, %f4592;
	mul.f32 	%f5002, %f4070, %f4594;
	mul.f32 	%f5003, %f4071, %f4594;
	mul.f32 	%f5004, %f4072, %f4592;
	mul.f32 	%f5005, %f4073, %f4592;
	mul.f32 	%f5006, %f4074, %f4594;
	mul.f32 	%f5007, %f4075, %f4594;
	mul.f32 	%f5008, %f4076, %f4592;
	mul.f32 	%f5009, %f4077, %f4592;
	mul.f32 	%f5010, %f4078, %f4594;
	mul.f32 	%f5011, %f4079, %f4594;
	mul.f32 	%f5012, %f4080, %f4592;
	mul.f32 	%f5013, %f4081, %f4592;
	mul.f32 	%f5014, %f4082, %f4594;
	mul.f32 	%f5015, %f4083, %f4594;
	mul.f32 	%f5016, %f4084, %f4592;
	mul.f32 	%f5017, %f4085, %f4592;
	mul.f32 	%f5018, %f4086, %f4594;
	mul.f32 	%f5019, %f4087, %f4594;
	mul.f32 	%f5020, %f4088, %f4592;
	mul.f32 	%f5021, %f4089, %f4592;
	mul.f32 	%f5022, %f4090, %f4594;
	mul.f32 	%f5023, %f4091, %f4594;
	mul.f32 	%f5024, %f4092, %f4592;
	mul.f32 	%f5025, %f4093, %f4592;
	mul.f32 	%f5026, %f4094, %f4594;
	mul.f32 	%f5027, %f4095, %f4594;
	mul.f32 	%f5028, %f4096, %f4596;
	mul.f32 	%f5029, %f4097, %f4596;
	mul.f32 	%f5030, %f4098, %f4598;
	mul.f32 	%f5031, %f4099, %f4598;
	mul.f32 	%f5032, %f4100, %f4596;
	mul.f32 	%f5033, %f4101, %f4596;
	mul.f32 	%f5034, %f4102, %f4598;
	mul.f32 	%f5035, %f4103, %f4598;
	mul.f32 	%f5036, %f4104, %f4596;
	mul.f32 	%f5037, %f4105, %f4596;
	mul.f32 	%f5038, %f4106, %f4598;
	mul.f32 	%f5039, %f4107, %f4598;
	mul.f32 	%f5040, %f4108, %f4596;
	mul.f32 	%f5041, %f4109, %f4596;
	mul.f32 	%f5042, %f4110, %f4598;
	mul.f32 	%f5043, %f4111, %f4598;
	mul.f32 	%f5044, %f4112, %f4596;
	mul.f32 	%f5045, %f4113, %f4596;
	mul.f32 	%f5046, %f4114, %f4598;
	mul.f32 	%f5047, %f4115, %f4598;
	mul.f32 	%f5048, %f4116, %f4596;
	mul.f32 	%f5049, %f4117, %f4596;
	mul.f32 	%f5050, %f4118, %f4598;
	mul.f32 	%f5051, %f4119, %f4598;
	mul.f32 	%f5052, %f4120, %f4596;
	mul.f32 	%f5053, %f4121, %f4596;
	mul.f32 	%f5054, %f4122, %f4598;
	mul.f32 	%f5055, %f4123, %f4598;
	mul.f32 	%f5056, %f4124, %f4596;
	mul.f32 	%f5057, %f4125, %f4596;
	mul.f32 	%f5058, %f4126, %f4598;
	mul.f32 	%f5059, %f4127, %f4598;
	mul.f32 	%f5060, %f4128, %f4596;
	mul.f32 	%f5061, %f4129, %f4596;
	mul.f32 	%f5062, %f4130, %f4598;
	mul.f32 	%f5063, %f4131, %f4598;
	mul.f32 	%f5064, %f4132, %f4596;
	mul.f32 	%f5065, %f4133, %f4596;
	mul.f32 	%f5066, %f4134, %f4598;
	mul.f32 	%f5067, %f4135, %f4598;
	mul.f32 	%f5068, %f4136, %f4596;
	mul.f32 	%f5069, %f4137, %f4596;
	mul.f32 	%f5070, %f4138, %f4598;
	mul.f32 	%f5071, %f4139, %f4598;
	mul.f32 	%f5072, %f4140, %f4596;
	mul.f32 	%f5073, %f4141, %f4596;
	mul.f32 	%f5074, %f4142, %f4598;
	mul.f32 	%f5075, %f4143, %f4598;
	mul.f32 	%f5076, %f4144, %f4596;
	mul.f32 	%f5077, %f4145, %f4596;
	mul.f32 	%f5078, %f4146, %f4598;
	mul.f32 	%f5079, %f4147, %f4598;
	mul.f32 	%f5080, %f4148, %f4596;
	mul.f32 	%f5081, %f4149, %f4596;
	mul.f32 	%f5082, %f4150, %f4598;
	mul.f32 	%f5083, %f4151, %f4598;
	mul.f32 	%f5084, %f4152, %f4596;
	mul.f32 	%f5085, %f4153, %f4596;
	mul.f32 	%f5086, %f4154, %f4598;
	mul.f32 	%f5087, %f4155, %f4598;
	mul.f32 	%f5088, %f4156, %f4596;
	mul.f32 	%f5089, %f4157, %f4596;
	mul.f32 	%f5090, %f4158, %f4598;
	mul.f32 	%f5091, %f4159, %f4598;
	mul.wide.s32 	%rd842, %r250, 2;
	mul.wide.s32 	%rd843, %r258, 2;
	.loc	1 197 11                        // prefix_prefill.py:197:11
	@%p240 bra 	$L__BB0_23;
// %bb.22:                              //   in Loop: Header=BB0_2 Depth=1
	.loc	1 0 0                           // prefix_prefill.py:0:0
	add.s32 	%r251, %r1042, %r74;
	add.s32 	%r252, %r1042, %r75;
	add.s32 	%r253, %r1042, %r76;
	add.s32 	%r254, %r1042, %r77;
	add.s32 	%r255, %r1042, %r78;
	add.s32 	%r256, %r1042, %r79;
	add.s32 	%r257, %r1042, %r80;
	add.s32 	%r259, %r1043, %r74;
	add.s32 	%r260, %r1043, %r75;
	add.s32 	%r261, %r1043, %r76;
	add.s32 	%r262, %r1043, %r77;
	add.s32 	%r263, %r1043, %r78;
	add.s32 	%r264, %r1043, %r79;
	add.s32 	%r265, %r1043, %r80;
	.loc	1 202 28                        // prefix_prefill.py:202:28
	add.s32 	%r1119, %r2898, 32;
	add.s32 	%r1120, %r2898, 33;
	add.s32 	%r1121, %r2898, 34;
	add.s32 	%r1122, %r2898, 35;
	add.s32 	%r1123, %r2898, 36;
	add.s32 	%r1124, %r2898, 37;
	add.s32 	%r1125, %r2898, 38;
	.loc	1 202 50                        // prefix_prefill.py:202:50
	add.s32 	%r1126, %r2898, 39;
	setp.lt.s32 	%p274, %r1119, %r5;
	setp.lt.s32 	%p276, %r1120, %r5;
	setp.lt.s32 	%p278, %r1121, %r5;
	setp.lt.s32 	%p280, %r1122, %r5;
	setp.lt.s32 	%p282, %r1123, %r5;
	setp.lt.s32 	%p284, %r1124, %r5;
	setp.lt.s32 	%p286, %r1125, %r5;
	setp.lt.s32 	%p288, %r1126, %r5;
	.loc	1 200 26                        // prefix_prefill.py:200:26
	add.s64 	%rd440, %rd188, %rd842;
	mul.wide.s32 	%rd457, %r251, 2;
	add.s64 	%rd441, %rd188, %rd457;
	mul.wide.s32 	%rd458, %r252, 2;
	add.s64 	%rd442, %rd188, %rd458;
	mul.wide.s32 	%rd459, %r253, 2;
	add.s64 	%rd443, %rd188, %rd459;
	mul.wide.s32 	%rd460, %r254, 2;
	add.s64 	%rd444, %rd188, %rd460;
	mul.wide.s32 	%rd461, %r255, 2;
	add.s64 	%rd445, %rd188, %rd461;
	mul.wide.s32 	%rd462, %r256, 2;
	add.s64 	%rd446, %rd188, %rd462;
	mul.wide.s32 	%rd463, %r257, 2;
	add.s64 	%rd447, %rd188, %rd463;
	add.s64 	%rd448, %rd188, %rd843;
	mul.wide.s32 	%rd465, %r259, 2;
	add.s64 	%rd449, %rd188, %rd465;
	mul.wide.s32 	%rd466, %r260, 2;
	add.s64 	%rd450, %rd188, %rd466;
	mul.wide.s32 	%rd467, %r261, 2;
	add.s64 	%rd451, %rd188, %rd467;
	mul.wide.s32 	%rd468, %r262, 2;
	add.s64 	%rd452, %rd188, %rd468;
	mul.wide.s32 	%rd469, %r263, 2;
	add.s64 	%rd453, %rd188, %rd469;
	mul.wide.s32 	%rd470, %r264, 2;
	add.s64 	%rd454, %rd188, %rd470;
	mul.wide.s32 	%rd471, %r265, 2;
	add.s64 	%rd455, %rd188, %rd471;
	.loc	1 200 16                        // prefix_prefill.py:200:16
	// begin inline asm
	mov.u16 %rs129, 0x0;
	@%p274 ld.global.b16 { %rs129 }, [ %rd440 + 0 ];
	@!%p274 mov.u16 %rs129, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs131, 0x0;
	@%p276 ld.global.b16 { %rs131 }, [ %rd441 + 0 ];
	@!%p276 mov.u16 %rs131, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs133, 0x0;
	@%p278 ld.global.b16 { %rs133 }, [ %rd442 + 0 ];
	@!%p278 mov.u16 %rs133, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs135, 0x0;
	@%p280 ld.global.b16 { %rs135 }, [ %rd443 + 0 ];
	@!%p280 mov.u16 %rs135, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs137, 0x0;
	@%p282 ld.global.b16 { %rs137 }, [ %rd444 + 0 ];
	@!%p282 mov.u16 %rs137, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs139, 0x0;
	@%p284 ld.global.b16 { %rs139 }, [ %rd445 + 0 ];
	@!%p284 mov.u16 %rs139, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs141, 0x0;
	@%p286 ld.global.b16 { %rs141 }, [ %rd446 + 0 ];
	@!%p286 mov.u16 %rs141, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs143, 0x0;
	@%p288 ld.global.b16 { %rs143 }, [ %rd447 + 0 ];
	@!%p288 mov.u16 %rs143, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs145, 0x0;
	@%p274 ld.global.b16 { %rs145 }, [ %rd448 + 0 ];
	@!%p274 mov.u16 %rs145, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs147, 0x0;
	@%p276 ld.global.b16 { %rs147 }, [ %rd449 + 0 ];
	@!%p276 mov.u16 %rs147, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs149, 0x0;
	@%p278 ld.global.b16 { %rs149 }, [ %rd450 + 0 ];
	@!%p278 mov.u16 %rs149, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs151, 0x0;
	@%p280 ld.global.b16 { %rs151 }, [ %rd451 + 0 ];
	@!%p280 mov.u16 %rs151, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs153, 0x0;
	@%p282 ld.global.b16 { %rs153 }, [ %rd452 + 0 ];
	@!%p282 mov.u16 %rs153, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs155, 0x0;
	@%p284 ld.global.b16 { %rs155 }, [ %rd453 + 0 ];
	@!%p284 mov.u16 %rs155, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs157, 0x0;
	@%p286 ld.global.b16 { %rs157 }, [ %rd454 + 0 ];
	@!%p286 mov.u16 %rs157, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs159, 0x0;
	@%p288 ld.global.b16 { %rs159 }, [ %rd455 + 0 ];
	@!%p288 mov.u16 %rs159, %rs258;
	// end inline asm
	mov.b32 	%r2941, {%rs129, %rs131};
	mov.b32 	%r2942, {%rs133, %rs135};
	mov.b32 	%r2943, {%rs137, %rs139};
	mov.b32 	%r2944, {%rs141, %rs143};
	mov.b32 	%r2945, {%rs145, %rs147};
	mov.b32 	%r2946, {%rs149, %rs151};
	mov.b32 	%r2947, {%rs153, %rs155};
	mov.b32 	%r2948, {%rs157, %rs159};
	.loc	1 197 11                        // prefix_prefill.py:197:11
	bra.uni 	$L__BB0_24;
$L__BB0_23:                             //   in Loop: Header=BB0_2 Depth=1
	.loc	1 205 39                        // prefix_prefill.py:205:39
	add.s64 	%rd436, %rd188, %rd842;
	add.s64 	%rd437, %rd188, %rd843;
	.loc	1 205 29                        // prefix_prefill.py:205:29
	// begin inline asm
	mov.u32 %r2941, 0x0;
	mov.u32 %r2942, 0x0;
	mov.u32 %r2943, 0x0;
	mov.u32 %r2944, 0x0;
	@%p744 ld.global.v4.b32 { %r2941, %r2942, %r2943, %r2944 }, [ %rd436 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r2945, 0x0;
	mov.u32 %r2946, 0x0;
	mov.u32 %r2947, 0x0;
	mov.u32 %r2948, 0x0;
	@%p744 ld.global.v4.b32 { %r2945, %r2946, %r2947, %r2948 }, [ %rd437 + 0 ];
	// end inline asm
$L__BB0_24:                             //   in Loop: Header=BB0_2 Depth=1
	.loc	1 0 0                           // prefix_prefill.py:0:0
	fma.rn.f32 	%f853, %f561, %f3660, %f589;
	fma.rn.f32 	%f854, %f562, %f3662, %f590;
	fma.rn.f32 	%f855, %f563, %f3664, %f591;
	fma.rn.f32 	%f856, %f564, %f3666, %f592;
	add.f32 	%f881, %f4693, %f4703;
	add.f32 	%f882, %f4695, %f4702;
	add.f32 	%f883, %f4697, %f4701;
	add.f32 	%f884, %f4699, %f4700;
	.loc	1 197 11                        // prefix_prefill.py:197:11
	bar.sync 	0;
	st.shared.v4.b32 	[%r89], {%r2941, %r2942, %r2943, %r2944};
	st.shared.v4.b32 	[%r90], {%r2945, %r2946, %r2947, %r2948};
	.loc	1 211 17                        // prefix_prefill.py:211:17
	mov.b32 	%r1135, %f4560;
	// begin inline asm
	cvt.rn.bf16.f32 %rs161, %r1135;
	// end inline asm
	mov.b32 	%r1136, %f4562;
	// begin inline asm
	cvt.rn.bf16.f32 %rs162, %r1136;
	// end inline asm
	mov.b32 	%r1137, %f4564;
	// begin inline asm
	cvt.rn.bf16.f32 %rs163, %r1137;
	// end inline asm
	mov.b32 	%r1138, %f4566;
	// begin inline asm
	cvt.rn.bf16.f32 %rs164, %r1138;
	// end inline asm
	mov.b32 	%r1139, %f4568;
	// begin inline asm
	cvt.rn.bf16.f32 %rs165, %r1139;
	// end inline asm
	mov.b32 	%r1140, %f4570;
	// begin inline asm
	cvt.rn.bf16.f32 %rs166, %r1140;
	// end inline asm
	mov.b32 	%r1141, %f4572;
	// begin inline asm
	cvt.rn.bf16.f32 %rs167, %r1141;
	// end inline asm
	mov.b32 	%r1142, %f4574;
	// begin inline asm
	cvt.rn.bf16.f32 %rs168, %r1142;
	// end inline asm
	mov.b32 	%r1143, %f4576;
	// begin inline asm
	cvt.rn.bf16.f32 %rs169, %r1143;
	// end inline asm
	mov.b32 	%r1144, %f4578;
	// begin inline asm
	cvt.rn.bf16.f32 %rs170, %r1144;
	// end inline asm
	mov.b32 	%r1145, %f4580;
	// begin inline asm
	cvt.rn.bf16.f32 %rs171, %r1145;
	// end inline asm
	mov.b32 	%r1146, %f4582;
	// begin inline asm
	cvt.rn.bf16.f32 %rs172, %r1146;
	// end inline asm
	mov.b32 	%r1147, %f4584;
	// begin inline asm
	cvt.rn.bf16.f32 %rs173, %r1147;
	// end inline asm
	mov.b32 	%r1148, %f4586;
	// begin inline asm
	cvt.rn.bf16.f32 %rs174, %r1148;
	// end inline asm
	mov.b32 	%r1149, %f4588;
	// begin inline asm
	cvt.rn.bf16.f32 %rs175, %r1149;
	// end inline asm
	mov.b32 	%r1150, %f4590;
	// begin inline asm
	cvt.rn.bf16.f32 %rs176, %r1150;
	// end inline asm
	.loc	1 213 24                        // prefix_prefill.py:213:24
	// begin inline asm
	fence.proxy.async.shared::cta;
	// end inline asm
	bar.sync 	0;
	mov.b32 	%r1160, {%rs161, %rs162};
	mov.b32 	%r1161, {%rs163, %rs164};
	mov.b32 	%r1162, {%rs165, %rs166};
	mov.b32 	%r1163, {%rs167, %rs168};
	mov.b32 	%r1164, {%rs169, %rs170};
	mov.b32 	%r1165, {%rs171, %rs172};
	mov.b32 	%r1166, {%rs173, %rs174};
	mov.b32 	%r1167, {%rs175, %rs176};
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.bf16.bf16 {%f4964,%f4965,%f4966,%f4967,%f4968,%f4969,%f4970,%f4971,%f4972,%f4973,%f4974,%f4975,%f4976,%f4977,%f4978,%f4979,%f4980,%f4981,%f4982,%f4983,%f4984,%f4985,%f4986,%f4987,%f4988,%f4989,%f4990,%f4991,%f4992,%f4993,%f4994,%f4995,%f4996,%f4997,%f4998,%f4999,%f5000,%f5001,%f5002,%f5003,%f5004,%f5005,%f5006,%f5007,%f5008,%f5009,%f5010,%f5011,%f5012,%f5013,%f5014,%f5015,%f5016,%f5017,%f5018,%f5019,%f5020,%f5021,%f5022,%f5023,%f5024,%f5025,%f5026,%f5027}, {%r1160,%r1161,%r1162,%r1163}, %rd26, %p744, 1, 1, 0;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.bf16.bf16 {%f5028,%f5029,%f5030,%f5031,%f5032,%f5033,%f5034,%f5035,%f5036,%f5037,%f5038,%f5039,%f5040,%f5041,%f5042,%f5043,%f5044,%f5045,%f5046,%f5047,%f5048,%f5049,%f5050,%f5051,%f5052,%f5053,%f5054,%f5055,%f5056,%f5057,%f5058,%f5059,%f5060,%f5061,%f5062,%f5063,%f5064,%f5065,%f5066,%f5067,%f5068,%f5069,%f5070,%f5071,%f5072,%f5073,%f5074,%f5075,%f5076,%f5077,%f5078,%f5079,%f5080,%f5081,%f5082,%f5083,%f5084,%f5085,%f5086,%f5087,%f5088,%f5089,%f5090,%f5091}, {%r1164,%r1165,%r1166,%r1167}, %rd26, %p744, 1, 1, 0;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	// begin inline asm
	// wait for regs: %f4964,%f4965,%f4966,%f4967,%f4968,%f4969,%f4970,%f4971,%f4972,%f4973,%f4974,%f4975,%f4976,%f4977,%f4978,%f4979,%f4980,%f4981,%f4982,%f4983,%f4984,%f4985,%f4986,%f4987,%f4988,%f4989,%f4990,%f4991,%f4992,%f4993,%f4994,%f4995,%f4996,%f4997,%f4998,%f4999,%f5000,%f5001,%f5002,%f5003,%f5004,%f5005,%f5006,%f5007,%f5008,%f5009,%f5010,%f5011,%f5012,%f5013,%f5014,%f5015,%f5016,%f5017,%f5018,%f5019,%f5020,%f5021,%f5022,%f5023,%f5024,%f5025,%f5026,%f5027,%f5028,%f5029,%f5030,%f5031,%f5032,%f5033,%f5034,%f5035,%f5036,%f5037,%f5038,%f5039,%f5040,%f5041,%f5042,%f5043,%f5044,%f5045,%f5046,%f5047,%f5048,%f5049,%f5050,%f5051,%f5052,%f5053,%f5054,%f5055,%f5056,%f5057,%f5058,%f5059,%f5060,%f5061,%f5062,%f5063,%f5064,%f5065,%f5066,%f5067,%f5068,%f5069,%f5070,%f5071,%f5072,%f5073,%f5074,%f5075,%f5076,%f5077,%f5078,%f5079,%f5080,%f5081,%f5082,%f5083,%f5084,%f5085,%f5086,%f5087,%f5088,%f5089,%f5090,%f5091
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	1 138 21                        // prefix_prefill.py:138:21
	add.s64 	%rd474, %rd854, 12;
	// begin inline asm
	mov.u32 %r1159, 0x0;
	@%p744 ld.global.b32 { %r1159 }, [ %rd474 + 0 ];
	// end inline asm
	.loc	1 142 26                        // prefix_prefill.py:142:26
	mul.lo.s32 	%r1168, %r1159, %r486;
	.loc	1 144 24                        // prefix_prefill.py:144:24
	add.s32 	%r315, %r102, 48;
	add.s32 	%r316, %r102, 49;
	add.s32 	%r317, %r102, 56;
	add.s32 	%r318, %r102, 57;
	add.s32 	%r319, %r1168, %r91;
	add.s32 	%r320, %r1168, %r92;
	.loc	1 148 31                        // prefix_prefill.py:148:31
	mul.lo.s32 	%r1169, %r1159, %r487;
	add.s32 	%r1170, %r1169, %r82;
	add.s32 	%r1171, %r1169, %r83;
	.loc	1 151 17                        // prefix_prefill.py:151:17
	add.s32 	%r321, %r1170, %r20;
	add.s32 	%r329, %r1171, %r20;
	.loc	1 153 21                        // prefix_prefill.py:153:21
	add.s32 	%r2900, %r2900, 64;
	.loc	1 153 34                        // prefix_prefill.py:153:34
	setp.le.s32 	%p309, %r2900, %r5;
	mul.wide.s32 	%rd840, %r319, 2;
	mul.wide.s32 	%rd841, %r320, 2;
	.loc	1 153 11                        // prefix_prefill.py:153:11
	@%p309 bra 	$L__BB0_26;
// %bb.25:                              //   in Loop: Header=BB0_2 Depth=1
	.loc	1 144 24                        // prefix_prefill.py:144:24
	add.s32 	%r1197, %r2899, 56;
	.loc	1 158 50                        // prefix_prefill.py:158:50
	add.s32 	%r1198, %r2899, 48;
	setp.lt.s32 	%p312, %r1198, %r5;
	setp.lt.s32 	%p317, %r1197, %r5;
	.loc	1 156 26                        // prefix_prefill.py:156:26
	add.s64 	%rd479, %rd187, %rd840;
	add.s64 	%rd480, %rd187, %rd841;
	mov.b32 	%r1184, 0;
	.loc	1 156 16                        // prefix_prefill.py:156:16
	// begin inline asm
	mov.u32 %r2955, 0x0;
	mov.u32 %r2956, 0x0;
	mov.u32 %r2953, 0x0;
	mov.u32 %r2954, 0x0;
	@%p312 ld.global.v4.b32 { %r2955, %r2956, %r2953, %r2954 }, [ %rd479 + 0 ];
	@!%p312 mov.u32 %r2955, %r1184;
	@!%p312 mov.u32 %r2956, %r1184;
	@!%p312 mov.u32 %r2953, %r1184;
	@!%p312 mov.u32 %r2954, %r1184;
	// end inline asm
	// begin inline asm
	mov.u32 %r2949, 0x0;
	mov.u32 %r2950, 0x0;
	mov.u32 %r2951, 0x0;
	mov.u32 %r2952, 0x0;
	@%p317 ld.global.v4.b32 { %r2949, %r2950, %r2951, %r2952 }, [ %rd480 + 0 ];
	@!%p317 mov.u32 %r2949, %r1184;
	@!%p317 mov.u32 %r2950, %r1184;
	@!%p317 mov.u32 %r2951, %r1184;
	@!%p317 mov.u32 %r2952, %r1184;
	// end inline asm
	.loc	1 153 11                        // prefix_prefill.py:153:11
	bra.uni 	$L__BB0_27;
$L__BB0_26:                             //   in Loop: Header=BB0_2 Depth=1
	.loc	1 161 39                        // prefix_prefill.py:161:39
	add.s64 	%rd475, %rd187, %rd840;
	add.s64 	%rd476, %rd187, %rd841;
	.loc	1 161 29                        // prefix_prefill.py:161:29
	// begin inline asm
	mov.u32 %r2955, 0x0;
	mov.u32 %r2956, 0x0;
	mov.u32 %r2953, 0x0;
	mov.u32 %r2954, 0x0;
	@%p744 ld.global.v4.b32 { %r2955, %r2956, %r2953, %r2954 }, [ %rd475 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r2949, 0x0;
	mov.u32 %r2950, 0x0;
	mov.u32 %r2951, 0x0;
	mov.u32 %r2952, 0x0;
	@%p744 ld.global.v4.b32 { %r2949, %r2950, %r2951, %r2952 }, [ %rd476 + 0 ];
	// end inline asm
$L__BB0_27:                             //   in Loop: Header=BB0_2 Depth=1
	.loc	1 0 0                           // prefix_prefill.py:0:0
	fma.rn.f32 	%f1145, %f853, %f4592, %f881;
	fma.rn.f32 	%f1146, %f854, %f4594, %f882;
	fma.rn.f32 	%f1147, %f855, %f4596, %f883;
	fma.rn.f32 	%f1148, %f856, %f4598, %f884;
	.loc	1 153 11                        // prefix_prefill.py:153:11
	bar.sync 	0;
	st.shared.v4.b32 	[%r84], {%r2955, %r2956, %r2953, %r2954};
	st.shared.v4.b32 	[%r84+1024], {%r2949, %r2950, %r2951, %r2952};
	.loc	1 169 23                        // prefix_prefill.py:169:23
	// begin inline asm
	fence.proxy.async.shared::cta;
	// end inline asm
	bar.sync 	0;
	shfl.sync.idx.b32	%r1203, %r2889, 0, 31, -1;
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	shl.b32 	%r1204, %r1203, 7;
	and.b32  	%r1205, %r1204, 384;
	cvt.u64.u32 	%rd515, %r1205;
	add.s64 	%rd483, %rd2, %rd515;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f5244,%f5245,%f5246,%f5247,%f5248,%f5249,%f5250,%f5251}, %rd483, %rd3, 0, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd485, %rd4, %rd515;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f5244,%f5245,%f5246,%f5247,%f5248,%f5249,%f5250,%f5251}, %rd485, %rd5, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd487, %rd6, %rd515;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f5244,%f5245,%f5246,%f5247,%f5248,%f5249,%f5250,%f5251}, %rd487, %rd7, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd489, %rd8, %rd515;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f5244,%f5245,%f5246,%f5247,%f5248,%f5249,%f5250,%f5251}, %rd489, %rd9, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd491, %rd10, %rd515;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f5244,%f5245,%f5246,%f5247,%f5248,%f5249,%f5250,%f5251}, %rd491, %rd11, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd493, %rd12, %rd515;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f5244,%f5245,%f5246,%f5247,%f5248,%f5249,%f5250,%f5251}, %rd493, %rd13, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd495, %rd14, %rd515;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f5244,%f5245,%f5246,%f5247,%f5248,%f5249,%f5250,%f5251}, %rd495, %rd15, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd497, %rd16, %rd515;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f5244,%f5245,%f5246,%f5247,%f5248,%f5249,%f5250,%f5251}, %rd497, %rd17, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd499, %rd18, %rd515;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f5364,%f5365,%f5366,%f5367,%f5368,%f5369,%f5370,%f5371}, %rd499, %rd3, 0, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd501, %rd19, %rd515;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f5364,%f5365,%f5366,%f5367,%f5368,%f5369,%f5370,%f5371}, %rd501, %rd5, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd503, %rd20, %rd515;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f5364,%f5365,%f5366,%f5367,%f5368,%f5369,%f5370,%f5371}, %rd503, %rd7, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd505, %rd21, %rd515;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f5364,%f5365,%f5366,%f5367,%f5368,%f5369,%f5370,%f5371}, %rd505, %rd9, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd507, %rd22, %rd515;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f5364,%f5365,%f5366,%f5367,%f5368,%f5369,%f5370,%f5371}, %rd507, %rd11, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd509, %rd23, %rd515;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f5364,%f5365,%f5366,%f5367,%f5368,%f5369,%f5370,%f5371}, %rd509, %rd13, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd511, %rd24, %rd515;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f5364,%f5365,%f5366,%f5367,%f5368,%f5369,%f5370,%f5371}, %rd511, %rd15, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd513, %rd25, %rd515;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f5364,%f5365,%f5366,%f5367,%f5368,%f5369,%f5370,%f5371}, %rd513, %rd17, %p744, 1, 1, 0, 0;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	// begin inline asm
	// wait for regs: %f5244,%f5245,%f5246,%f5247,%f5248,%f5249,%f5250,%f5251,%f5364,%f5365,%f5366,%f5367,%f5368,%f5369,%f5370,%f5371
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	1 170 55                        // prefix_prefill.py:170:55
	setp.lt.s32 	%p337, %r315, %r5;
	setp.lt.s32 	%p338, %r316, %r5;
	setp.lt.s32 	%p339, %r317, %r5;
	setp.lt.s32 	%p340, %r318, %r5;
	.loc	1 171 22                        // prefix_prefill.py:171:22
	selp.f32 	%f5532, %f5244, 0fFF800000, %p337;
	selp.f32 	%f5533, %f5245, 0fFF800000, %p338;
	selp.f32 	%f5534, %f5246, 0fFF800000, %p337;
	selp.f32 	%f5535, %f5247, 0fFF800000, %p338;
	selp.f32 	%f5536, %f5248, 0fFF800000, %p339;
	selp.f32 	%f5537, %f5249, 0fFF800000, %p340;
	selp.f32 	%f5538, %f5250, 0fFF800000, %p339;
	selp.f32 	%f5539, %f5251, 0fFF800000, %p340;
	selp.f32 	%f5540, %f5364, 0fFF800000, %p337;
	selp.f32 	%f5541, %f5365, 0fFF800000, %p338;
	selp.f32 	%f5542, %f5366, 0fFF800000, %p337;
	selp.f32 	%f5543, %f5367, 0fFF800000, %p338;
	selp.f32 	%f5544, %f5368, 0fFF800000, %p339;
	selp.f32 	%f5545, %f5369, 0fFF800000, %p340;
	selp.f32 	%f5546, %f5370, 0fFF800000, %p339;
	selp.f32 	%f5547, %f5371, 0fFF800000, %p340;
	.loc	1 172 14                        // prefix_prefill.py:172:14
	mul.f32 	%f5548, %f2401, %f5532;
	mul.f32 	%f5549, %f2401, %f5533;
	mul.f32 	%f5550, %f2401, %f5534;
	mul.f32 	%f5551, %f2401, %f5535;
	mul.f32 	%f5552, %f2401, %f5536;
	mul.f32 	%f5553, %f2401, %f5537;
	mul.f32 	%f5554, %f2401, %f5538;
	mul.f32 	%f5555, %f2401, %f5539;
	mul.f32 	%f5556, %f2401, %f5540;
	mul.f32 	%f5557, %f2401, %f5541;
	mul.f32 	%f5558, %f2401, %f5542;
	mul.f32 	%f5559, %f2401, %f5543;
	mul.f32 	%f5560, %f2401, %f5544;
	mul.f32 	%f5561, %f2401, %f5545;
	mul.f32 	%f5562, %f2401, %f5546;
	mul.f32 	%f5563, %f2401, %f5547;
$L__tmp13:
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f5564, %f5548, %f5549;
	max.f32 	%f5565, %f5550, %f5551;
	max.f32 	%f5566, %f5564, %f5552;
	max.f32 	%f5567, %f5566, %f5553;
	max.f32 	%f5568, %f5565, %f5554;
	max.f32 	%f5569, %f5568, %f5555;
	max.f32 	%f5570, %f5556, %f5557;
	max.f32 	%f5571, %f5558, %f5559;
	max.f32 	%f5572, %f5570, %f5560;
	max.f32 	%f5573, %f5572, %f5561;
	max.f32 	%f5574, %f5571, %f5562;
	max.f32 	%f5575, %f5574, %f5563;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r1206, %f5567;
	shfl.sync.bfly.b32	%r1207, %r1206, 2, 31, -1;
	mov.b32 	%f5576, %r1207;
	mov.b32 	%r1208, %f5569;
	mov.b32 	%r1209, %f5573;
	mov.b32 	%r1210, %f5575;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f5577, %f5567, %f5576;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r1211, %f5577;
	shfl.sync.bfly.b32	%r1212, %r1211, 1, 31, -1;
	shfl.sync.bfly.b32	%r1213, %r1208, 2, 31, -1;
	mov.b32 	%f5578, %r1213;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f5579, %f5569, %f5578;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r1214, %f5579;
	shfl.sync.bfly.b32	%r1215, %r1214, 1, 31, -1;
	shfl.sync.bfly.b32	%r1216, %r1209, 2, 31, -1;
	mov.b32 	%f5580, %r1216;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f5581, %f5573, %f5580;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r1217, %f5581;
	shfl.sync.bfly.b32	%r1218, %r1217, 1, 31, -1;
	shfl.sync.bfly.b32	%r1219, %r1210, 2, 31, -1;
	mov.b32 	%f5582, %r1219;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f5583, %f5575, %f5582;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r1220, %f5583;
	shfl.sync.bfly.b32	%r1221, %r1220, 1, 31, -1;
	mov.b32 	%f5584, %r1221;
	mov.b32 	%f5585, %r1218;
	mov.b32 	%f5586, %r1215;
	mov.b32 	%f5587, %r1212;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f5588, %f5577, %f5587;
	max.f32 	%f5589, %f5579, %f5586;
	max.f32 	%f5590, %f5581, %f5585;
	max.f32 	%f5591, %f5583, %f5584;
$L__tmp14:
	.loc	1 190 31                        // prefix_prefill.py:190:31
	max.f32 	%f10211, %f860, %f5591;
	max.f32 	%f10210, %f859, %f5590;
	max.f32 	%f10209, %f858, %f5589;
	max.f32 	%f10208, %f857, %f5588;
	.loc	1 191 24                        // prefix_prefill.py:191:24
	neg.f32 	%f5592, %f10208;
	fma.rn.f32 	%f5593, %f2401, %f5532, %f5592;
	fma.rn.f32 	%f5594, %f2401, %f5533, %f5592;
	neg.f32 	%f5595, %f10209;
	fma.rn.f32 	%f5596, %f2401, %f5534, %f5595;
	fma.rn.f32 	%f5597, %f2401, %f5535, %f5595;
	fma.rn.f32 	%f5598, %f2401, %f5536, %f5592;
	fma.rn.f32 	%f5599, %f2401, %f5537, %f5592;
	fma.rn.f32 	%f5600, %f2401, %f5538, %f5595;
	fma.rn.f32 	%f5601, %f2401, %f5539, %f5595;
	neg.f32 	%f5602, %f10210;
	fma.rn.f32 	%f5603, %f2401, %f5540, %f5602;
	fma.rn.f32 	%f5604, %f2401, %f5541, %f5602;
	neg.f32 	%f5605, %f10211;
	fma.rn.f32 	%f5606, %f2401, %f5542, %f5605;
	fma.rn.f32 	%f5607, %f2401, %f5543, %f5605;
	fma.rn.f32 	%f5608, %f2401, %f5544, %f5602;
	fma.rn.f32 	%f5609, %f2401, %f5545, %f5602;
	fma.rn.f32 	%f5610, %f2401, %f5546, %f5605;
	fma.rn.f32 	%f5611, %f2401, %f5547, %f5605;
	.loc	1 191 19                        // prefix_prefill.py:191:19
	mul.f32 	%f5493, %f5593, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5492, %f5493;
	// end inline asm
	mul.f32 	%f5495, %f5594, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5494, %f5495;
	// end inline asm
	mul.f32 	%f5497, %f5596, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5496, %f5497;
	// end inline asm
	mul.f32 	%f5499, %f5597, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5498, %f5499;
	// end inline asm
	mul.f32 	%f5501, %f5598, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5500, %f5501;
	// end inline asm
	mul.f32 	%f5503, %f5599, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5502, %f5503;
	// end inline asm
	mul.f32 	%f5505, %f5600, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5504, %f5505;
	// end inline asm
	mul.f32 	%f5507, %f5601, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5506, %f5507;
	// end inline asm
	mul.f32 	%f5509, %f5603, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5508, %f5509;
	// end inline asm
	mul.f32 	%f5511, %f5604, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5510, %f5511;
	// end inline asm
	mul.f32 	%f5513, %f5606, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5512, %f5513;
	// end inline asm
	mul.f32 	%f5515, %f5607, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5514, %f5515;
	// end inline asm
	mul.f32 	%f5517, %f5608, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5516, %f5517;
	// end inline asm
	mul.f32 	%f5519, %f5609, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5518, %f5519;
	// end inline asm
	mul.f32 	%f5521, %f5610, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5520, %f5521;
	// end inline asm
	mul.f32 	%f5523, %f5611, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5522, %f5523;
	// end inline asm
$L__tmp15:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f5612, %f5492, %f5494;
	add.f32 	%f5613, %f5496, %f5498;
	add.f32 	%f5614, %f5612, %f5500;
	add.f32 	%f5615, %f5614, %f5502;
	add.f32 	%f5616, %f5613, %f5504;
	add.f32 	%f5617, %f5616, %f5506;
	add.f32 	%f5618, %f5508, %f5510;
	add.f32 	%f5619, %f5512, %f5514;
	add.f32 	%f5620, %f5618, %f5516;
	add.f32 	%f5621, %f5620, %f5518;
	add.f32 	%f5622, %f5619, %f5520;
	add.f32 	%f5623, %f5622, %f5522;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r1222, %f5615;
	shfl.sync.bfly.b32	%r1223, %r1222, 2, 31, -1;
	mov.b32 	%f5624, %r1223;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f5625, %f5615, %f5624;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r1224, %f5625;
	shfl.sync.bfly.b32	%r1225, %r1224, 1, 31, -1;
	mov.b32 	%r1226, %f5617;
	shfl.sync.bfly.b32	%r1227, %r1226, 2, 31, -1;
	mov.b32 	%f5626, %r1227;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f5627, %f5617, %f5626;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r1228, %f5627;
	shfl.sync.bfly.b32	%r1229, %r1228, 1, 31, -1;
	mov.b32 	%r1230, %f5621;
	shfl.sync.bfly.b32	%r1231, %r1230, 2, 31, -1;
	mov.b32 	%f5628, %r1231;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f5629, %f5621, %f5628;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r1232, %f5629;
	shfl.sync.bfly.b32	%r1233, %r1232, 1, 31, -1;
	mov.b32 	%r1234, %f5623;
	shfl.sync.bfly.b32	%r1235, %r1234, 2, 31, -1;
	mov.b32 	%f5630, %r1235;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f5631, %f5623, %f5630;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r1236, %f5631;
	shfl.sync.bfly.b32	%r1237, %r1236, 1, 31, -1;
	mov.b32 	%f5632, %r1237;
	mov.b32 	%f5633, %r1233;
	mov.b32 	%f5634, %r1229;
	mov.b32 	%f5635, %r1225;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f1169, %f5625, %f5635;
	add.f32 	%f1170, %f5627, %f5634;
	add.f32 	%f1171, %f5629, %f5633;
	add.f32 	%f1172, %f5631, %f5632;
$L__tmp16:
	.loc	1 193 29                        // prefix_prefill.py:193:29
	sub.f32 	%f5636, %f857, %f10208;
	sub.f32 	%f5637, %f858, %f10209;
	sub.f32 	%f5638, %f859, %f10210;
	sub.f32 	%f5639, %f860, %f10211;
	.loc	1 193 23                        // prefix_prefill.py:193:23
	mul.f32 	%f5525, %f5636, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5524, %f5525;
	// end inline asm
	mul.f32 	%f5527, %f5637, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5526, %f5527;
	// end inline asm
	mul.f32 	%f5529, %f5638, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5528, %f5529;
	// end inline asm
	mul.f32 	%f5531, %f5639, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5530, %f5531;
	// end inline asm
	.loc	1 194 20                        // prefix_prefill.py:194:20
	mul.f32 	%f10216, %f4964, %f5524;
	mul.f32 	%f10217, %f4965, %f5524;
	mul.f32 	%f10218, %f4966, %f5526;
	mul.f32 	%f10219, %f4967, %f5526;
	mul.f32 	%f10220, %f4968, %f5524;
	mul.f32 	%f10221, %f4969, %f5524;
	mul.f32 	%f10222, %f4970, %f5526;
	mul.f32 	%f10223, %f4971, %f5526;
	mul.f32 	%f10224, %f4972, %f5524;
	mul.f32 	%f10225, %f4973, %f5524;
	mul.f32 	%f10226, %f4974, %f5526;
	mul.f32 	%f10227, %f4975, %f5526;
	mul.f32 	%f10228, %f4976, %f5524;
	mul.f32 	%f10229, %f4977, %f5524;
	mul.f32 	%f10230, %f4978, %f5526;
	mul.f32 	%f10231, %f4979, %f5526;
	mul.f32 	%f10232, %f4980, %f5524;
	mul.f32 	%f10233, %f4981, %f5524;
	mul.f32 	%f10234, %f4982, %f5526;
	mul.f32 	%f10235, %f4983, %f5526;
	mul.f32 	%f10236, %f4984, %f5524;
	mul.f32 	%f10237, %f4985, %f5524;
	mul.f32 	%f10238, %f4986, %f5526;
	mul.f32 	%f10239, %f4987, %f5526;
	mul.f32 	%f10240, %f4988, %f5524;
	mul.f32 	%f10241, %f4989, %f5524;
	mul.f32 	%f10242, %f4990, %f5526;
	mul.f32 	%f10243, %f4991, %f5526;
	mul.f32 	%f10244, %f4992, %f5524;
	mul.f32 	%f10245, %f4993, %f5524;
	mul.f32 	%f10246, %f4994, %f5526;
	mul.f32 	%f10247, %f4995, %f5526;
	mul.f32 	%f10248, %f4996, %f5524;
	mul.f32 	%f10249, %f4997, %f5524;
	mul.f32 	%f10250, %f4998, %f5526;
	mul.f32 	%f10251, %f4999, %f5526;
	mul.f32 	%f10252, %f5000, %f5524;
	mul.f32 	%f10253, %f5001, %f5524;
	mul.f32 	%f10254, %f5002, %f5526;
	mul.f32 	%f10255, %f5003, %f5526;
	mul.f32 	%f10256, %f5004, %f5524;
	mul.f32 	%f10257, %f5005, %f5524;
	mul.f32 	%f10258, %f5006, %f5526;
	mul.f32 	%f10259, %f5007, %f5526;
	mul.f32 	%f10260, %f5008, %f5524;
	mul.f32 	%f10261, %f5009, %f5524;
	mul.f32 	%f10262, %f5010, %f5526;
	mul.f32 	%f10263, %f5011, %f5526;
	mul.f32 	%f10264, %f5012, %f5524;
	mul.f32 	%f10265, %f5013, %f5524;
	mul.f32 	%f10266, %f5014, %f5526;
	mul.f32 	%f10267, %f5015, %f5526;
	mul.f32 	%f10268, %f5016, %f5524;
	mul.f32 	%f10269, %f5017, %f5524;
	mul.f32 	%f10270, %f5018, %f5526;
	mul.f32 	%f10271, %f5019, %f5526;
	mul.f32 	%f10272, %f5020, %f5524;
	mul.f32 	%f10273, %f5021, %f5524;
	mul.f32 	%f10274, %f5022, %f5526;
	mul.f32 	%f10275, %f5023, %f5526;
	mul.f32 	%f10276, %f5024, %f5524;
	mul.f32 	%f10277, %f5025, %f5524;
	mul.f32 	%f10278, %f5026, %f5526;
	mul.f32 	%f10279, %f5027, %f5526;
	mul.f32 	%f10280, %f5028, %f5528;
	mul.f32 	%f10281, %f5029, %f5528;
	mul.f32 	%f10282, %f5030, %f5530;
	mul.f32 	%f10283, %f5031, %f5530;
	mul.f32 	%f10284, %f5032, %f5528;
	mul.f32 	%f10285, %f5033, %f5528;
	mul.f32 	%f10286, %f5034, %f5530;
	mul.f32 	%f10287, %f5035, %f5530;
	mul.f32 	%f10288, %f5036, %f5528;
	mul.f32 	%f10289, %f5037, %f5528;
	mul.f32 	%f10290, %f5038, %f5530;
	mul.f32 	%f10291, %f5039, %f5530;
	mul.f32 	%f10292, %f5040, %f5528;
	mul.f32 	%f10293, %f5041, %f5528;
	mul.f32 	%f10294, %f5042, %f5530;
	mul.f32 	%f10295, %f5043, %f5530;
	mul.f32 	%f10296, %f5044, %f5528;
	mul.f32 	%f10297, %f5045, %f5528;
	mul.f32 	%f10298, %f5046, %f5530;
	mul.f32 	%f10299, %f5047, %f5530;
	mul.f32 	%f10300, %f5048, %f5528;
	mul.f32 	%f10301, %f5049, %f5528;
	mul.f32 	%f10302, %f5050, %f5530;
	mul.f32 	%f10303, %f5051, %f5530;
	mul.f32 	%f10304, %f5052, %f5528;
	mul.f32 	%f10305, %f5053, %f5528;
	mul.f32 	%f10306, %f5054, %f5530;
	mul.f32 	%f10307, %f5055, %f5530;
	mul.f32 	%f10308, %f5056, %f5528;
	mul.f32 	%f10309, %f5057, %f5528;
	mul.f32 	%f10310, %f5058, %f5530;
	mul.f32 	%f10311, %f5059, %f5530;
	mul.f32 	%f10312, %f5060, %f5528;
	mul.f32 	%f10313, %f5061, %f5528;
	mul.f32 	%f10314, %f5062, %f5530;
	mul.f32 	%f10315, %f5063, %f5530;
	mul.f32 	%f10316, %f5064, %f5528;
	mul.f32 	%f10317, %f5065, %f5528;
	mul.f32 	%f10318, %f5066, %f5530;
	mul.f32 	%f10319, %f5067, %f5530;
	mul.f32 	%f10320, %f5068, %f5528;
	mul.f32 	%f10321, %f5069, %f5528;
	mul.f32 	%f10322, %f5070, %f5530;
	mul.f32 	%f10323, %f5071, %f5530;
	mul.f32 	%f10324, %f5072, %f5528;
	mul.f32 	%f10325, %f5073, %f5528;
	mul.f32 	%f10326, %f5074, %f5530;
	mul.f32 	%f10327, %f5075, %f5530;
	mul.f32 	%f10328, %f5076, %f5528;
	mul.f32 	%f10329, %f5077, %f5528;
	mul.f32 	%f10330, %f5078, %f5530;
	mul.f32 	%f10331, %f5079, %f5530;
	mul.f32 	%f10332, %f5080, %f5528;
	mul.f32 	%f10333, %f5081, %f5528;
	mul.f32 	%f10334, %f5082, %f5530;
	mul.f32 	%f10335, %f5083, %f5530;
	mul.f32 	%f10336, %f5084, %f5528;
	mul.f32 	%f10337, %f5085, %f5528;
	mul.f32 	%f10338, %f5086, %f5530;
	mul.f32 	%f10339, %f5087, %f5530;
	mul.f32 	%f10340, %f5088, %f5528;
	mul.f32 	%f10341, %f5089, %f5528;
	mul.f32 	%f10342, %f5090, %f5530;
	mul.f32 	%f10343, %f5091, %f5530;
	mul.wide.s32 	%rd838, %r321, 2;
	mul.wide.s32 	%rd839, %r329, 2;
	.loc	1 197 11                        // prefix_prefill.py:197:11
	@%p309 bra 	$L__BB0_29;
	bra.uni 	$L__BB0_28;
$L__BB0_29:                             //   in Loop: Header=BB0_2 Depth=1
	.loc	1 205 39                        // prefix_prefill.py:205:39
	add.s64 	%rd516, %rd188, %rd838;
	add.s64 	%rd517, %rd188, %rd839;
	.loc	1 205 29                        // prefix_prefill.py:205:29
	// begin inline asm
	mov.u32 %r2957, 0x0;
	mov.u32 %r2958, 0x0;
	mov.u32 %r2959, 0x0;
	mov.u32 %r2960, 0x0;
	@%p744 ld.global.v4.b32 { %r2957, %r2958, %r2959, %r2960 }, [ %rd516 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r2961, 0x0;
	mov.u32 %r2962, 0x0;
	mov.u32 %r2963, 0x0;
	mov.u32 %r2964, 0x0;
	@%p744 ld.global.v4.b32 { %r2961, %r2962, %r2963, %r2964 }, [ %rd517 + 0 ];
	// end inline asm
	bra.uni 	$L__BB0_30;
$L__BB0_4:                              // %.preheader
	.loc	1 135 28                        // prefix_prefill.py:135:28
	setp.ge.s32 	%p378, %r2965, %r5;
	@%p378 bra 	$L__BB0_36;
// %bb.5:                               // %.lr.ph732
	.loc	1 0 28                          // prefix_prefill.py:0:28
	shl.b32 	%r1296, %r2888, 8;
	or.b32  	%r1298, %r1296, %r725;
	add.s32 	%r1300, %r727, 32768;
	add.s32 	%r94, %r1300, %r1298;
	shr.u32 	%r1301, %r727, 4;
	cvt.u64.u32 	%rd554, %r1301;
	and.b64  	%rd555, %rd554, 16383;
	or.b64  	%rd27, %rd555, 4611686293372403712;
	shr.u32 	%r1302, %r1300, 4;
	cvt.u64.u32 	%rd556, %r1302;
	and.b64  	%rd557, %rd556, 16383;
	or.b64  	%rd28, %rd557, 4611686293313683456;
	add.s64 	%rd29, %rd555, 4611686293372403714;
	add.s64 	%rd30, %rd557, 4611686293313683458;
	add.s64 	%rd31, %rd555, 4611686293372403716;
	add.s64 	%rd32, %rd557, 4611686293313683460;
	add.s64 	%rd33, %rd555, 4611686293372403718;
	add.s64 	%rd34, %rd557, 4611686293313683462;
	add.s64 	%rd35, %rd555, 4611686293372404736;
	add.s64 	%rd36, %rd557, 4611686293313683584;
	add.s64 	%rd37, %rd555, 4611686293372404738;
	add.s64 	%rd38, %rd557, 4611686293313683586;
	add.s64 	%rd39, %rd555, 4611686293372404740;
	add.s64 	%rd40, %rd557, 4611686293313683588;
	add.s64 	%rd41, %rd555, 4611686293372404742;
	add.s64 	%rd42, %rd557, 4611686293313683590;
	add.s64 	%rd43, %rd555, 4611686293372404224;
	add.s64 	%rd44, %rd555, 4611686293372404226;
	add.s64 	%rd45, %rd555, 4611686293372404228;
	add.s64 	%rd46, %rd555, 4611686293372404230;
	add.s64 	%rd47, %rd555, 4611686293372405248;
	add.s64 	%rd48, %rd555, 4611686293372405250;
	add.s64 	%rd49, %rd555, 4611686293372405252;
	add.s64 	%rd50, %rd555, 4611686293372405254;
	add.s32 	%r97, %r1300, %r2890;
	add.s32 	%r98, %r1300, %r2891;
	shl.b32 	%r1306, %r2892, 1;
	or.b32  	%r1308, %r2893, %r1306;
	add.s32 	%r99, %r1300, %r1308;
	add.s32 	%r100, %r99, 2048;
	or.b64  	%rd51, %rd557, -4611685949691133952;
	mov.f32 	%f10348, %f10208;
	mov.f32 	%f10349, %f10209;
	mov.f32 	%f10350, %f10210;
	mov.f32 	%f10351, %f10211;
	bra.uni 	$L__BB0_6;
$L__BB0_34:                             //   in Loop: Header=BB0_6 Depth=1
	.loc	1 205 39                        // prefix_prefill.py:205:39
	mul.wide.s32 	%rd603, %r395, 2;
	add.s64 	%rd601, %rd188, %rd603;
	mul.wide.s32 	%rd604, %r403, 2;
	add.s64 	%rd602, %rd188, %rd604;
	.loc	1 205 29                        // prefix_prefill.py:205:29
	// begin inline asm
	mov.u32 %r2974, 0x0;
	mov.u32 %r2975, 0x0;
	mov.u32 %r2976, 0x0;
	mov.u32 %r2977, 0x0;
	@%p744 ld.global.v4.b32 { %r2974, %r2975, %r2976, %r2977 }, [ %rd601 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r2978, 0x0;
	mov.u32 %r2979, 0x0;
	mov.u32 %r2980, 0x0;
	mov.u32 %r2981, 0x0;
	@%p744 ld.global.v4.b32 { %r2978, %r2979, %r2980, %r2981 }, [ %rd602 + 0 ];
	// end inline asm
$L__BB0_35:                             //   in Loop: Header=BB0_6 Depth=1
	.loc	1 197 11                        // prefix_prefill.py:197:11
	bar.sync 	0;
	st.shared.v4.b32 	[%r99], {%r2974, %r2975, %r2976, %r2977};
	st.shared.v4.b32 	[%r100], {%r2978, %r2979, %r2980, %r2981};
	.loc	1 211 17                        // prefix_prefill.py:211:17
	mov.b32 	%r1446, %f6424;
	// begin inline asm
	cvt.rn.bf16.f32 %rs289, %r1446;
	// end inline asm
	mov.b32 	%r1447, %f6426;
	// begin inline asm
	cvt.rn.bf16.f32 %rs290, %r1447;
	// end inline asm
	mov.b32 	%r1448, %f6428;
	// begin inline asm
	cvt.rn.bf16.f32 %rs291, %r1448;
	// end inline asm
	mov.b32 	%r1449, %f6430;
	// begin inline asm
	cvt.rn.bf16.f32 %rs292, %r1449;
	// end inline asm
	mov.b32 	%r1450, %f6432;
	// begin inline asm
	cvt.rn.bf16.f32 %rs293, %r1450;
	// end inline asm
	mov.b32 	%r1451, %f6434;
	// begin inline asm
	cvt.rn.bf16.f32 %rs294, %r1451;
	// end inline asm
	mov.b32 	%r1452, %f6436;
	// begin inline asm
	cvt.rn.bf16.f32 %rs295, %r1452;
	// end inline asm
	mov.b32 	%r1453, %f6438;
	// begin inline asm
	cvt.rn.bf16.f32 %rs296, %r1453;
	// end inline asm
	mov.b32 	%r1454, %f6440;
	// begin inline asm
	cvt.rn.bf16.f32 %rs297, %r1454;
	// end inline asm
	mov.b32 	%r1455, %f6442;
	// begin inline asm
	cvt.rn.bf16.f32 %rs298, %r1455;
	// end inline asm
	mov.b32 	%r1456, %f6444;
	// begin inline asm
	cvt.rn.bf16.f32 %rs299, %r1456;
	// end inline asm
	mov.b32 	%r1457, %f6446;
	// begin inline asm
	cvt.rn.bf16.f32 %rs300, %r1457;
	// end inline asm
	mov.b32 	%r1458, %f6448;
	// begin inline asm
	cvt.rn.bf16.f32 %rs301, %r1458;
	// end inline asm
	mov.b32 	%r1459, %f6450;
	// begin inline asm
	cvt.rn.bf16.f32 %rs302, %r1459;
	// end inline asm
	mov.b32 	%r1460, %f6452;
	// begin inline asm
	cvt.rn.bf16.f32 %rs303, %r1460;
	// end inline asm
	mov.b32 	%r1461, %f6454;
	// begin inline asm
	cvt.rn.bf16.f32 %rs304, %r1461;
	// end inline asm
	.loc	1 213 24                        // prefix_prefill.py:213:24
	// begin inline asm
	fence.proxy.async.shared::cta;
	// end inline asm
	bar.sync 	0;
	mov.b32 	%r1470, {%rs289, %rs290};
	mov.b32 	%r1471, {%rs291, %rs292};
	mov.b32 	%r1472, {%rs293, %rs294};
	mov.b32 	%r1473, {%rs295, %rs296};
	mov.b32 	%r1474, {%rs297, %rs298};
	mov.b32 	%r1475, {%rs299, %rs300};
	mov.b32 	%r1476, {%rs301, %rs302};
	mov.b32 	%r1477, {%rs303, %rs304};
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.bf16.bf16 {%f10216,%f10217,%f10218,%f10219,%f10220,%f10221,%f10222,%f10223,%f10224,%f10225,%f10226,%f10227,%f10228,%f10229,%f10230,%f10231,%f10232,%f10233,%f10234,%f10235,%f10236,%f10237,%f10238,%f10239,%f10240,%f10241,%f10242,%f10243,%f10244,%f10245,%f10246,%f10247,%f10248,%f10249,%f10250,%f10251,%f10252,%f10253,%f10254,%f10255,%f10256,%f10257,%f10258,%f10259,%f10260,%f10261,%f10262,%f10263,%f10264,%f10265,%f10266,%f10267,%f10268,%f10269,%f10270,%f10271,%f10272,%f10273,%f10274,%f10275,%f10276,%f10277,%f10278,%f10279}, {%r1470,%r1471,%r1472,%r1473}, %rd51, %p744, 1, 1, 0;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.bf16.bf16 {%f10280,%f10281,%f10282,%f10283,%f10284,%f10285,%f10286,%f10287,%f10288,%f10289,%f10290,%f10291,%f10292,%f10293,%f10294,%f10295,%f10296,%f10297,%f10298,%f10299,%f10300,%f10301,%f10302,%f10303,%f10304,%f10305,%f10306,%f10307,%f10308,%f10309,%f10310,%f10311,%f10312,%f10313,%f10314,%f10315,%f10316,%f10317,%f10318,%f10319,%f10320,%f10321,%f10322,%f10323,%f10324,%f10325,%f10326,%f10327,%f10328,%f10329,%f10330,%f10331,%f10332,%f10333,%f10334,%f10335,%f10336,%f10337,%f10338,%f10339,%f10340,%f10341,%f10342,%f10343}, {%r1474,%r1475,%r1476,%r1477}, %rd51, %p744, 1, 1, 0;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	// begin inline asm
	// wait for regs: %f10216,%f10217,%f10218,%f10219,%f10220,%f10221,%f10222,%f10223,%f10224,%f10225,%f10226,%f10227,%f10228,%f10229,%f10230,%f10231,%f10232,%f10233,%f10234,%f10235,%f10236,%f10237,%f10238,%f10239,%f10240,%f10241,%f10242,%f10243,%f10244,%f10245,%f10246,%f10247,%f10248,%f10249,%f10250,%f10251,%f10252,%f10253,%f10254,%f10255,%f10256,%f10257,%f10258,%f10259,%f10260,%f10261,%f10262,%f10263,%f10264,%f10265,%f10266,%f10267,%f10268,%f10269,%f10270,%f10271,%f10272,%f10273,%f10274,%f10275,%f10276,%f10277,%f10278,%f10279,%f10280,%f10281,%f10282,%f10283,%f10284,%f10285,%f10286,%f10287,%f10288,%f10289,%f10290,%f10291,%f10292,%f10293,%f10294,%f10295,%f10296,%f10297,%f10298,%f10299,%f10300,%f10301,%f10302,%f10303,%f10304,%f10305,%f10306,%f10307,%f10308,%f10309,%f10310,%f10311,%f10312,%f10313,%f10314,%f10315,%f10316,%f10317,%f10318,%f10319,%f10320,%f10321,%f10322,%f10323,%f10324,%f10325,%f10326,%f10327,%f10328,%f10329,%f10330,%f10331,%f10332,%f10333,%f10334,%f10335,%f10336,%f10337,%f10338,%f10339,%f10340,%f10341,%f10342,%f10343
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	1 215 28                        // prefix_prefill.py:215:28
	fma.rn.f32 	%f10480, %f10480, %f6456, %f1593;
	fma.rn.f32 	%f10481, %f10481, %f6458, %f1594;
	fma.rn.f32 	%f10482, %f10482, %f6460, %f1595;
	fma.rn.f32 	%f10483, %f10483, %f6462, %f1596;
	.loc	1 135 28                        // prefix_prefill.py:135:28
	setp.lt.s32 	%p464, %r411, %r5;
	mov.u32 	%r2965, %r411;
	mov.f32 	%f10348, %f10208;
	mov.f32 	%f10349, %f10209;
	mov.f32 	%f10350, %f10210;
	mov.f32 	%f10351, %f10211;
	@%p464 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_36;
$L__BB0_6:                              // =>This Inner Loop Header: Depth=1
	.loc	1 139 33                        // prefix_prefill.py:139:33
	shr.s32 	%r1310, %r2965, 4;
	.loc	1 139 21                        // prefix_prefill.py:139:21
	mul.wide.s32 	%rd559, %r1310, 4;
	add.s64 	%rd558, %rd1, %rd559;
	.loc	1 138 21                        // prefix_prefill.py:138:21
	// begin inline asm
	mov.u32 %r1309, 0x0;
	@%p744 ld.global.b32 { %r1309 }, [ %rd558 + 0 ];
	// end inline asm
	.loc	1 143 12                        // prefix_prefill.py:143:12
	mad.lo.s32 	%r1311, %r1309, %r486, %r2887;
	.loc	1 144 24                        // prefix_prefill.py:144:24
	add.s32 	%r387, %r11, %r2965;
	add.s32 	%r388, %r387, 8;
	add.s32 	%r389, %r72, %r2965;
	add.s32 	%r390, %r389, 1;
	add.s32 	%r391, %r389, 8;
	.loc	1 144 46                        // prefix_prefill.py:144:46
	add.s32 	%r392, %r389, 9;
	shr.s32 	%r1312, %r387, 31;
	shr.u32 	%r1313, %r1312, 28;
	add.s32 	%r1314, %r387, %r1313;
	and.b32  	%r1315, %r1314, 536870896;
	sub.s32 	%r1316, %r387, %r1315;
	shr.s32 	%r1317, %r388, 31;
	shr.u32 	%r1318, %r1317, 28;
	add.s32 	%r1319, %r388, %r1318;
	and.b32  	%r1320, %r1319, 536870896;
	sub.s32 	%r1321, %r388, %r1320;
	.loc	1 144 60                        // prefix_prefill.py:144:60
	shl.b32 	%r1322, %r1316, 3;
	shl.b32 	%r1323, %r1321, 3;
	.loc	1 144 12                        // prefix_prefill.py:144:12
	add.s32 	%r393, %r1311, %r1322;
	add.s32 	%r394, %r1311, %r1323;
	.loc	1 148 31                        // prefix_prefill.py:148:31
	mul.lo.s32 	%r1324, %r1309, %r487;
	add.s32 	%r1325, %r1324, %r82;
	add.s32 	%r1326, %r1324, %r83;
	.loc	1 153 21                        // prefix_prefill.py:153:21
	add.s32 	%r411, %r2965, 16;
	.loc	1 153 34                        // prefix_prefill.py:153:34
	setp.le.s32 	%p380, %r411, %r5;
	@%p380 bra 	$L__BB0_31;
// %bb.7:                               //   in Loop: Header=BB0_6 Depth=1
	.loc	1 158 50                        // prefix_prefill.py:158:50
	setp.lt.s32 	%p383, %r387, %r5;
	setp.lt.s32 	%p388, %r388, %r5;
	.loc	1 156 26                        // prefix_prefill.py:156:26
	mul.wide.s32 	%rd566, %r393, 2;
	add.s64 	%rd564, %rd187, %rd566;
	mul.wide.s32 	%rd567, %r394, 2;
	add.s64 	%rd565, %rd187, %rd567;
	.loc	1 156 16                        // prefix_prefill.py:156:16
	// begin inline asm
	mov.u32 %r2972, 0x0;
	mov.u32 %r2973, 0x0;
	mov.u32 %r2970, 0x0;
	mov.u32 %r2971, 0x0;
	@%p383 ld.global.v4.b32 { %r2972, %r2973, %r2970, %r2971 }, [ %rd564 + 0 ];
	@!%p383 mov.u32 %r2972, %r621;
	@!%p383 mov.u32 %r2973, %r621;
	@!%p383 mov.u32 %r2970, %r621;
	@!%p383 mov.u32 %r2971, %r621;
	// end inline asm
	// begin inline asm
	mov.u32 %r2966, 0x0;
	mov.u32 %r2967, 0x0;
	mov.u32 %r2968, 0x0;
	mov.u32 %r2969, 0x0;
	@%p388 ld.global.v4.b32 { %r2966, %r2967, %r2968, %r2969 }, [ %rd565 + 0 ];
	@!%p388 mov.u32 %r2966, %r621;
	@!%p388 mov.u32 %r2967, %r621;
	@!%p388 mov.u32 %r2968, %r621;
	@!%p388 mov.u32 %r2969, %r621;
	// end inline asm
	.loc	1 153 11                        // prefix_prefill.py:153:11
	bra.uni 	$L__BB0_32;
$L__BB0_31:                             //   in Loop: Header=BB0_6 Depth=1
	.loc	1 161 39                        // prefix_prefill.py:161:39
	mul.wide.s32 	%rd562, %r393, 2;
	add.s64 	%rd560, %rd187, %rd562;
	mul.wide.s32 	%rd563, %r394, 2;
	add.s64 	%rd561, %rd187, %rd563;
	.loc	1 161 29                        // prefix_prefill.py:161:29
	// begin inline asm
	mov.u32 %r2972, 0x0;
	mov.u32 %r2973, 0x0;
	mov.u32 %r2970, 0x0;
	mov.u32 %r2971, 0x0;
	@%p744 ld.global.v4.b32 { %r2972, %r2973, %r2970, %r2971 }, [ %rd560 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r2966, 0x0;
	mov.u32 %r2967, 0x0;
	mov.u32 %r2968, 0x0;
	mov.u32 %r2969, 0x0;
	@%p744 ld.global.v4.b32 { %r2966, %r2967, %r2968, %r2969 }, [ %rd561 + 0 ];
	// end inline asm
$L__BB0_32:                             //   in Loop: Header=BB0_6 Depth=1
	.loc	1 0 0                           // prefix_prefill.py:0:0
	add.s32 	%r395, %r1325, %r20;
	add.s32 	%r403, %r1326, %r20;
	.loc	1 153 11                        // prefix_prefill.py:153:11
	bar.sync 	0;
	st.shared.v4.b32 	[%r94], {%r2972, %r2973, %r2970, %r2971};
	st.shared.v4.b32 	[%r94+1024], {%r2966, %r2967, %r2968, %r2969};
	.loc	1 169 23                        // prefix_prefill.py:169:23
	// begin inline asm
	fence.proxy.async.shared::cta;
	// end inline asm
	bar.sync 	0;
	shfl.sync.idx.b32	%r1387, %r2889, 0, 31, -1;
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	shl.b32 	%r1388, %r1387, 7;
	and.b32  	%r1389, %r1388, 384;
	cvt.u64.u32 	%rd600, %r1389;
	add.s64 	%rd568, %rd27, %rd600;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f6176,%f6177,%f6178,%f6179,%f6180,%f6181,%f6182,%f6183}, %rd568, %rd28, 0, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd570, %rd29, %rd600;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f6176,%f6177,%f6178,%f6179,%f6180,%f6181,%f6182,%f6183}, %rd570, %rd30, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd572, %rd31, %rd600;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f6176,%f6177,%f6178,%f6179,%f6180,%f6181,%f6182,%f6183}, %rd572, %rd32, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd574, %rd33, %rd600;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f6176,%f6177,%f6178,%f6179,%f6180,%f6181,%f6182,%f6183}, %rd574, %rd34, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd576, %rd35, %rd600;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f6176,%f6177,%f6178,%f6179,%f6180,%f6181,%f6182,%f6183}, %rd576, %rd36, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd578, %rd37, %rd600;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f6176,%f6177,%f6178,%f6179,%f6180,%f6181,%f6182,%f6183}, %rd578, %rd38, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd580, %rd39, %rd600;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f6176,%f6177,%f6178,%f6179,%f6180,%f6181,%f6182,%f6183}, %rd580, %rd40, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd582, %rd41, %rd600;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f6176,%f6177,%f6178,%f6179,%f6180,%f6181,%f6182,%f6183}, %rd582, %rd42, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd584, %rd43, %rd600;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f6296,%f6297,%f6298,%f6299,%f6300,%f6301,%f6302,%f6303}, %rd584, %rd28, 0, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd586, %rd44, %rd600;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f6296,%f6297,%f6298,%f6299,%f6300,%f6301,%f6302,%f6303}, %rd586, %rd30, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd588, %rd45, %rd600;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f6296,%f6297,%f6298,%f6299,%f6300,%f6301,%f6302,%f6303}, %rd588, %rd32, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd590, %rd46, %rd600;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f6296,%f6297,%f6298,%f6299,%f6300,%f6301,%f6302,%f6303}, %rd590, %rd34, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd592, %rd47, %rd600;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f6296,%f6297,%f6298,%f6299,%f6300,%f6301,%f6302,%f6303}, %rd592, %rd36, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd594, %rd48, %rd600;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f6296,%f6297,%f6298,%f6299,%f6300,%f6301,%f6302,%f6303}, %rd594, %rd38, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd596, %rd49, %rd600;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f6296,%f6297,%f6298,%f6299,%f6300,%f6301,%f6302,%f6303}, %rd596, %rd40, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd598, %rd50, %rd600;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n16k16.f32.bf16.bf16 {%f6296,%f6297,%f6298,%f6299,%f6300,%f6301,%f6302,%f6303}, %rd598, %rd42, %p744, 1, 1, 0, 0;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	// begin inline asm
	// wait for regs: %f6176,%f6177,%f6178,%f6179,%f6180,%f6181,%f6182,%f6183,%f6296,%f6297,%f6298,%f6299,%f6300,%f6301,%f6302,%f6303
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	1 170 55                        // prefix_prefill.py:170:55
	setp.lt.s32 	%p424, %r389, %r5;
	setp.lt.s32 	%p425, %r390, %r5;
	setp.lt.s32 	%p426, %r391, %r5;
	setp.lt.s32 	%p427, %r392, %r5;
	.loc	1 171 22                        // prefix_prefill.py:171:22
	selp.f32 	%f6464, %f6176, 0fFF800000, %p424;
	selp.f32 	%f6465, %f6177, 0fFF800000, %p425;
	selp.f32 	%f6466, %f6178, 0fFF800000, %p424;
	selp.f32 	%f6467, %f6179, 0fFF800000, %p425;
	selp.f32 	%f6468, %f6180, 0fFF800000, %p426;
	selp.f32 	%f6469, %f6181, 0fFF800000, %p427;
	selp.f32 	%f6470, %f6182, 0fFF800000, %p426;
	selp.f32 	%f6471, %f6183, 0fFF800000, %p427;
	selp.f32 	%f6472, %f6296, 0fFF800000, %p424;
	selp.f32 	%f6473, %f6297, 0fFF800000, %p425;
	selp.f32 	%f6474, %f6298, 0fFF800000, %p424;
	selp.f32 	%f6475, %f6299, 0fFF800000, %p425;
	selp.f32 	%f6476, %f6300, 0fFF800000, %p426;
	selp.f32 	%f6477, %f6301, 0fFF800000, %p427;
	selp.f32 	%f6478, %f6302, 0fFF800000, %p426;
	selp.f32 	%f6479, %f6303, 0fFF800000, %p427;
	.loc	1 172 14                        // prefix_prefill.py:172:14
	mul.f32 	%f6480, %f2401, %f6464;
	mul.f32 	%f6481, %f2401, %f6465;
	mul.f32 	%f6482, %f2401, %f6466;
	mul.f32 	%f6483, %f2401, %f6467;
	mul.f32 	%f6484, %f2401, %f6468;
	mul.f32 	%f6485, %f2401, %f6469;
	mul.f32 	%f6486, %f2401, %f6470;
	mul.f32 	%f6487, %f2401, %f6471;
	mul.f32 	%f6488, %f2401, %f6472;
	mul.f32 	%f6489, %f2401, %f6473;
	mul.f32 	%f6490, %f2401, %f6474;
	mul.f32 	%f6491, %f2401, %f6475;
	mul.f32 	%f6492, %f2401, %f6476;
	mul.f32 	%f6493, %f2401, %f6477;
	mul.f32 	%f6494, %f2401, %f6478;
	mul.f32 	%f6495, %f2401, %f6479;
$L__tmp17:
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f6496, %f6480, %f6481;
	max.f32 	%f6497, %f6482, %f6483;
	max.f32 	%f6498, %f6496, %f6484;
	max.f32 	%f6499, %f6498, %f6485;
	max.f32 	%f6500, %f6497, %f6486;
	max.f32 	%f6501, %f6500, %f6487;
	max.f32 	%f6502, %f6488, %f6489;
	max.f32 	%f6503, %f6490, %f6491;
	max.f32 	%f6504, %f6502, %f6492;
	max.f32 	%f6505, %f6504, %f6493;
	max.f32 	%f6506, %f6503, %f6494;
	max.f32 	%f6507, %f6506, %f6495;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r1390, %f6499;
	shfl.sync.bfly.b32	%r1391, %r1390, 2, 31, -1;
	mov.b32 	%f6508, %r1391;
	mov.b32 	%r1392, %f6501;
	mov.b32 	%r1393, %f6505;
	mov.b32 	%r1394, %f6507;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f6509, %f6499, %f6508;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r1395, %f6509;
	shfl.sync.bfly.b32	%r1396, %r1395, 1, 31, -1;
	shfl.sync.bfly.b32	%r1397, %r1392, 2, 31, -1;
	mov.b32 	%f6510, %r1397;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f6511, %f6501, %f6510;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r1398, %f6511;
	shfl.sync.bfly.b32	%r1399, %r1398, 1, 31, -1;
	shfl.sync.bfly.b32	%r1400, %r1393, 2, 31, -1;
	mov.b32 	%f6512, %r1400;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f6513, %f6505, %f6512;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r1401, %f6513;
	shfl.sync.bfly.b32	%r1402, %r1401, 1, 31, -1;
	shfl.sync.bfly.b32	%r1403, %r1394, 2, 31, -1;
	mov.b32 	%f6514, %r1403;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f6515, %f6507, %f6514;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r1404, %f6515;
	shfl.sync.bfly.b32	%r1405, %r1404, 1, 31, -1;
	mov.b32 	%f6516, %r1405;
	mov.b32 	%f6517, %r1402;
	mov.b32 	%f6518, %r1399;
	mov.b32 	%f6519, %r1396;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f6520, %f6509, %f6519;
	max.f32 	%f6521, %f6511, %f6518;
	max.f32 	%f6522, %f6513, %f6517;
	max.f32 	%f6523, %f6515, %f6516;
$L__tmp18:
	.loc	1 190 31                        // prefix_prefill.py:190:31
	max.f32 	%f10211, %f10351, %f6523;
	max.f32 	%f10210, %f10350, %f6522;
	max.f32 	%f10209, %f10349, %f6521;
	max.f32 	%f10208, %f10348, %f6520;
	.loc	1 191 24                        // prefix_prefill.py:191:24
	neg.f32 	%f6524, %f10208;
	fma.rn.f32 	%f6525, %f2401, %f6464, %f6524;
	fma.rn.f32 	%f6526, %f2401, %f6465, %f6524;
	neg.f32 	%f6527, %f10209;
	fma.rn.f32 	%f6528, %f2401, %f6466, %f6527;
	fma.rn.f32 	%f6529, %f2401, %f6467, %f6527;
	fma.rn.f32 	%f6530, %f2401, %f6468, %f6524;
	fma.rn.f32 	%f6531, %f2401, %f6469, %f6524;
	fma.rn.f32 	%f6532, %f2401, %f6470, %f6527;
	fma.rn.f32 	%f6533, %f2401, %f6471, %f6527;
	neg.f32 	%f6534, %f10210;
	fma.rn.f32 	%f6535, %f2401, %f6472, %f6534;
	fma.rn.f32 	%f6536, %f2401, %f6473, %f6534;
	neg.f32 	%f6537, %f10211;
	fma.rn.f32 	%f6538, %f2401, %f6474, %f6537;
	fma.rn.f32 	%f6539, %f2401, %f6475, %f6537;
	fma.rn.f32 	%f6540, %f2401, %f6476, %f6534;
	fma.rn.f32 	%f6541, %f2401, %f6477, %f6534;
	fma.rn.f32 	%f6542, %f2401, %f6478, %f6537;
	fma.rn.f32 	%f6543, %f2401, %f6479, %f6537;
	.loc	1 191 19                        // prefix_prefill.py:191:19
	mul.f32 	%f6425, %f6525, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f6424, %f6425;
	// end inline asm
	mul.f32 	%f6427, %f6526, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f6426, %f6427;
	// end inline asm
	mul.f32 	%f6429, %f6528, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f6428, %f6429;
	// end inline asm
	mul.f32 	%f6431, %f6529, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f6430, %f6431;
	// end inline asm
	mul.f32 	%f6433, %f6530, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f6432, %f6433;
	// end inline asm
	mul.f32 	%f6435, %f6531, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f6434, %f6435;
	// end inline asm
	mul.f32 	%f6437, %f6532, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f6436, %f6437;
	// end inline asm
	mul.f32 	%f6439, %f6533, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f6438, %f6439;
	// end inline asm
	mul.f32 	%f6441, %f6535, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f6440, %f6441;
	// end inline asm
	mul.f32 	%f6443, %f6536, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f6442, %f6443;
	// end inline asm
	mul.f32 	%f6445, %f6538, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f6444, %f6445;
	// end inline asm
	mul.f32 	%f6447, %f6539, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f6446, %f6447;
	// end inline asm
	mul.f32 	%f6449, %f6540, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f6448, %f6449;
	// end inline asm
	mul.f32 	%f6451, %f6541, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f6450, %f6451;
	// end inline asm
	mul.f32 	%f6453, %f6542, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f6452, %f6453;
	// end inline asm
	mul.f32 	%f6455, %f6543, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f6454, %f6455;
	// end inline asm
$L__tmp19:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f6544, %f6424, %f6426;
	add.f32 	%f6545, %f6428, %f6430;
	add.f32 	%f6546, %f6544, %f6432;
	add.f32 	%f6547, %f6546, %f6434;
	add.f32 	%f6548, %f6545, %f6436;
	add.f32 	%f6549, %f6548, %f6438;
	add.f32 	%f6550, %f6440, %f6442;
	add.f32 	%f6551, %f6444, %f6446;
	add.f32 	%f6552, %f6550, %f6448;
	add.f32 	%f6553, %f6552, %f6450;
	add.f32 	%f6554, %f6551, %f6452;
	add.f32 	%f6555, %f6554, %f6454;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r1406, %f6547;
	shfl.sync.bfly.b32	%r1407, %r1406, 2, 31, -1;
	mov.b32 	%f6556, %r1407;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f6557, %f6547, %f6556;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r1408, %f6557;
	shfl.sync.bfly.b32	%r1409, %r1408, 1, 31, -1;
	mov.b32 	%r1410, %f6549;
	shfl.sync.bfly.b32	%r1411, %r1410, 2, 31, -1;
	mov.b32 	%f6558, %r1411;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f6559, %f6549, %f6558;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r1412, %f6559;
	shfl.sync.bfly.b32	%r1413, %r1412, 1, 31, -1;
	mov.b32 	%r1414, %f6553;
	shfl.sync.bfly.b32	%r1415, %r1414, 2, 31, -1;
	mov.b32 	%f6560, %r1415;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f6561, %f6553, %f6560;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r1416, %f6561;
	shfl.sync.bfly.b32	%r1417, %r1416, 1, 31, -1;
	mov.b32 	%r1418, %f6555;
	shfl.sync.bfly.b32	%r1419, %r1418, 2, 31, -1;
	mov.b32 	%f6562, %r1419;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f6563, %f6555, %f6562;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r1420, %f6563;
	shfl.sync.bfly.b32	%r1421, %r1420, 1, 31, -1;
	mov.b32 	%f6564, %r1421;
	mov.b32 	%f6565, %r1417;
	mov.b32 	%f6566, %r1413;
	mov.b32 	%f6567, %r1409;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f1593, %f6557, %f6567;
	add.f32 	%f1594, %f6559, %f6566;
	add.f32 	%f1595, %f6561, %f6565;
	add.f32 	%f1596, %f6563, %f6564;
$L__tmp20:
	.loc	1 193 29                        // prefix_prefill.py:193:29
	sub.f32 	%f6568, %f10351, %f10211;
	sub.f32 	%f6569, %f10350, %f10210;
	sub.f32 	%f6570, %f10349, %f10209;
	sub.f32 	%f6571, %f10348, %f10208;
	.loc	1 193 23                        // prefix_prefill.py:193:23
	mul.f32 	%f6457, %f6571, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f6456, %f6457;
	// end inline asm
	mul.f32 	%f6459, %f6570, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f6458, %f6459;
	// end inline asm
	mul.f32 	%f6461, %f6569, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f6460, %f6461;
	// end inline asm
	mul.f32 	%f6463, %f6568, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f6462, %f6463;
	// end inline asm
	.loc	1 194 20                        // prefix_prefill.py:194:20
	bar.sync 	0;
	mov.b32 	%r1352, %f6456;
	// begin inline asm
	@%p744 st.shared.b32 [ %r97 + 0 ], %r1352;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r97 + 0 ], %r1352;
	// end inline asm
	mov.b32 	%r1356, %f6458;
	// begin inline asm
	@%p744 st.shared.b32 [ %r98 + 0 ], %r1356;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r98 + 0 ], %r1356;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r97 + 0 ], %r1352;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r97 + 0 ], %r1352;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r98 + 0 ], %r1356;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r98 + 0 ], %r1356;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f6572, [%r97];
	ld.shared.f32 	%f6573, [%r98];
	bar.sync 	0;
	mov.b32 	%r1368, %f6460;
	// begin inline asm
	@%p744 st.shared.b32 [ %r97 + 0 ], %r1368;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r97 + 0 ], %r1368;
	// end inline asm
	mov.b32 	%r1372, %f6462;
	// begin inline asm
	@%p744 st.shared.b32 [ %r98 + 0 ], %r1372;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r98 + 0 ], %r1372;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r97 + 0 ], %r1368;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r97 + 0 ], %r1368;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r98 + 0 ], %r1372;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r98 + 0 ], %r1372;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f6574, [%r97];
	ld.shared.f32 	%f6575, [%r98];
	mul.f32 	%f10216, %f10216, %f6572;
	mul.f32 	%f10217, %f10217, %f6572;
	mul.f32 	%f10218, %f10218, %f6573;
	mul.f32 	%f10219, %f10219, %f6573;
	mul.f32 	%f10220, %f10220, %f6572;
	mul.f32 	%f10221, %f10221, %f6572;
	mul.f32 	%f10222, %f10222, %f6573;
	mul.f32 	%f10223, %f10223, %f6573;
	mul.f32 	%f10224, %f10224, %f6572;
	mul.f32 	%f10225, %f10225, %f6572;
	mul.f32 	%f10226, %f10226, %f6573;
	mul.f32 	%f10227, %f10227, %f6573;
	mul.f32 	%f10228, %f10228, %f6572;
	mul.f32 	%f10229, %f10229, %f6572;
	mul.f32 	%f10230, %f10230, %f6573;
	mul.f32 	%f10231, %f10231, %f6573;
	mul.f32 	%f10232, %f10232, %f6572;
	mul.f32 	%f10233, %f10233, %f6572;
	mul.f32 	%f10234, %f10234, %f6573;
	mul.f32 	%f10235, %f10235, %f6573;
	mul.f32 	%f10236, %f10236, %f6572;
	mul.f32 	%f10237, %f10237, %f6572;
	mul.f32 	%f10238, %f10238, %f6573;
	mul.f32 	%f10239, %f10239, %f6573;
	mul.f32 	%f10240, %f10240, %f6572;
	mul.f32 	%f10241, %f10241, %f6572;
	mul.f32 	%f10242, %f10242, %f6573;
	mul.f32 	%f10243, %f10243, %f6573;
	mul.f32 	%f10244, %f10244, %f6572;
	mul.f32 	%f10245, %f10245, %f6572;
	mul.f32 	%f10246, %f10246, %f6573;
	mul.f32 	%f10247, %f10247, %f6573;
	mul.f32 	%f10248, %f10248, %f6572;
	mul.f32 	%f10249, %f10249, %f6572;
	mul.f32 	%f10250, %f10250, %f6573;
	mul.f32 	%f10251, %f10251, %f6573;
	mul.f32 	%f10252, %f10252, %f6572;
	mul.f32 	%f10253, %f10253, %f6572;
	mul.f32 	%f10254, %f10254, %f6573;
	mul.f32 	%f10255, %f10255, %f6573;
	mul.f32 	%f10256, %f10256, %f6572;
	mul.f32 	%f10257, %f10257, %f6572;
	mul.f32 	%f10258, %f10258, %f6573;
	mul.f32 	%f10259, %f10259, %f6573;
	mul.f32 	%f10260, %f10260, %f6572;
	mul.f32 	%f10261, %f10261, %f6572;
	mul.f32 	%f10262, %f10262, %f6573;
	mul.f32 	%f10263, %f10263, %f6573;
	mul.f32 	%f10264, %f10264, %f6572;
	mul.f32 	%f10265, %f10265, %f6572;
	mul.f32 	%f10266, %f10266, %f6573;
	mul.f32 	%f10267, %f10267, %f6573;
	mul.f32 	%f10268, %f10268, %f6572;
	mul.f32 	%f10269, %f10269, %f6572;
	mul.f32 	%f10270, %f10270, %f6573;
	mul.f32 	%f10271, %f10271, %f6573;
	mul.f32 	%f10272, %f10272, %f6572;
	mul.f32 	%f10273, %f10273, %f6572;
	mul.f32 	%f10274, %f10274, %f6573;
	mul.f32 	%f10275, %f10275, %f6573;
	mul.f32 	%f10276, %f10276, %f6572;
	mul.f32 	%f10277, %f10277, %f6572;
	mul.f32 	%f10278, %f10278, %f6573;
	mul.f32 	%f10279, %f10279, %f6573;
	mul.f32 	%f10280, %f10280, %f6574;
	mul.f32 	%f10281, %f10281, %f6574;
	mul.f32 	%f10282, %f10282, %f6575;
	mul.f32 	%f10283, %f10283, %f6575;
	mul.f32 	%f10284, %f10284, %f6574;
	mul.f32 	%f10285, %f10285, %f6574;
	mul.f32 	%f10286, %f10286, %f6575;
	mul.f32 	%f10287, %f10287, %f6575;
	mul.f32 	%f10288, %f10288, %f6574;
	mul.f32 	%f10289, %f10289, %f6574;
	mul.f32 	%f10290, %f10290, %f6575;
	mul.f32 	%f10291, %f10291, %f6575;
	mul.f32 	%f10292, %f10292, %f6574;
	mul.f32 	%f10293, %f10293, %f6574;
	mul.f32 	%f10294, %f10294, %f6575;
	mul.f32 	%f10295, %f10295, %f6575;
	mul.f32 	%f10296, %f10296, %f6574;
	mul.f32 	%f10297, %f10297, %f6574;
	mul.f32 	%f10298, %f10298, %f6575;
	mul.f32 	%f10299, %f10299, %f6575;
	mul.f32 	%f10300, %f10300, %f6574;
	mul.f32 	%f10301, %f10301, %f6574;
	mul.f32 	%f10302, %f10302, %f6575;
	mul.f32 	%f10303, %f10303, %f6575;
	mul.f32 	%f10304, %f10304, %f6574;
	mul.f32 	%f10305, %f10305, %f6574;
	mul.f32 	%f10306, %f10306, %f6575;
	mul.f32 	%f10307, %f10307, %f6575;
	mul.f32 	%f10308, %f10308, %f6574;
	mul.f32 	%f10309, %f10309, %f6574;
	mul.f32 	%f10310, %f10310, %f6575;
	mul.f32 	%f10311, %f10311, %f6575;
	mul.f32 	%f10312, %f10312, %f6574;
	mul.f32 	%f10313, %f10313, %f6574;
	mul.f32 	%f10314, %f10314, %f6575;
	mul.f32 	%f10315, %f10315, %f6575;
	mul.f32 	%f10316, %f10316, %f6574;
	mul.f32 	%f10317, %f10317, %f6574;
	mul.f32 	%f10318, %f10318, %f6575;
	mul.f32 	%f10319, %f10319, %f6575;
	mul.f32 	%f10320, %f10320, %f6574;
	mul.f32 	%f10321, %f10321, %f6574;
	mul.f32 	%f10322, %f10322, %f6575;
	mul.f32 	%f10323, %f10323, %f6575;
	mul.f32 	%f10324, %f10324, %f6574;
	mul.f32 	%f10325, %f10325, %f6574;
	mul.f32 	%f10326, %f10326, %f6575;
	mul.f32 	%f10327, %f10327, %f6575;
	mul.f32 	%f10328, %f10328, %f6574;
	mul.f32 	%f10329, %f10329, %f6574;
	mul.f32 	%f10330, %f10330, %f6575;
	mul.f32 	%f10331, %f10331, %f6575;
	mul.f32 	%f10332, %f10332, %f6574;
	mul.f32 	%f10333, %f10333, %f6574;
	mul.f32 	%f10334, %f10334, %f6575;
	mul.f32 	%f10335, %f10335, %f6575;
	mul.f32 	%f10336, %f10336, %f6574;
	mul.f32 	%f10337, %f10337, %f6574;
	mul.f32 	%f10338, %f10338, %f6575;
	mul.f32 	%f10339, %f10339, %f6575;
	mul.f32 	%f10340, %f10340, %f6574;
	mul.f32 	%f10341, %f10341, %f6574;
	mul.f32 	%f10342, %f10342, %f6575;
	mul.f32 	%f10343, %f10343, %f6575;
	.loc	1 197 11                        // prefix_prefill.py:197:11
	@%p380 bra 	$L__BB0_34;
// %bb.33:                              //   in Loop: Header=BB0_6 Depth=1
	.loc	1 0 0                           // prefix_prefill.py:0:0
	add.s32 	%r396, %r1325, %r74;
	add.s32 	%r397, %r1325, %r75;
	add.s32 	%r398, %r1325, %r76;
	add.s32 	%r399, %r1325, %r77;
	add.s32 	%r400, %r1325, %r78;
	add.s32 	%r401, %r1325, %r79;
	add.s32 	%r402, %r1325, %r80;
	add.s32 	%r404, %r1326, %r74;
	add.s32 	%r405, %r1326, %r75;
	add.s32 	%r406, %r1326, %r76;
	add.s32 	%r407, %r1326, %r77;
	add.s32 	%r408, %r1326, %r78;
	add.s32 	%r409, %r1326, %r79;
	add.s32 	%r410, %r1326, %r80;
	.loc	1 202 28                        // prefix_prefill.py:202:28
	add.s32 	%r1430, %r20, %r2965;
	add.s32 	%r1431, %r1430, 1;
	add.s32 	%r1432, %r1430, 2;
	add.s32 	%r1433, %r1430, 3;
	add.s32 	%r1434, %r1430, 4;
	add.s32 	%r1435, %r1430, 5;
	add.s32 	%r1436, %r1430, 6;
	.loc	1 202 50                        // prefix_prefill.py:202:50
	add.s32 	%r1437, %r1430, 7;
	setp.lt.s32 	%p430, %r1430, %r5;
	setp.lt.s32 	%p432, %r1431, %r5;
	setp.lt.s32 	%p434, %r1432, %r5;
	setp.lt.s32 	%p436, %r1433, %r5;
	setp.lt.s32 	%p438, %r1434, %r5;
	setp.lt.s32 	%p440, %r1435, %r5;
	setp.lt.s32 	%p442, %r1436, %r5;
	setp.lt.s32 	%p444, %r1437, %r5;
	.loc	1 200 26                        // prefix_prefill.py:200:26
	mul.wide.s32 	%rd621, %r395, 2;
	add.s64 	%rd605, %rd188, %rd621;
	mul.wide.s32 	%rd622, %r396, 2;
	add.s64 	%rd606, %rd188, %rd622;
	mul.wide.s32 	%rd623, %r397, 2;
	add.s64 	%rd607, %rd188, %rd623;
	mul.wide.s32 	%rd624, %r398, 2;
	add.s64 	%rd608, %rd188, %rd624;
	mul.wide.s32 	%rd625, %r399, 2;
	add.s64 	%rd609, %rd188, %rd625;
	mul.wide.s32 	%rd626, %r400, 2;
	add.s64 	%rd610, %rd188, %rd626;
	mul.wide.s32 	%rd627, %r401, 2;
	add.s64 	%rd611, %rd188, %rd627;
	mul.wide.s32 	%rd628, %r402, 2;
	add.s64 	%rd612, %rd188, %rd628;
	mul.wide.s32 	%rd629, %r403, 2;
	add.s64 	%rd613, %rd188, %rd629;
	mul.wide.s32 	%rd630, %r404, 2;
	add.s64 	%rd614, %rd188, %rd630;
	mul.wide.s32 	%rd631, %r405, 2;
	add.s64 	%rd615, %rd188, %rd631;
	mul.wide.s32 	%rd632, %r406, 2;
	add.s64 	%rd616, %rd188, %rd632;
	mul.wide.s32 	%rd633, %r407, 2;
	add.s64 	%rd617, %rd188, %rd633;
	mul.wide.s32 	%rd634, %r408, 2;
	add.s64 	%rd618, %rd188, %rd634;
	mul.wide.s32 	%rd635, %r409, 2;
	add.s64 	%rd619, %rd188, %rd635;
	mul.wide.s32 	%rd636, %r410, 2;
	add.s64 	%rd620, %rd188, %rd636;
	.loc	1 200 16                        // prefix_prefill.py:200:16
	// begin inline asm
	mov.u16 %rs257, 0x0;
	@%p430 ld.global.b16 { %rs257 }, [ %rd605 + 0 ];
	@!%p430 mov.u16 %rs257, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs259, 0x0;
	@%p432 ld.global.b16 { %rs259 }, [ %rd606 + 0 ];
	@!%p432 mov.u16 %rs259, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs261, 0x0;
	@%p434 ld.global.b16 { %rs261 }, [ %rd607 + 0 ];
	@!%p434 mov.u16 %rs261, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs263, 0x0;
	@%p436 ld.global.b16 { %rs263 }, [ %rd608 + 0 ];
	@!%p436 mov.u16 %rs263, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs265, 0x0;
	@%p438 ld.global.b16 { %rs265 }, [ %rd609 + 0 ];
	@!%p438 mov.u16 %rs265, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs267, 0x0;
	@%p440 ld.global.b16 { %rs267 }, [ %rd610 + 0 ];
	@!%p440 mov.u16 %rs267, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs269, 0x0;
	@%p442 ld.global.b16 { %rs269 }, [ %rd611 + 0 ];
	@!%p442 mov.u16 %rs269, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs271, 0x0;
	@%p444 ld.global.b16 { %rs271 }, [ %rd612 + 0 ];
	@!%p444 mov.u16 %rs271, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs273, 0x0;
	@%p430 ld.global.b16 { %rs273 }, [ %rd613 + 0 ];
	@!%p430 mov.u16 %rs273, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs275, 0x0;
	@%p432 ld.global.b16 { %rs275 }, [ %rd614 + 0 ];
	@!%p432 mov.u16 %rs275, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs277, 0x0;
	@%p434 ld.global.b16 { %rs277 }, [ %rd615 + 0 ];
	@!%p434 mov.u16 %rs277, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs279, 0x0;
	@%p436 ld.global.b16 { %rs279 }, [ %rd616 + 0 ];
	@!%p436 mov.u16 %rs279, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs281, 0x0;
	@%p438 ld.global.b16 { %rs281 }, [ %rd617 + 0 ];
	@!%p438 mov.u16 %rs281, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs283, 0x0;
	@%p440 ld.global.b16 { %rs283 }, [ %rd618 + 0 ];
	@!%p440 mov.u16 %rs283, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs285, 0x0;
	@%p442 ld.global.b16 { %rs285 }, [ %rd619 + 0 ];
	@!%p442 mov.u16 %rs285, %rs258;
	// end inline asm
	// begin inline asm
	mov.u16 %rs287, 0x0;
	@%p444 ld.global.b16 { %rs287 }, [ %rd620 + 0 ];
	@!%p444 mov.u16 %rs287, %rs258;
	// end inline asm
	mov.b32 	%r2974, {%rs257, %rs259};
	mov.b32 	%r2975, {%rs261, %rs263};
	mov.b32 	%r2976, {%rs265, %rs267};
	mov.b32 	%r2977, {%rs269, %rs271};
	mov.b32 	%r2978, {%rs273, %rs275};
	mov.b32 	%r2979, {%rs277, %rs279};
	mov.b32 	%r2980, {%rs281, %rs283};
	mov.b32 	%r2981, {%rs285, %rs287};
	.loc	1 197 11                        // prefix_prefill.py:197:11
	bra.uni 	$L__BB0_35;
$L__BB0_36:                             // %._crit_edge
	.loc	1 0 11                          // prefix_prefill.py:0:11
	ld.param.u32 	%r485, [_fwd_kernel_param_19];
	ld.param.u32 	%r484, [_fwd_kernel_param_18];
	ld.param.u64 	%rd189, [_fwd_kernel_param_11];
	.loc	1 226 44                        // prefix_prefill.py:226:44
	setp.lt.s32 	%p465, %r6, %r4;
	.loc	1 230 53                        // prefix_prefill.py:230:53
	add.s32 	%r1506, %r6, 128;
	.loc	1 230 38                        // prefix_prefill.py:230:38
	selp.b32 	%r460, %r1506, 0, %p465;
	.loc	1 231 24                        // prefix_prefill.py:231:24
	setp.gt.s32 	%p466, %r460, 0;
	@%p466 bra 	$L__BB0_38;
	bra.uni 	$L__BB0_37;
$L__BB0_38:                             // %.lr.ph753
	.loc	1 0 24                          // prefix_prefill.py:0:24
	or.b32  	%r46, %r6, %r23;
	ld.param.u32 	%r483, [_fwd_kernel_param_17];
	ld.param.u32 	%r482, [_fwd_kernel_param_16];
	ld.param.u32 	%r481, [_fwd_kernel_param_15];
	ld.param.u32 	%r480, [_fwd_kernel_param_14];
	ld.param.u64 	%rd186, [_fwd_kernel_param_2];
	ld.param.u64 	%rd185, [_fwd_kernel_param_1];
	or.b32  	%r47, %r6, %r24;
	or.b32  	%r48, %r46, 64;
	or.b32  	%r49, %r46, 72;
	or.b32  	%r73, %r72, 9;
	mul.lo.s32 	%r1478, %r480, %r11;
	shl.b32 	%r1479, %r480, 3;
	add.s32 	%r1480, %r1478, %r1479;
	add.s32 	%r1481, %r1480, %r1479;
	add.s32 	%r1482, %r1481, %r1479;
	mad.lo.s32 	%r1483, %r2, %r481, %r22;
	add.s32 	%r1484, %r1483, %r1478;
	add.s32 	%r1485, %r1483, %r1480;
	add.s32 	%r1486, %r1483, %r1481;
	add.s32 	%r1487, %r1483, %r1482;
	mad.lo.s32 	%r1488, %r480, %r18, %r1483;
	mad.lo.s32 	%r1489, %r480, %r17, %r1483;
	mad.lo.s32 	%r1490, %r480, %r16, %r1483;
	mad.lo.s32 	%r1491, %r480, %r15, %r1483;
	mul.lo.s32 	%r1492, %r482, %r11;
	shl.b32 	%r1493, %r482, 3;
	add.s32 	%r1494, %r1492, %r1493;
	add.s32 	%r1495, %r1494, %r1493;
	add.s32 	%r1496, %r1495, %r1493;
	mad.lo.s32 	%r1497, %r2, %r483, %r22;
	add.s32 	%r1498, %r1497, %r1492;
	add.s32 	%r1499, %r1497, %r1494;
	add.s32 	%r1500, %r1497, %r1495;
	add.s32 	%r1501, %r1497, %r1496;
	mad.lo.s32 	%r1502, %r482, %r18, %r1497;
	mad.lo.s32 	%r1503, %r482, %r17, %r1497;
	mad.lo.s32 	%r1504, %r482, %r16, %r1497;
	mad.lo.s32 	%r1505, %r482, %r15, %r1497;
	mul.wide.s32 	%rd639, %r1484, 2;
	add.s64 	%rd54, %rd185, %rd639;
	mul.wide.s32 	%rd640, %r1485, 2;
	add.s64 	%rd55, %rd185, %rd640;
	mul.wide.s32 	%rd641, %r1486, 2;
	add.s64 	%rd56, %rd185, %rd641;
	mul.wide.s32 	%rd642, %r1487, 2;
	add.s64 	%rd57, %rd185, %rd642;
	mul.wide.s32 	%rd643, %r1488, 2;
	add.s64 	%rd58, %rd185, %rd643;
	mul.wide.s32 	%rd644, %r1489, 2;
	add.s64 	%rd59, %rd185, %rd644;
	mul.wide.s32 	%rd645, %r1490, 2;
	add.s64 	%rd60, %rd185, %rd645;
	mul.wide.s32 	%rd646, %r1491, 2;
	add.s64 	%rd61, %rd185, %rd646;
	mul.wide.s32 	%rd647, %r1498, 2;
	add.s64 	%rd62, %rd186, %rd647;
	mul.wide.s32 	%rd648, %r1499, 2;
	add.s64 	%rd63, %rd186, %rd648;
	mul.wide.s32 	%rd649, %r1500, 2;
	add.s64 	%rd64, %rd186, %rd649;
	mul.wide.s32 	%rd650, %r1501, 2;
	add.s64 	%rd65, %rd186, %rd650;
	mul.wide.s32 	%rd651, %r1502, 2;
	add.s64 	%rd66, %rd186, %rd651;
	mul.wide.s32 	%rd652, %r1503, 2;
	add.s64 	%rd67, %rd186, %rd652;
	mul.wide.s32 	%rd653, %r1504, 2;
	add.s64 	%rd68, %rd186, %rd653;
	mul.wide.s32 	%rd654, %r1505, 2;
	add.s64 	%rd69, %rd186, %rd654;
	shl.b32 	%r1507, %r21, 2;
	or.b32  	%r1508, %r68, %r1507;
	or.b32  	%r1509, %r1508, %r66;
	shl.b32 	%r1510, %r1509, 8;
	or.b32  	%r1512, %r1510, %r725;
	add.s32 	%r1514, %r727, 32768;
	add.s32 	%r463, %r1514, %r1512;
	shr.u32 	%r1515, %r727, 4;
	cvt.u64.u32 	%rd656, %r1515;
	and.b64  	%rd657, %rd656, 16383;
	or.b64  	%rd70, %rd657, 4611686293372403712;
	shr.u32 	%r1516, %r1514, 4;
	cvt.u64.u32 	%rd658, %r1516;
	and.b64  	%rd659, %rd658, 16383;
	or.b64  	%rd669, %rd659, 4611686293338849280;
	add.s64 	%rd72, %rd657, 4611686293372403714;
	add.s64 	%rd671, %rd659, 4611686293338849282;
	add.s64 	%rd74, %rd657, 4611686293372403716;
	add.s64 	%rd673, %rd659, 4611686293338849284;
	add.s64 	%rd76, %rd657, 4611686293372403718;
	add.s64 	%rd675, %rd659, 4611686293338849286;
	add.s64 	%rd78, %rd657, 4611686293372404736;
	add.s64 	%rd677, %rd659, 4611686293338849792;
	add.s64 	%rd80, %rd657, 4611686293372404738;
	add.s64 	%rd679, %rd659, 4611686293338849794;
	add.s64 	%rd82, %rd657, 4611686293372404740;
	add.s64 	%rd681, %rd659, 4611686293338849796;
	add.s64 	%rd84, %rd657, 4611686293372404742;
	add.s64 	%rd683, %rd659, 4611686293338849798;
	add.s64 	%rd86, %rd657, 4611686293372404224;
	add.s64 	%rd87, %rd657, 4611686293372404226;
	add.s64 	%rd88, %rd657, 4611686293372404228;
	add.s64 	%rd89, %rd657, 4611686293372404230;
	add.s64 	%rd90, %rd657, 4611686293372405248;
	add.s64 	%rd91, %rd657, 4611686293372405250;
	add.s64 	%rd92, %rd657, 4611686293372405252;
	add.s64 	%rd93, %rd657, 4611686293372405254;
	shl.b32 	%r2984, %r24, 1;
	shl.b32 	%r2985, %r23, 1;
	add.s32 	%r1583, %r1514, %r2890;
	add.s32 	%r1587, %r1514, %r2891;
	add.s64 	%rd709, %rd659, 4611686293338849408;
	add.s64 	%rd710, %rd659, 4611686293338849536;
	add.s64 	%rd711, %rd659, 4611686293338849664;
	.loc	1 231 24                        // prefix_prefill.py:231:24
	cvt.u64.u32 	%rd110, %r73;
	cvt.u64.u32 	%rd97, %r72;
	cvt.u64.u32 	%rd105, %r11;
	cvt.u64.u32 	%rd104, %r12;
	cvt.u64.u32 	%rd103, %r13;
	cvt.u64.u32 	%rd102, %r14;
	cvt.u64.u32 	%rd98, %r15;
	cvt.u64.u32 	%rd99, %r16;
	cvt.u64.u32 	%rd100, %r17;
	cvt.u64.u32 	%rd101, %r18;
	cvt.u64.u32 	%rd106, %r460;
	mov.u64 	%rd109, 16;
	mov.u64 	%rd108, 17;
	mov.u64 	%rd107, 24;
	cvt.s64.s32 	%rd111, %r4;
	cvt.s64.s32 	%rd153, %r46;
	cvt.s64.s32 	%rd151, %r47;
	cvt.s64.s32 	%rd121, %r48;
	cvt.s64.s32 	%rd119, %r49;
	mul.lo.s32 	%r2983, %r492, %r482;
	shl.b32 	%r471, %r482, 6;
	mul.lo.s32 	%r2982, %r492, %r480;
	shl.b32 	%r473, %r480, 6;
	mov.u64 	%rd855, 0;
$L__BB0_39:                             // =>This Inner Loop Header: Depth=1
	.loc	1 237 32                        // prefix_prefill.py:237:32
	or.b64  	%rd716, %rd855, %rd105;
	or.b64  	%rd717, %rd855, %rd104;
	or.b64  	%rd718, %rd855, %rd103;
	or.b64  	%rd719, %rd855, %rd102;
	or.b64  	%rd720, %rd855, %rd101;
	or.b64  	%rd721, %rd855, %rd100;
	or.b64  	%rd722, %rd855, %rd99;
	or.b64  	%rd723, %rd855, %rd98;
	.loc	1 237 51                        // prefix_prefill.py:237:51
	setp.lt.s64 	%p503, %rd723, %rd111;
	setp.lt.s64 	%p498, %rd722, %rd111;
	setp.lt.s64 	%p493, %rd721, %rd111;
	setp.lt.s64 	%p488, %rd720, %rd111;
	setp.lt.s64 	%p483, %rd719, %rd111;
	setp.lt.s64 	%p478, %rd718, %rd111;
	setp.lt.s64 	%p473, %rd717, %rd111;
	setp.lt.s64 	%p468, %rd716, %rd111;
	.loc	1 235 20                        // prefix_prefill.py:235:20
	mul.wide.s32 	%rd724, %r2982, 2;
	add.s64 	%rd660, %rd54, %rd724;
	add.s64 	%rd661, %rd55, %rd724;
	add.s64 	%rd662, %rd56, %rd724;
	add.s64 	%rd663, %rd57, %rd724;
	add.s64 	%rd664, %rd58, %rd724;
	add.s64 	%rd665, %rd59, %rd724;
	add.s64 	%rd666, %rd60, %rd724;
	add.s64 	%rd667, %rd61, %rd724;
	.loc	1 234 20                        // prefix_prefill.py:234:20
	// begin inline asm
	mov.u32 %r1519, 0x0;
	mov.u32 %r1520, 0x0;
	mov.u32 %r1521, 0x0;
	mov.u32 %r1522, 0x0;
	@%p468 ld.global.v4.b32 { %r1519, %r1520, %r1521, %r1522 }, [ %rd660 + 0 ];
	@!%p468 mov.u32 %r1519, %r621;
	@!%p468 mov.u32 %r1520, %r621;
	@!%p468 mov.u32 %r1521, %r621;
	@!%p468 mov.u32 %r1522, %r621;
	// end inline asm
	// begin inline asm
	mov.u32 %r1527, 0x0;
	mov.u32 %r1528, 0x0;
	mov.u32 %r1529, 0x0;
	mov.u32 %r1530, 0x0;
	@%p473 ld.global.v4.b32 { %r1527, %r1528, %r1529, %r1530 }, [ %rd661 + 0 ];
	@!%p473 mov.u32 %r1527, %r621;
	@!%p473 mov.u32 %r1528, %r621;
	@!%p473 mov.u32 %r1529, %r621;
	@!%p473 mov.u32 %r1530, %r621;
	// end inline asm
	// begin inline asm
	mov.u32 %r1535, 0x0;
	mov.u32 %r1536, 0x0;
	mov.u32 %r1537, 0x0;
	mov.u32 %r1538, 0x0;
	@%p478 ld.global.v4.b32 { %r1535, %r1536, %r1537, %r1538 }, [ %rd662 + 0 ];
	@!%p478 mov.u32 %r1535, %r621;
	@!%p478 mov.u32 %r1536, %r621;
	@!%p478 mov.u32 %r1537, %r621;
	@!%p478 mov.u32 %r1538, %r621;
	// end inline asm
	// begin inline asm
	mov.u32 %r1543, 0x0;
	mov.u32 %r1544, 0x0;
	mov.u32 %r1545, 0x0;
	mov.u32 %r1546, 0x0;
	@%p483 ld.global.v4.b32 { %r1543, %r1544, %r1545, %r1546 }, [ %rd663 + 0 ];
	@!%p483 mov.u32 %r1543, %r621;
	@!%p483 mov.u32 %r1544, %r621;
	@!%p483 mov.u32 %r1545, %r621;
	@!%p483 mov.u32 %r1546, %r621;
	// end inline asm
	// begin inline asm
	mov.u32 %r1551, 0x0;
	mov.u32 %r1552, 0x0;
	mov.u32 %r1553, 0x0;
	mov.u32 %r1554, 0x0;
	@%p488 ld.global.v4.b32 { %r1551, %r1552, %r1553, %r1554 }, [ %rd664 + 0 ];
	@!%p488 mov.u32 %r1551, %r621;
	@!%p488 mov.u32 %r1552, %r621;
	@!%p488 mov.u32 %r1553, %r621;
	@!%p488 mov.u32 %r1554, %r621;
	// end inline asm
	// begin inline asm
	mov.u32 %r1559, 0x0;
	mov.u32 %r1560, 0x0;
	mov.u32 %r1561, 0x0;
	mov.u32 %r1562, 0x0;
	@%p493 ld.global.v4.b32 { %r1559, %r1560, %r1561, %r1562 }, [ %rd665 + 0 ];
	@!%p493 mov.u32 %r1559, %r621;
	@!%p493 mov.u32 %r1560, %r621;
	@!%p493 mov.u32 %r1561, %r621;
	@!%p493 mov.u32 %r1562, %r621;
	// end inline asm
	// begin inline asm
	mov.u32 %r1567, 0x0;
	mov.u32 %r1568, 0x0;
	mov.u32 %r1569, 0x0;
	mov.u32 %r1570, 0x0;
	@%p498 ld.global.v4.b32 { %r1567, %r1568, %r1569, %r1570 }, [ %rd666 + 0 ];
	@!%p498 mov.u32 %r1567, %r621;
	@!%p498 mov.u32 %r1568, %r621;
	@!%p498 mov.u32 %r1569, %r621;
	@!%p498 mov.u32 %r1570, %r621;
	// end inline asm
	// begin inline asm
	mov.u32 %r1575, 0x0;
	mov.u32 %r1576, 0x0;
	mov.u32 %r1577, 0x0;
	mov.u32 %r1578, 0x0;
	@%p503 ld.global.v4.b32 { %r1575, %r1576, %r1577, %r1578 }, [ %rd667 + 0 ];
	@!%p503 mov.u32 %r1575, %r621;
	@!%p503 mov.u32 %r1576, %r621;
	@!%p503 mov.u32 %r1577, %r621;
	@!%p503 mov.u32 %r1578, %r621;
	// end inline asm
	bar.sync 	0;
	st.shared.v4.b32 	[%r463], {%r1519, %r1520, %r1521, %r1522};
	st.shared.v4.b32 	[%r463+1024], {%r1527, %r1528, %r1529, %r1530};
	st.shared.v4.b32 	[%r463+2048], {%r1535, %r1536, %r1537, %r1538};
	st.shared.v4.b32 	[%r463+3072], {%r1543, %r1544, %r1545, %r1546};
	st.shared.v4.b32 	[%r463+4096], {%r1551, %r1552, %r1553, %r1554};
	st.shared.v4.b32 	[%r463+5120], {%r1559, %r1560, %r1561, %r1562};
	st.shared.v4.b32 	[%r463+6144], {%r1567, %r1568, %r1569, %r1570};
	st.shared.v4.b32 	[%r463+7168], {%r1575, %r1576, %r1577, %r1578};
	.loc	1 241 23                        // prefix_prefill.py:241:23
	// begin inline asm
	fence.proxy.async.shared::cta;
	// end inline asm
	bar.sync 	0;
	shfl.sync.idx.b32	%r1903, %r2889, 0, 31, -1;
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	shl.b32 	%r1904, %r1903, 7;
	and.b32  	%r1905, %r1904, 384;
	cvt.u64.u32 	%rd725, %r1905;
	add.s64 	%rd668, %rd70, %rd725;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f7184,%f7185,%f7186,%f7187,%f7188,%f7189,%f7190,%f7191,%f7192,%f7193,%f7194,%f7195,%f7196,%f7197,%f7198,%f7199,%f7200,%f7201,%f7202,%f7203,%f7204,%f7205,%f7206,%f7207,%f7208,%f7209,%f7210,%f7211,%f7212,%f7213,%f7214,%f7215}, %rd668, %rd669, 0, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd670, %rd72, %rd725;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f7184,%f7185,%f7186,%f7187,%f7188,%f7189,%f7190,%f7191,%f7192,%f7193,%f7194,%f7195,%f7196,%f7197,%f7198,%f7199,%f7200,%f7201,%f7202,%f7203,%f7204,%f7205,%f7206,%f7207,%f7208,%f7209,%f7210,%f7211,%f7212,%f7213,%f7214,%f7215}, %rd670, %rd671, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd672, %rd74, %rd725;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f7184,%f7185,%f7186,%f7187,%f7188,%f7189,%f7190,%f7191,%f7192,%f7193,%f7194,%f7195,%f7196,%f7197,%f7198,%f7199,%f7200,%f7201,%f7202,%f7203,%f7204,%f7205,%f7206,%f7207,%f7208,%f7209,%f7210,%f7211,%f7212,%f7213,%f7214,%f7215}, %rd672, %rd673, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd674, %rd76, %rd725;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f7184,%f7185,%f7186,%f7187,%f7188,%f7189,%f7190,%f7191,%f7192,%f7193,%f7194,%f7195,%f7196,%f7197,%f7198,%f7199,%f7200,%f7201,%f7202,%f7203,%f7204,%f7205,%f7206,%f7207,%f7208,%f7209,%f7210,%f7211,%f7212,%f7213,%f7214,%f7215}, %rd674, %rd675, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd676, %rd78, %rd725;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f7184,%f7185,%f7186,%f7187,%f7188,%f7189,%f7190,%f7191,%f7192,%f7193,%f7194,%f7195,%f7196,%f7197,%f7198,%f7199,%f7200,%f7201,%f7202,%f7203,%f7204,%f7205,%f7206,%f7207,%f7208,%f7209,%f7210,%f7211,%f7212,%f7213,%f7214,%f7215}, %rd676, %rd677, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd678, %rd80, %rd725;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f7184,%f7185,%f7186,%f7187,%f7188,%f7189,%f7190,%f7191,%f7192,%f7193,%f7194,%f7195,%f7196,%f7197,%f7198,%f7199,%f7200,%f7201,%f7202,%f7203,%f7204,%f7205,%f7206,%f7207,%f7208,%f7209,%f7210,%f7211,%f7212,%f7213,%f7214,%f7215}, %rd678, %rd679, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd680, %rd82, %rd725;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f7184,%f7185,%f7186,%f7187,%f7188,%f7189,%f7190,%f7191,%f7192,%f7193,%f7194,%f7195,%f7196,%f7197,%f7198,%f7199,%f7200,%f7201,%f7202,%f7203,%f7204,%f7205,%f7206,%f7207,%f7208,%f7209,%f7210,%f7211,%f7212,%f7213,%f7214,%f7215}, %rd680, %rd681, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd682, %rd84, %rd725;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f7184,%f7185,%f7186,%f7187,%f7188,%f7189,%f7190,%f7191,%f7192,%f7193,%f7194,%f7195,%f7196,%f7197,%f7198,%f7199,%f7200,%f7201,%f7202,%f7203,%f7204,%f7205,%f7206,%f7207,%f7208,%f7209,%f7210,%f7211,%f7212,%f7213,%f7214,%f7215}, %rd682, %rd683, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd684, %rd86, %rd725;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f7664,%f7665,%f7666,%f7667,%f7668,%f7669,%f7670,%f7671,%f7672,%f7673,%f7674,%f7675,%f7676,%f7677,%f7678,%f7679,%f7680,%f7681,%f7682,%f7683,%f7684,%f7685,%f7686,%f7687,%f7688,%f7689,%f7690,%f7691,%f7692,%f7693,%f7694,%f7695}, %rd684, %rd669, 0, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd686, %rd87, %rd725;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f7664,%f7665,%f7666,%f7667,%f7668,%f7669,%f7670,%f7671,%f7672,%f7673,%f7674,%f7675,%f7676,%f7677,%f7678,%f7679,%f7680,%f7681,%f7682,%f7683,%f7684,%f7685,%f7686,%f7687,%f7688,%f7689,%f7690,%f7691,%f7692,%f7693,%f7694,%f7695}, %rd686, %rd671, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd688, %rd88, %rd725;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f7664,%f7665,%f7666,%f7667,%f7668,%f7669,%f7670,%f7671,%f7672,%f7673,%f7674,%f7675,%f7676,%f7677,%f7678,%f7679,%f7680,%f7681,%f7682,%f7683,%f7684,%f7685,%f7686,%f7687,%f7688,%f7689,%f7690,%f7691,%f7692,%f7693,%f7694,%f7695}, %rd688, %rd673, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd690, %rd89, %rd725;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f7664,%f7665,%f7666,%f7667,%f7668,%f7669,%f7670,%f7671,%f7672,%f7673,%f7674,%f7675,%f7676,%f7677,%f7678,%f7679,%f7680,%f7681,%f7682,%f7683,%f7684,%f7685,%f7686,%f7687,%f7688,%f7689,%f7690,%f7691,%f7692,%f7693,%f7694,%f7695}, %rd690, %rd675, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd692, %rd90, %rd725;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f7664,%f7665,%f7666,%f7667,%f7668,%f7669,%f7670,%f7671,%f7672,%f7673,%f7674,%f7675,%f7676,%f7677,%f7678,%f7679,%f7680,%f7681,%f7682,%f7683,%f7684,%f7685,%f7686,%f7687,%f7688,%f7689,%f7690,%f7691,%f7692,%f7693,%f7694,%f7695}, %rd692, %rd677, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd694, %rd91, %rd725;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f7664,%f7665,%f7666,%f7667,%f7668,%f7669,%f7670,%f7671,%f7672,%f7673,%f7674,%f7675,%f7676,%f7677,%f7678,%f7679,%f7680,%f7681,%f7682,%f7683,%f7684,%f7685,%f7686,%f7687,%f7688,%f7689,%f7690,%f7691,%f7692,%f7693,%f7694,%f7695}, %rd694, %rd679, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd696, %rd92, %rd725;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f7664,%f7665,%f7666,%f7667,%f7668,%f7669,%f7670,%f7671,%f7672,%f7673,%f7674,%f7675,%f7676,%f7677,%f7678,%f7679,%f7680,%f7681,%f7682,%f7683,%f7684,%f7685,%f7686,%f7687,%f7688,%f7689,%f7690,%f7691,%f7692,%f7693,%f7694,%f7695}, %rd696, %rd681, %p744, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd698, %rd93, %rd725;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%f7664,%f7665,%f7666,%f7667,%f7668,%f7669,%f7670,%f7671,%f7672,%f7673,%f7674,%f7675,%f7676,%f7677,%f7678,%f7679,%f7680,%f7681,%f7682,%f7683,%f7684,%f7685,%f7686,%f7687,%f7688,%f7689,%f7690,%f7691,%f7692,%f7693,%f7694,%f7695}, %rd698, %rd683, %p744, 1, 1, 0, 0;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	// begin inline asm
	// wait for regs: %f7184,%f7185,%f7186,%f7187,%f7188,%f7189,%f7190,%f7191,%f7192,%f7193,%f7194,%f7195,%f7196,%f7197,%f7198,%f7199,%f7200,%f7201,%f7202,%f7203,%f7204,%f7205,%f7206,%f7207,%f7208,%f7209,%f7210,%f7211,%f7212,%f7213,%f7214,%f7215,%f7664,%f7665,%f7666,%f7667,%f7668,%f7669,%f7670,%f7671,%f7672,%f7673,%f7674,%f7675,%f7676,%f7677,%f7678,%f7679,%f7680,%f7681,%f7682,%f7683,%f7684,%f7685,%f7686,%f7687,%f7688,%f7689,%f7690,%f7691,%f7692,%f7693,%f7694,%f7695
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	1 242 14                        // prefix_prefill.py:242:14
	mul.f32 	%f9592, %f2401, %f7184;
	mul.f32 	%f9593, %f2401, %f7185;
	mul.f32 	%f9594, %f2401, %f7186;
	mul.f32 	%f9595, %f2401, %f7187;
	mul.f32 	%f9596, %f2401, %f7188;
	mul.f32 	%f9597, %f2401, %f7189;
	mul.f32 	%f9598, %f2401, %f7190;
	mul.f32 	%f9599, %f2401, %f7191;
	mul.f32 	%f9600, %f2401, %f7192;
	mul.f32 	%f9601, %f2401, %f7193;
	mul.f32 	%f9602, %f2401, %f7194;
	mul.f32 	%f9603, %f2401, %f7195;
	mul.f32 	%f9604, %f2401, %f7196;
	mul.f32 	%f9605, %f2401, %f7197;
	mul.f32 	%f9606, %f2401, %f7198;
	mul.f32 	%f9607, %f2401, %f7199;
	mul.f32 	%f9608, %f2401, %f7200;
	mul.f32 	%f9609, %f2401, %f7201;
	mul.f32 	%f9610, %f2401, %f7202;
	mul.f32 	%f9611, %f2401, %f7203;
	mul.f32 	%f9612, %f2401, %f7204;
	mul.f32 	%f9613, %f2401, %f7205;
	mul.f32 	%f9614, %f2401, %f7206;
	mul.f32 	%f9615, %f2401, %f7207;
	mul.f32 	%f9616, %f2401, %f7208;
	mul.f32 	%f9617, %f2401, %f7209;
	mul.f32 	%f9618, %f2401, %f7210;
	mul.f32 	%f9619, %f2401, %f7211;
	mul.f32 	%f9620, %f2401, %f7212;
	mul.f32 	%f9621, %f2401, %f7213;
	mul.f32 	%f9622, %f2401, %f7214;
	mul.f32 	%f9623, %f2401, %f7215;
	mul.f32 	%f9624, %f2401, %f7664;
	mul.f32 	%f9625, %f2401, %f7665;
	mul.f32 	%f9626, %f2401, %f7666;
	mul.f32 	%f9627, %f2401, %f7667;
	mul.f32 	%f9628, %f2401, %f7668;
	mul.f32 	%f9629, %f2401, %f7669;
	mul.f32 	%f9630, %f2401, %f7670;
	mul.f32 	%f9631, %f2401, %f7671;
	mul.f32 	%f9632, %f2401, %f7672;
	mul.f32 	%f9633, %f2401, %f7673;
	mul.f32 	%f9634, %f2401, %f7674;
	mul.f32 	%f9635, %f2401, %f7675;
	mul.f32 	%f9636, %f2401, %f7676;
	mul.f32 	%f9637, %f2401, %f7677;
	mul.f32 	%f9638, %f2401, %f7678;
	mul.f32 	%f9639, %f2401, %f7679;
	mul.f32 	%f9640, %f2401, %f7680;
	mul.f32 	%f9641, %f2401, %f7681;
	mul.f32 	%f9642, %f2401, %f7682;
	mul.f32 	%f9643, %f2401, %f7683;
	mul.f32 	%f9644, %f2401, %f7684;
	mul.f32 	%f9645, %f2401, %f7685;
	mul.f32 	%f9646, %f2401, %f7686;
	mul.f32 	%f9647, %f2401, %f7687;
	mul.f32 	%f9648, %f2401, %f7688;
	mul.f32 	%f9649, %f2401, %f7689;
	mul.f32 	%f9650, %f2401, %f7690;
	mul.f32 	%f9651, %f2401, %f7691;
	mul.f32 	%f9652, %f2401, %f7692;
	mul.f32 	%f9653, %f2401, %f7693;
	mul.f32 	%f9654, %f2401, %f7694;
	mul.f32 	%f9655, %f2401, %f7695;
	.loc	1 237 32                        // prefix_prefill.py:237:32
	add.s64 	%rd726, %rd97, %rd855;
	add.s64 	%rd727, %rd726, 1;
	add.s64 	%rd728, %rd726, 8;
	or.b64  	%rd729, %rd726, %rd109;
	or.b64  	%rd730, %rd726, %rd108;
	or.b64  	%rd731, %rd726, %rd107;
	or.b64  	%rd732, %rd855, %rd110;
	add.s64 	%rd733, %rd726, 25;
	or.b64  	%rd734, %rd726, 48;
	or.b64  	%rd735, %rd726, 49;
	or.b64  	%rd736, %rd726, 56;
	or.b64  	%rd737, %rd726, 57;
	or.b64  	%rd738, %rd726, 32;
	or.b64  	%rd739, %rd726, 33;
	or.b64  	%rd740, %rd726, 40;
	or.b64  	%rd741, %rd726, 41;
	.loc	1 244 42                        // prefix_prefill.py:244:42
	setp.gt.s64 	%p633, %rd741, %rd121;
	selp.u16 	%rs385, 1, 0, %p633;
	shl.b16 	%rs386, %rs385, 2;
	setp.gt.s64 	%p634, %rd740, %rd121;
	selp.u16 	%rs387, -1, 0, %p634;
	shl.b16 	%rs388, %rs387, 3;
	or.b16  	%rs389, %rs388, %rs386;
	setp.gt.s64 	%p635, %rd741, %rd119;
	selp.u16 	%rs390, 1, 0, %p635;
	setp.gt.s64 	%p636, %rd740, %rd119;
	selp.u16 	%rs391, -1, 0, %p636;
	shl.b16 	%rs392, %rs391, 1;
	or.b16  	%rs393, %rs390, %rs392;
	and.b16  	%rs394, %rs393, 3;
	or.b16  	%rs395, %rs394, %rs389;
	and.b16  	%rs396, %rs395, 15;
	shl.b16 	%rs397, %rs396, 8;
	setp.gt.s64 	%p637, %rd739, %rd121;
	selp.u16 	%rs398, 1, 0, %p637;
	shl.b16 	%rs399, %rs398, 2;
	setp.gt.s64 	%p638, %rd738, %rd121;
	selp.u16 	%rs400, -1, 0, %p638;
	shl.b16 	%rs401, %rs400, 3;
	or.b16  	%rs402, %rs401, %rs399;
	setp.gt.s64 	%p639, %rd739, %rd119;
	selp.u16 	%rs403, 1, 0, %p639;
	setp.gt.s64 	%p640, %rd738, %rd119;
	selp.u16 	%rs404, -1, 0, %p640;
	shl.b16 	%rs405, %rs404, 1;
	or.b16  	%rs406, %rs403, %rs405;
	and.b16  	%rs407, %rs406, 3;
	or.b16  	%rs408, %rs407, %rs402;
	shl.b16 	%rs409, %rs408, 12;
	or.b16  	%rs410, %rs409, %rs397;
	setp.gt.s64 	%p641, %rd737, %rd121;
	selp.u16 	%rs411, 1, 0, %p641;
	shl.b16 	%rs412, %rs411, 2;
	setp.gt.s64 	%p642, %rd736, %rd121;
	selp.u16 	%rs413, -1, 0, %p642;
	shl.b16 	%rs414, %rs413, 3;
	or.b16  	%rs415, %rs414, %rs412;
	setp.gt.s64 	%p643, %rd737, %rd119;
	selp.u16 	%rs416, 1, 0, %p643;
	setp.gt.s64 	%p644, %rd736, %rd119;
	selp.u16 	%rs417, -1, 0, %p644;
	shl.b16 	%rs418, %rs417, 1;
	or.b16  	%rs419, %rs416, %rs418;
	and.b16  	%rs420, %rs419, 3;
	or.b16  	%rs421, %rs420, %rs415;
	and.b16  	%rs422, %rs421, 15;
	setp.gt.s64 	%p645, %rd735, %rd121;
	selp.u16 	%rs423, 1, 0, %p645;
	shl.b16 	%rs424, %rs423, 2;
	setp.gt.s64 	%p646, %rd734, %rd121;
	selp.u16 	%rs425, -1, 0, %p646;
	shl.b16 	%rs426, %rs425, 3;
	or.b16  	%rs427, %rs426, %rs424;
	setp.gt.s64 	%p647, %rd735, %rd119;
	selp.u16 	%rs428, 1, 0, %p647;
	setp.gt.s64 	%p648, %rd734, %rd119;
	selp.u16 	%rs429, -1, 0, %p648;
	shl.b16 	%rs430, %rs429, 1;
	or.b16  	%rs431, %rs428, %rs430;
	and.b16  	%rs432, %rs431, 3;
	or.b16  	%rs433, %rs432, %rs427;
	shl.b16 	%rs434, %rs433, 4;
	or.b16  	%rs435, %rs422, %rs434;
	and.b16  	%rs436, %rs435, 255;
	or.b16  	%rs437, %rs436, %rs410;
	cvt.u32.u16 	%r1906, %rs437;
	setp.gt.s64 	%p649, %rd732, %rd121;
	selp.u16 	%rs438, 1, 0, %p649;
	shl.b16 	%rs439, %rs438, 2;
	setp.gt.s64 	%p650, %rd728, %rd121;
	selp.u16 	%rs440, -1, 0, %p650;
	shl.b16 	%rs441, %rs440, 3;
	or.b16  	%rs442, %rs441, %rs439;
	setp.gt.s64 	%p651, %rd732, %rd119;
	selp.u16 	%rs443, 1, 0, %p651;
	setp.gt.s64 	%p652, %rd728, %rd119;
	selp.u16 	%rs444, -1, 0, %p652;
	shl.b16 	%rs445, %rs444, 1;
	or.b16  	%rs446, %rs443, %rs445;
	and.b16  	%rs447, %rs446, 3;
	or.b16  	%rs448, %rs447, %rs442;
	and.b16  	%rs449, %rs448, 15;
	shl.b16 	%rs450, %rs449, 8;
	setp.gt.s64 	%p653, %rd727, %rd121;
	selp.u16 	%rs451, 1, 0, %p653;
	shl.b16 	%rs452, %rs451, 2;
	setp.gt.s64 	%p654, %rd726, %rd121;
	selp.u16 	%rs453, -1, 0, %p654;
	shl.b16 	%rs454, %rs453, 3;
	or.b16  	%rs455, %rs454, %rs452;
	setp.gt.s64 	%p655, %rd727, %rd119;
	selp.u16 	%rs456, 1, 0, %p655;
	setp.gt.s64 	%p656, %rd726, %rd119;
	selp.u16 	%rs457, -1, 0, %p656;
	shl.b16 	%rs458, %rs457, 1;
	or.b16  	%rs459, %rs456, %rs458;
	and.b16  	%rs460, %rs459, 3;
	or.b16  	%rs461, %rs460, %rs455;
	shl.b16 	%rs462, %rs461, 12;
	or.b16  	%rs463, %rs462, %rs450;
	setp.gt.s64 	%p657, %rd733, %rd121;
	selp.u16 	%rs464, 1, 0, %p657;
	shl.b16 	%rs465, %rs464, 2;
	setp.gt.s64 	%p658, %rd731, %rd121;
	selp.u16 	%rs466, -1, 0, %p658;
	shl.b16 	%rs467, %rs466, 3;
	or.b16  	%rs468, %rs467, %rs465;
	setp.gt.s64 	%p659, %rd733, %rd119;
	selp.u16 	%rs469, 1, 0, %p659;
	setp.gt.s64 	%p660, %rd731, %rd119;
	selp.u16 	%rs470, -1, 0, %p660;
	shl.b16 	%rs471, %rs470, 1;
	or.b16  	%rs472, %rs469, %rs471;
	and.b16  	%rs473, %rs472, 3;
	or.b16  	%rs474, %rs473, %rs468;
	and.b16  	%rs475, %rs474, 15;
	setp.gt.s64 	%p661, %rd730, %rd121;
	selp.u16 	%rs476, 1, 0, %p661;
	shl.b16 	%rs477, %rs476, 2;
	setp.gt.s64 	%p662, %rd729, %rd121;
	selp.u16 	%rs478, -1, 0, %p662;
	shl.b16 	%rs479, %rs478, 3;
	or.b16  	%rs480, %rs479, %rs477;
	setp.gt.s64 	%p663, %rd730, %rd119;
	selp.u16 	%rs481, 1, 0, %p663;
	setp.gt.s64 	%p664, %rd729, %rd119;
	selp.u16 	%rs482, -1, 0, %p664;
	shl.b16 	%rs483, %rs482, 1;
	or.b16  	%rs484, %rs481, %rs483;
	and.b16  	%rs485, %rs484, 3;
	or.b16  	%rs486, %rs485, %rs480;
	shl.b16 	%rs487, %rs486, 4;
	or.b16  	%rs488, %rs475, %rs487;
	and.b16  	%rs489, %rs488, 255;
	or.b16  	%rs490, %rs489, %rs463;
	cvt.u32.u16 	%r1907, %rs490;
	shl.b32 	%r1908, %r1907, 16;
	or.b32  	%r1909, %r1906, %r1908;
	cvt.u64.u32 	%rd742, %r1909;
	setp.gt.s64 	%p665, %rd741, %rd153;
	selp.u16 	%rs491, 1, 0, %p665;
	shl.b16 	%rs492, %rs491, 2;
	setp.gt.s64 	%p666, %rd740, %rd153;
	selp.u16 	%rs493, -1, 0, %p666;
	shl.b16 	%rs494, %rs493, 3;
	or.b16  	%rs495, %rs494, %rs492;
	setp.gt.s64 	%p667, %rd741, %rd151;
	selp.u16 	%rs496, 1, 0, %p667;
	setp.gt.s64 	%p668, %rd740, %rd151;
	selp.u16 	%rs497, -1, 0, %p668;
	shl.b16 	%rs498, %rs497, 1;
	or.b16  	%rs499, %rs496, %rs498;
	and.b16  	%rs500, %rs499, 3;
	or.b16  	%rs501, %rs500, %rs495;
	and.b16  	%rs502, %rs501, 15;
	shl.b16 	%rs503, %rs502, 8;
	setp.gt.s64 	%p669, %rd739, %rd153;
	selp.u16 	%rs504, 1, 0, %p669;
	shl.b16 	%rs505, %rs504, 2;
	setp.gt.s64 	%p670, %rd738, %rd153;
	selp.u16 	%rs506, -1, 0, %p670;
	shl.b16 	%rs507, %rs506, 3;
	or.b16  	%rs508, %rs507, %rs505;
	setp.gt.s64 	%p671, %rd739, %rd151;
	selp.u16 	%rs509, 1, 0, %p671;
	setp.gt.s64 	%p672, %rd738, %rd151;
	selp.u16 	%rs510, -1, 0, %p672;
	shl.b16 	%rs511, %rs510, 1;
	or.b16  	%rs512, %rs509, %rs511;
	and.b16  	%rs513, %rs512, 3;
	or.b16  	%rs514, %rs513, %rs508;
	shl.b16 	%rs515, %rs514, 12;
	or.b16  	%rs516, %rs515, %rs503;
	setp.gt.s64 	%p673, %rd737, %rd153;
	selp.u16 	%rs517, 1, 0, %p673;
	shl.b16 	%rs518, %rs517, 2;
	setp.gt.s64 	%p674, %rd736, %rd153;
	selp.u16 	%rs519, -1, 0, %p674;
	shl.b16 	%rs520, %rs519, 3;
	or.b16  	%rs521, %rs520, %rs518;
	setp.gt.s64 	%p675, %rd737, %rd151;
	selp.u16 	%rs522, 1, 0, %p675;
	setp.gt.s64 	%p676, %rd736, %rd151;
	selp.u16 	%rs523, -1, 0, %p676;
	shl.b16 	%rs524, %rs523, 1;
	or.b16  	%rs525, %rs522, %rs524;
	and.b16  	%rs526, %rs525, 3;
	or.b16  	%rs527, %rs526, %rs521;
	and.b16  	%rs528, %rs527, 15;
	setp.gt.s64 	%p677, %rd735, %rd153;
	selp.u16 	%rs529, 1, 0, %p677;
	shl.b16 	%rs530, %rs529, 2;
	setp.gt.s64 	%p678, %rd734, %rd153;
	selp.u16 	%rs531, -1, 0, %p678;
	shl.b16 	%rs532, %rs531, 3;
	or.b16  	%rs533, %rs532, %rs530;
	setp.gt.s64 	%p679, %rd735, %rd151;
	selp.u16 	%rs534, 1, 0, %p679;
	setp.gt.s64 	%p680, %rd734, %rd151;
	selp.u16 	%rs535, -1, 0, %p680;
	shl.b16 	%rs536, %rs535, 1;
	or.b16  	%rs537, %rs534, %rs536;
	and.b16  	%rs538, %rs537, 3;
	or.b16  	%rs539, %rs538, %rs533;
	shl.b16 	%rs540, %rs539, 4;
	or.b16  	%rs541, %rs528, %rs540;
	and.b16  	%rs542, %rs541, 255;
	or.b16  	%rs543, %rs542, %rs516;
	cvt.u32.u16 	%r1910, %rs543;
	shr.u32 	%r1911, %r1910, 1;
	shr.u32 	%r1912, %r1910, 2;
	shr.u32 	%r1913, %r1910, 3;
	shr.u32 	%r1914, %r1910, 4;
	shr.u32 	%r1915, %r1910, 5;
	shr.u32 	%r1916, %r1910, 6;
	shr.u32 	%r1917, %r1910, 7;
	shr.u32 	%r1918, %r1910, 8;
	shr.u32 	%r1919, %r1910, 9;
	shr.u32 	%r1920, %r1910, 10;
	shr.u32 	%r1921, %r1910, 11;
	shr.u32 	%r1922, %r1910, 12;
	shr.u32 	%r1923, %r1910, 13;
	shr.u32 	%r1924, %r1910, 14;
	shr.u32 	%r1925, %r1910, 15;
	setp.gt.s64 	%p681, %rd733, %rd151;
	setp.gt.s64 	%p682, %rd731, %rd151;
	setp.gt.s64 	%p683, %rd733, %rd153;
	setp.gt.s64 	%p684, %rd731, %rd153;
	setp.gt.s64 	%p685, %rd730, %rd151;
	setp.gt.s64 	%p686, %rd729, %rd151;
	setp.gt.s64 	%p687, %rd730, %rd153;
	setp.gt.s64 	%p688, %rd729, %rd153;
	setp.gt.s64 	%p689, %rd732, %rd151;
	setp.gt.s64 	%p690, %rd728, %rd151;
	setp.gt.s64 	%p691, %rd732, %rd153;
	setp.gt.s64 	%p692, %rd728, %rd153;
	setp.gt.s64 	%p693, %rd727, %rd151;
	setp.gt.s64 	%p694, %rd726, %rd151;
	setp.gt.s64 	%p695, %rd727, %rd153;
	setp.gt.s64 	%p696, %rd726, %rd153;
	.loc	1 245 22                        // prefix_prefill.py:245:22
	selp.f32 	%f9656, 0fFF800000, %f9592, %p696;
	selp.f32 	%f9657, 0fFF800000, %f9593, %p695;
	selp.f32 	%f9658, 0fFF800000, %f9594, %p694;
	selp.f32 	%f9659, 0fFF800000, %f9595, %p693;
	selp.f32 	%f9660, 0fFF800000, %f9596, %p692;
	selp.f32 	%f9661, 0fFF800000, %f9597, %p691;
	selp.f32 	%f9662, 0fFF800000, %f9598, %p690;
	selp.f32 	%f9663, 0fFF800000, %f9599, %p689;
	selp.f32 	%f9664, 0fFF800000, %f9600, %p688;
	selp.f32 	%f9665, 0fFF800000, %f9601, %p687;
	selp.f32 	%f9666, 0fFF800000, %f9602, %p686;
	selp.f32 	%f9667, 0fFF800000, %f9603, %p685;
	selp.f32 	%f9668, 0fFF800000, %f9604, %p684;
	selp.f32 	%f9669, 0fFF800000, %f9605, %p683;
	selp.f32 	%f9670, 0fFF800000, %f9606, %p682;
	selp.f32 	%f9671, 0fFF800000, %f9607, %p681;
	and.b32  	%r1926, %r1925, 1;
	setp.eq.b32 	%p697, %r1926, 1;
	selp.f32 	%f9672, 0fFF800000, %f9608, %p697;
	and.b32  	%r1927, %r1924, 1;
	setp.eq.b32 	%p698, %r1927, 1;
	selp.f32 	%f9673, 0fFF800000, %f9609, %p698;
	and.b32  	%r1928, %r1923, 1;
	setp.eq.b32 	%p699, %r1928, 1;
	selp.f32 	%f9674, 0fFF800000, %f9610, %p699;
	and.b32  	%r1929, %r1922, 1;
	setp.eq.b32 	%p700, %r1929, 1;
	selp.f32 	%f9675, 0fFF800000, %f9611, %p700;
	and.b32  	%r1930, %r1921, 1;
	setp.eq.b32 	%p701, %r1930, 1;
	selp.f32 	%f9676, 0fFF800000, %f9612, %p701;
	and.b32  	%r1931, %r1920, 1;
	setp.eq.b32 	%p702, %r1931, 1;
	selp.f32 	%f9677, 0fFF800000, %f9613, %p702;
	and.b32  	%r1932, %r1919, 1;
	setp.eq.b32 	%p703, %r1932, 1;
	selp.f32 	%f9678, 0fFF800000, %f9614, %p703;
	and.b32  	%r1933, %r1918, 1;
	setp.eq.b32 	%p704, %r1933, 1;
	selp.f32 	%f9679, 0fFF800000, %f9615, %p704;
	and.b32  	%r1934, %r1917, 1;
	setp.eq.b32 	%p705, %r1934, 1;
	selp.f32 	%f9680, 0fFF800000, %f9616, %p705;
	and.b32  	%r1935, %r1916, 1;
	setp.eq.b32 	%p706, %r1935, 1;
	selp.f32 	%f9681, 0fFF800000, %f9617, %p706;
	and.b32  	%r1936, %r1915, 1;
	setp.eq.b32 	%p707, %r1936, 1;
	selp.f32 	%f9682, 0fFF800000, %f9618, %p707;
	and.b32  	%r1937, %r1914, 1;
	setp.eq.b32 	%p708, %r1937, 1;
	selp.f32 	%f9683, 0fFF800000, %f9619, %p708;
	and.b32  	%r1938, %r1913, 1;
	setp.eq.b32 	%p709, %r1938, 1;
	selp.f32 	%f9684, 0fFF800000, %f9620, %p709;
	and.b32  	%r1939, %r1912, 1;
	setp.eq.b32 	%p710, %r1939, 1;
	selp.f32 	%f9685, 0fFF800000, %f9621, %p710;
	and.b32  	%r1940, %r1911, 1;
	setp.eq.b32 	%p711, %r1940, 1;
	selp.f32 	%f9686, 0fFF800000, %f9622, %p711;
	selp.f32 	%f9687, 0fFF800000, %f9623, %p675;
	shr.u64 	%rd743, %rd742, 31;
	and.b64  	%rd744, %rd743, 1;
	setp.eq.b64 	%p712, %rd744, 1;
	selp.f32 	%f9688, 0fFF800000, %f9624, %p712;
	shr.u64 	%rd745, %rd742, 30;
	and.b64  	%rd746, %rd745, 1;
	setp.eq.b64 	%p713, %rd746, 1;
	selp.f32 	%f9689, 0fFF800000, %f9625, %p713;
	shr.u64 	%rd747, %rd742, 29;
	and.b64  	%rd748, %rd747, 1;
	setp.eq.b64 	%p714, %rd748, 1;
	selp.f32 	%f9690, 0fFF800000, %f9626, %p714;
	shr.u64 	%rd749, %rd742, 28;
	and.b64  	%rd750, %rd749, 1;
	setp.eq.b64 	%p715, %rd750, 1;
	selp.f32 	%f9691, 0fFF800000, %f9627, %p715;
	shr.u64 	%rd751, %rd742, 27;
	and.b64  	%rd752, %rd751, 1;
	setp.eq.b64 	%p716, %rd752, 1;
	selp.f32 	%f9692, 0fFF800000, %f9628, %p716;
	shr.u64 	%rd753, %rd742, 26;
	and.b64  	%rd754, %rd753, 1;
	setp.eq.b64 	%p717, %rd754, 1;
	selp.f32 	%f9693, 0fFF800000, %f9629, %p717;
	shr.u64 	%rd755, %rd742, 25;
	and.b64  	%rd756, %rd755, 1;
	setp.eq.b64 	%p718, %rd756, 1;
	selp.f32 	%f9694, 0fFF800000, %f9630, %p718;
	shr.u64 	%rd757, %rd742, 24;
	and.b64  	%rd758, %rd757, 1;
	setp.eq.b64 	%p719, %rd758, 1;
	selp.f32 	%f9695, 0fFF800000, %f9631, %p719;
	shr.u64 	%rd759, %rd742, 23;
	and.b64  	%rd760, %rd759, 1;
	setp.eq.b64 	%p720, %rd760, 1;
	selp.f32 	%f9696, 0fFF800000, %f9632, %p720;
	shr.u64 	%rd761, %rd742, 22;
	and.b64  	%rd762, %rd761, 1;
	setp.eq.b64 	%p721, %rd762, 1;
	selp.f32 	%f9697, 0fFF800000, %f9633, %p721;
	shr.u64 	%rd763, %rd742, 21;
	and.b64  	%rd764, %rd763, 1;
	setp.eq.b64 	%p722, %rd764, 1;
	selp.f32 	%f9698, 0fFF800000, %f9634, %p722;
	shr.u64 	%rd765, %rd742, 20;
	and.b64  	%rd766, %rd765, 1;
	setp.eq.b64 	%p723, %rd766, 1;
	selp.f32 	%f9699, 0fFF800000, %f9635, %p723;
	shr.u64 	%rd767, %rd742, 19;
	and.b64  	%rd768, %rd767, 1;
	setp.eq.b64 	%p724, %rd768, 1;
	selp.f32 	%f9700, 0fFF800000, %f9636, %p724;
	shr.u64 	%rd769, %rd742, 18;
	and.b64  	%rd770, %rd769, 1;
	setp.eq.b64 	%p725, %rd770, 1;
	selp.f32 	%f9701, 0fFF800000, %f9637, %p725;
	shr.u64 	%rd771, %rd742, 17;
	and.b64  	%rd772, %rd771, 1;
	setp.eq.b64 	%p726, %rd772, 1;
	selp.f32 	%f9702, 0fFF800000, %f9638, %p726;
	shr.u64 	%rd773, %rd742, 16;
	and.b64  	%rd774, %rd773, 1;
	setp.eq.b64 	%p727, %rd774, 1;
	selp.f32 	%f9703, 0fFF800000, %f9639, %p727;
	shr.u64 	%rd775, %rd742, 15;
	and.b64  	%rd776, %rd775, 1;
	setp.eq.b64 	%p728, %rd776, 1;
	selp.f32 	%f9704, 0fFF800000, %f9640, %p728;
	shr.u64 	%rd777, %rd742, 14;
	and.b64  	%rd778, %rd777, 1;
	setp.eq.b64 	%p729, %rd778, 1;
	selp.f32 	%f9705, 0fFF800000, %f9641, %p729;
	shr.u64 	%rd779, %rd742, 13;
	and.b64  	%rd780, %rd779, 1;
	setp.eq.b64 	%p730, %rd780, 1;
	selp.f32 	%f9706, 0fFF800000, %f9642, %p730;
	shr.u64 	%rd781, %rd742, 12;
	and.b64  	%rd782, %rd781, 1;
	setp.eq.b64 	%p731, %rd782, 1;
	selp.f32 	%f9707, 0fFF800000, %f9643, %p731;
	shr.u64 	%rd783, %rd742, 11;
	and.b64  	%rd784, %rd783, 1;
	setp.eq.b64 	%p732, %rd784, 1;
	selp.f32 	%f9708, 0fFF800000, %f9644, %p732;
	shr.u64 	%rd785, %rd742, 10;
	and.b64  	%rd786, %rd785, 1;
	setp.eq.b64 	%p733, %rd786, 1;
	selp.f32 	%f9709, 0fFF800000, %f9645, %p733;
	shr.u64 	%rd787, %rd742, 9;
	and.b64  	%rd788, %rd787, 1;
	setp.eq.b64 	%p734, %rd788, 1;
	selp.f32 	%f9710, 0fFF800000, %f9646, %p734;
	shr.u64 	%rd789, %rd742, 8;
	and.b64  	%rd790, %rd789, 1;
	setp.eq.b64 	%p735, %rd790, 1;
	selp.f32 	%f9711, 0fFF800000, %f9647, %p735;
	shr.u64 	%rd791, %rd742, 7;
	and.b64  	%rd792, %rd791, 1;
	setp.eq.b64 	%p736, %rd792, 1;
	selp.f32 	%f9712, 0fFF800000, %f9648, %p736;
	shr.u64 	%rd793, %rd742, 6;
	and.b64  	%rd794, %rd793, 1;
	setp.eq.b64 	%p737, %rd794, 1;
	selp.f32 	%f9713, 0fFF800000, %f9649, %p737;
	shr.u64 	%rd795, %rd742, 5;
	and.b64  	%rd796, %rd795, 1;
	setp.eq.b64 	%p738, %rd796, 1;
	selp.f32 	%f9714, 0fFF800000, %f9650, %p738;
	shr.u64 	%rd797, %rd742, 4;
	and.b64  	%rd798, %rd797, 1;
	setp.eq.b64 	%p739, %rd798, 1;
	selp.f32 	%f9715, 0fFF800000, %f9651, %p739;
	shr.u64 	%rd799, %rd742, 3;
	and.b64  	%rd800, %rd799, 1;
	setp.eq.b64 	%p740, %rd800, 1;
	selp.f32 	%f9716, 0fFF800000, %f9652, %p740;
	shr.u64 	%rd801, %rd742, 2;
	and.b64  	%rd802, %rd801, 1;
	setp.eq.b64 	%p741, %rd802, 1;
	selp.f32 	%f9717, 0fFF800000, %f9653, %p741;
	shr.u64 	%rd803, %rd742, 1;
	and.b64  	%rd804, %rd803, 1;
	setp.eq.b64 	%p742, %rd804, 1;
	selp.f32 	%f9718, 0fFF800000, %f9654, %p742;
	selp.f32 	%f9719, 0fFF800000, %f9655, %p643;
$L__tmp21:
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f9720, %f9656, %f9657;
	max.f32 	%f9721, %f9658, %f9659;
	max.f32 	%f9722, %f9720, %f9660;
	max.f32 	%f9723, %f9722, %f9661;
	max.f32 	%f9724, %f9721, %f9662;
	max.f32 	%f9725, %f9724, %f9663;
	max.f32 	%f9726, %f9723, %f9664;
	max.f32 	%f9727, %f9726, %f9665;
	max.f32 	%f9728, %f9725, %f9666;
	max.f32 	%f9729, %f9728, %f9667;
	max.f32 	%f9730, %f9727, %f9668;
	max.f32 	%f9731, %f9730, %f9669;
	max.f32 	%f9732, %f9729, %f9670;
	max.f32 	%f9733, %f9732, %f9671;
	max.f32 	%f9734, %f9731, %f9672;
	max.f32 	%f9735, %f9734, %f9673;
	max.f32 	%f9736, %f9733, %f9674;
	max.f32 	%f9737, %f9736, %f9675;
	max.f32 	%f9738, %f9735, %f9676;
	max.f32 	%f9739, %f9738, %f9677;
	max.f32 	%f9740, %f9737, %f9678;
	max.f32 	%f9741, %f9740, %f9679;
	max.f32 	%f9742, %f9739, %f9680;
	max.f32 	%f9743, %f9742, %f9681;
	max.f32 	%f9744, %f9741, %f9682;
	max.f32 	%f9745, %f9744, %f9683;
	max.f32 	%f9746, %f9743, %f9684;
	max.f32 	%f9747, %f9746, %f9685;
	max.f32 	%f9748, %f9745, %f9686;
	max.f32 	%f9749, %f9748, %f9687;
	max.f32 	%f9750, %f9688, %f9689;
	max.f32 	%f9751, %f9690, %f9691;
	max.f32 	%f9752, %f9750, %f9692;
	max.f32 	%f9753, %f9752, %f9693;
	max.f32 	%f9754, %f9751, %f9694;
	max.f32 	%f9755, %f9754, %f9695;
	max.f32 	%f9756, %f9753, %f9696;
	max.f32 	%f9757, %f9756, %f9697;
	max.f32 	%f9758, %f9755, %f9698;
	max.f32 	%f9759, %f9758, %f9699;
	max.f32 	%f9760, %f9757, %f9700;
	max.f32 	%f9761, %f9760, %f9701;
	max.f32 	%f9762, %f9759, %f9702;
	max.f32 	%f9763, %f9762, %f9703;
	max.f32 	%f9764, %f9761, %f9704;
	max.f32 	%f9765, %f9764, %f9705;
	max.f32 	%f9766, %f9763, %f9706;
	max.f32 	%f9767, %f9766, %f9707;
	max.f32 	%f9768, %f9765, %f9708;
	max.f32 	%f9769, %f9768, %f9709;
	max.f32 	%f9770, %f9767, %f9710;
	max.f32 	%f9771, %f9770, %f9711;
	max.f32 	%f9772, %f9769, %f9712;
	max.f32 	%f9773, %f9772, %f9713;
	max.f32 	%f9774, %f9771, %f9714;
	max.f32 	%f9775, %f9774, %f9715;
	max.f32 	%f9776, %f9773, %f9716;
	max.f32 	%f9777, %f9776, %f9717;
	max.f32 	%f9778, %f9775, %f9718;
	max.f32 	%f9779, %f9778, %f9719;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r1941, %f9747;
	shfl.sync.bfly.b32	%r1942, %r1941, 2, 31, -1;
	mov.b32 	%f9780, %r1942;
	mov.b32 	%r1943, %f9749;
	mov.b32 	%r1944, %f9777;
	mov.b32 	%r1945, %f9779;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f9781, %f9747, %f9780;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r1946, %f9781;
	shfl.sync.bfly.b32	%r1947, %r1946, 1, 31, -1;
	shfl.sync.bfly.b32	%r1948, %r1943, 2, 31, -1;
	mov.b32 	%f9782, %r1948;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f9783, %f9749, %f9782;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r1949, %f9783;
	shfl.sync.bfly.b32	%r1950, %r1949, 1, 31, -1;
	shfl.sync.bfly.b32	%r1951, %r1944, 2, 31, -1;
	mov.b32 	%f9784, %r1951;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f9785, %f9777, %f9784;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r1952, %f9785;
	shfl.sync.bfly.b32	%r1953, %r1952, 1, 31, -1;
	shfl.sync.bfly.b32	%r1954, %r1945, 2, 31, -1;
	mov.b32 	%f9786, %r1954;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f9787, %f9779, %f9786;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r1955, %f9787;
	shfl.sync.bfly.b32	%r1956, %r1955, 1, 31, -1;
	mov.b32 	%f9788, %r1956;
	mov.b32 	%f9789, %r1953;
	mov.b32 	%f9790, %r1950;
	mov.b32 	%f9791, %r1947;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f9792, %f9785, %f9789;
	max.f32 	%f9793, %f9787, %f9788;
	max.f32 	%f9794, %f9781, %f9791;
	max.f32 	%f9795, %f9783, %f9790;
$L__tmp22:
	.loc	1 252 31                        // prefix_prefill.py:252:31
	max.f32 	%f2136, %f10211, %f9793;
	max.f32 	%f2135, %f10210, %f9792;
	max.f32 	%f2134, %f10209, %f9795;
	max.f32 	%f2133, %f10208, %f9794;
	.loc	1 253 24                        // prefix_prefill.py:253:24
	sub.f32 	%f9796, %f9656, %f2133;
	sub.f32 	%f9797, %f9657, %f2133;
	sub.f32 	%f9798, %f9658, %f2134;
	sub.f32 	%f9799, %f9659, %f2134;
	sub.f32 	%f9800, %f9660, %f2133;
	sub.f32 	%f9801, %f9661, %f2133;
	sub.f32 	%f9802, %f9662, %f2134;
	sub.f32 	%f9803, %f9663, %f2134;
	sub.f32 	%f9804, %f9664, %f2133;
	sub.f32 	%f9805, %f9665, %f2133;
	sub.f32 	%f9806, %f9666, %f2134;
	sub.f32 	%f9807, %f9667, %f2134;
	sub.f32 	%f9808, %f9668, %f2133;
	sub.f32 	%f9809, %f9669, %f2133;
	sub.f32 	%f9810, %f9670, %f2134;
	sub.f32 	%f9811, %f9671, %f2134;
	sub.f32 	%f9812, %f9672, %f2133;
	sub.f32 	%f9813, %f9673, %f2133;
	sub.f32 	%f9814, %f9674, %f2134;
	sub.f32 	%f9815, %f9675, %f2134;
	sub.f32 	%f9816, %f9676, %f2133;
	sub.f32 	%f9817, %f9677, %f2133;
	sub.f32 	%f9818, %f9678, %f2134;
	sub.f32 	%f9819, %f9679, %f2134;
	sub.f32 	%f9820, %f9680, %f2133;
	sub.f32 	%f9821, %f9681, %f2133;
	sub.f32 	%f9822, %f9682, %f2134;
	sub.f32 	%f9823, %f9683, %f2134;
	sub.f32 	%f9824, %f9684, %f2133;
	sub.f32 	%f9825, %f9685, %f2133;
	sub.f32 	%f9826, %f9686, %f2134;
	sub.f32 	%f9827, %f9687, %f2134;
	sub.f32 	%f9828, %f9688, %f2135;
	sub.f32 	%f9829, %f9689, %f2135;
	sub.f32 	%f9830, %f9690, %f2136;
	sub.f32 	%f9831, %f9691, %f2136;
	sub.f32 	%f9832, %f9692, %f2135;
	sub.f32 	%f9833, %f9693, %f2135;
	sub.f32 	%f9834, %f9694, %f2136;
	sub.f32 	%f9835, %f9695, %f2136;
	sub.f32 	%f9836, %f9696, %f2135;
	sub.f32 	%f9837, %f9697, %f2135;
	sub.f32 	%f9838, %f9698, %f2136;
	sub.f32 	%f9839, %f9699, %f2136;
	sub.f32 	%f9840, %f9700, %f2135;
	sub.f32 	%f9841, %f9701, %f2135;
	sub.f32 	%f9842, %f9702, %f2136;
	sub.f32 	%f9843, %f9703, %f2136;
	sub.f32 	%f9844, %f9704, %f2135;
	sub.f32 	%f9845, %f9705, %f2135;
	sub.f32 	%f9846, %f9706, %f2136;
	sub.f32 	%f9847, %f9707, %f2136;
	sub.f32 	%f9848, %f9708, %f2135;
	sub.f32 	%f9849, %f9709, %f2135;
	sub.f32 	%f9850, %f9710, %f2136;
	sub.f32 	%f9851, %f9711, %f2136;
	sub.f32 	%f9852, %f9712, %f2135;
	sub.f32 	%f9853, %f9713, %f2135;
	sub.f32 	%f9854, %f9714, %f2136;
	sub.f32 	%f9855, %f9715, %f2136;
	sub.f32 	%f9856, %f9716, %f2135;
	sub.f32 	%f9857, %f9717, %f2135;
	sub.f32 	%f9858, %f9718, %f2136;
	sub.f32 	%f9859, %f9719, %f2136;
	.loc	1 253 19                        // prefix_prefill.py:253:19
	mul.f32 	%f8177, %f9796, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8176, %f8177;
	// end inline asm
	mul.f32 	%f8179, %f9797, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8178, %f8179;
	// end inline asm
	mul.f32 	%f8181, %f9798, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8180, %f8181;
	// end inline asm
	mul.f32 	%f8183, %f9799, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8182, %f8183;
	// end inline asm
	mul.f32 	%f8185, %f9800, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8184, %f8185;
	// end inline asm
	mul.f32 	%f8187, %f9801, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8186, %f8187;
	// end inline asm
	mul.f32 	%f8189, %f9802, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8188, %f8189;
	// end inline asm
	mul.f32 	%f8191, %f9803, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8190, %f8191;
	// end inline asm
	mul.f32 	%f8193, %f9804, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8192, %f8193;
	// end inline asm
	mul.f32 	%f8195, %f9805, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8194, %f8195;
	// end inline asm
	mul.f32 	%f8197, %f9806, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8196, %f8197;
	// end inline asm
	mul.f32 	%f8199, %f9807, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8198, %f8199;
	// end inline asm
	mul.f32 	%f8201, %f9808, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8200, %f8201;
	// end inline asm
	mul.f32 	%f8203, %f9809, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8202, %f8203;
	// end inline asm
	mul.f32 	%f8205, %f9810, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8204, %f8205;
	// end inline asm
	mul.f32 	%f8207, %f9811, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8206, %f8207;
	// end inline asm
	mul.f32 	%f8209, %f9812, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8208, %f8209;
	// end inline asm
	mul.f32 	%f8211, %f9813, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8210, %f8211;
	// end inline asm
	mul.f32 	%f8213, %f9814, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8212, %f8213;
	// end inline asm
	mul.f32 	%f8215, %f9815, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8214, %f8215;
	// end inline asm
	mul.f32 	%f8217, %f9816, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8216, %f8217;
	// end inline asm
	mul.f32 	%f8219, %f9817, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8218, %f8219;
	// end inline asm
	mul.f32 	%f8221, %f9818, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8220, %f8221;
	// end inline asm
	mul.f32 	%f8223, %f9819, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8222, %f8223;
	// end inline asm
	mul.f32 	%f8225, %f9820, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8224, %f8225;
	// end inline asm
	mul.f32 	%f8227, %f9821, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8226, %f8227;
	// end inline asm
	mul.f32 	%f8229, %f9822, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8228, %f8229;
	// end inline asm
	mul.f32 	%f8231, %f9823, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8230, %f8231;
	// end inline asm
	mul.f32 	%f8233, %f9824, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8232, %f8233;
	// end inline asm
	mul.f32 	%f8235, %f9825, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8234, %f8235;
	// end inline asm
	mul.f32 	%f8237, %f9826, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8236, %f8237;
	// end inline asm
	mul.f32 	%f8239, %f9827, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8238, %f8239;
	// end inline asm
	mul.f32 	%f8241, %f9828, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8240, %f8241;
	// end inline asm
	mul.f32 	%f8243, %f9829, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8242, %f8243;
	// end inline asm
	mul.f32 	%f8245, %f9830, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8244, %f8245;
	// end inline asm
	mul.f32 	%f8247, %f9831, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8246, %f8247;
	// end inline asm
	mul.f32 	%f8249, %f9832, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8248, %f8249;
	// end inline asm
	mul.f32 	%f8251, %f9833, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8250, %f8251;
	// end inline asm
	mul.f32 	%f8253, %f9834, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8252, %f8253;
	// end inline asm
	mul.f32 	%f8255, %f9835, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8254, %f8255;
	// end inline asm
	mul.f32 	%f8257, %f9836, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8256, %f8257;
	// end inline asm
	mul.f32 	%f8259, %f9837, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8258, %f8259;
	// end inline asm
	mul.f32 	%f8261, %f9838, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8260, %f8261;
	// end inline asm
	mul.f32 	%f8263, %f9839, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8262, %f8263;
	// end inline asm
	mul.f32 	%f8265, %f9840, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8264, %f8265;
	// end inline asm
	mul.f32 	%f8267, %f9841, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8266, %f8267;
	// end inline asm
	mul.f32 	%f8269, %f9842, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8268, %f8269;
	// end inline asm
	mul.f32 	%f8271, %f9843, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8270, %f8271;
	// end inline asm
	mul.f32 	%f8273, %f9844, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8272, %f8273;
	// end inline asm
	mul.f32 	%f8275, %f9845, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8274, %f8275;
	// end inline asm
	mul.f32 	%f8277, %f9846, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8276, %f8277;
	// end inline asm
	mul.f32 	%f8279, %f9847, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8278, %f8279;
	// end inline asm
	mul.f32 	%f8281, %f9848, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8280, %f8281;
	// end inline asm
	mul.f32 	%f8283, %f9849, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8282, %f8283;
	// end inline asm
	mul.f32 	%f8285, %f9850, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8284, %f8285;
	// end inline asm
	mul.f32 	%f8287, %f9851, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8286, %f8287;
	// end inline asm
	mul.f32 	%f8289, %f9852, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8288, %f8289;
	// end inline asm
	mul.f32 	%f8291, %f9853, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8290, %f8291;
	// end inline asm
	mul.f32 	%f8293, %f9854, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8292, %f8293;
	// end inline asm
	mul.f32 	%f8295, %f9855, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8294, %f8295;
	// end inline asm
	mul.f32 	%f8297, %f9856, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8296, %f8297;
	// end inline asm
	mul.f32 	%f8299, %f9857, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8298, %f8299;
	// end inline asm
	mul.f32 	%f8301, %f9858, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8300, %f8301;
	// end inline asm
	mul.f32 	%f8303, %f9859, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8302, %f8303;
	// end inline asm
$L__tmp23:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f9860, %f8176, %f8178;
	add.f32 	%f9861, %f8180, %f8182;
	add.f32 	%f9862, %f9860, %f8184;
	add.f32 	%f9863, %f9862, %f8186;
	add.f32 	%f9864, %f9861, %f8188;
	add.f32 	%f9865, %f9864, %f8190;
	add.f32 	%f9866, %f9863, %f8192;
	add.f32 	%f9867, %f9866, %f8194;
	add.f32 	%f9868, %f9865, %f8196;
	add.f32 	%f9869, %f9868, %f8198;
	add.f32 	%f9870, %f9867, %f8200;
	add.f32 	%f9871, %f9870, %f8202;
	add.f32 	%f9872, %f9869, %f8204;
	add.f32 	%f9873, %f9872, %f8206;
	add.f32 	%f9874, %f9871, %f8208;
	add.f32 	%f9875, %f9874, %f8210;
	add.f32 	%f9876, %f9873, %f8212;
	add.f32 	%f9877, %f9876, %f8214;
	add.f32 	%f9878, %f9875, %f8216;
	add.f32 	%f9879, %f9878, %f8218;
	add.f32 	%f9880, %f9877, %f8220;
	add.f32 	%f9881, %f9880, %f8222;
	add.f32 	%f9882, %f9879, %f8224;
	add.f32 	%f9883, %f9882, %f8226;
	add.f32 	%f9884, %f9881, %f8228;
	add.f32 	%f9885, %f9884, %f8230;
	add.f32 	%f9886, %f9883, %f8232;
	add.f32 	%f9887, %f9886, %f8234;
	add.f32 	%f9888, %f9885, %f8236;
	add.f32 	%f9889, %f9888, %f8238;
	add.f32 	%f9890, %f8240, %f8242;
	add.f32 	%f9891, %f8244, %f8246;
	add.f32 	%f9892, %f9890, %f8248;
	add.f32 	%f9893, %f9892, %f8250;
	add.f32 	%f9894, %f9891, %f8252;
	add.f32 	%f9895, %f9894, %f8254;
	add.f32 	%f9896, %f9893, %f8256;
	add.f32 	%f9897, %f9896, %f8258;
	add.f32 	%f9898, %f9895, %f8260;
	add.f32 	%f9899, %f9898, %f8262;
	add.f32 	%f9900, %f9897, %f8264;
	add.f32 	%f9901, %f9900, %f8266;
	add.f32 	%f9902, %f9899, %f8268;
	add.f32 	%f9903, %f9902, %f8270;
	add.f32 	%f9904, %f9901, %f8272;
	add.f32 	%f9905, %f9904, %f8274;
	add.f32 	%f9906, %f9903, %f8276;
	add.f32 	%f9907, %f9906, %f8278;
	add.f32 	%f9908, %f9905, %f8280;
	add.f32 	%f9909, %f9908, %f8282;
	add.f32 	%f9910, %f9907, %f8284;
	add.f32 	%f9911, %f9910, %f8286;
	add.f32 	%f9912, %f9909, %f8288;
	add.f32 	%f9913, %f9912, %f8290;
	add.f32 	%f9914, %f9911, %f8292;
	add.f32 	%f9915, %f9914, %f8294;
	add.f32 	%f9916, %f9913, %f8296;
	add.f32 	%f9917, %f9916, %f8298;
	add.f32 	%f9918, %f9915, %f8300;
	add.f32 	%f9919, %f9918, %f8302;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r1957, %f9887;
	shfl.sync.bfly.b32	%r1958, %r1957, 2, 31, -1;
	mov.b32 	%f9920, %r1958;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f9921, %f9887, %f9920;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r1959, %f9921;
	shfl.sync.bfly.b32	%r1960, %r1959, 1, 31, -1;
	mov.b32 	%r1961, %f9889;
	shfl.sync.bfly.b32	%r1962, %r1961, 2, 31, -1;
	mov.b32 	%f9922, %r1962;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f9923, %f9889, %f9922;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r1963, %f9923;
	shfl.sync.bfly.b32	%r1964, %r1963, 1, 31, -1;
	mov.b32 	%r1965, %f9917;
	shfl.sync.bfly.b32	%r1966, %r1965, 2, 31, -1;
	mov.b32 	%f9924, %r1966;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f9925, %f9917, %f9924;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r1967, %f9925;
	shfl.sync.bfly.b32	%r1968, %r1967, 1, 31, -1;
	mov.b32 	%r1969, %f9919;
	shfl.sync.bfly.b32	%r1970, %r1969, 2, 31, -1;
	mov.b32 	%f9926, %r1970;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f9927, %f9919, %f9926;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r1971, %f9927;
	shfl.sync.bfly.b32	%r1972, %r1971, 1, 31, -1;
$L__tmp24:
	.loc	1 255 29                        // prefix_prefill.py:255:29
	sub.f32 	%f9928, %f10211, %f2136;
	sub.f32 	%f9929, %f10210, %f2135;
	sub.f32 	%f9930, %f10209, %f2134;
	sub.f32 	%f9931, %f10208, %f2133;
	.loc	1 255 23                        // prefix_prefill.py:255:23
	mul.f32 	%f8305, %f9931, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8304, %f8305;
	// end inline asm
	mul.f32 	%f8307, %f9930, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8306, %f8307;
	// end inline asm
	mul.f32 	%f8309, %f9929, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8308, %f8309;
	// end inline asm
	mul.f32 	%f8311, %f9928, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8310, %f8311;
	// end inline asm
	.loc	1 256 20                        // prefix_prefill.py:256:20
	bar.sync 	0;
	mov.b32 	%r1584, %f8304;
	// begin inline asm
	@%p744 st.shared.b32 [ %r1583 + 0 ], %r1584;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1583 + 0 ], %r1584;
	// end inline asm
	mov.b32 	%r1588, %f8306;
	// begin inline asm
	@%p744 st.shared.b32 [ %r1587 + 0 ], %r1588;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1587 + 0 ], %r1588;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1583 + 0 ], %r1584;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1583 + 0 ], %r1584;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1587 + 0 ], %r1588;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1587 + 0 ], %r1588;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1583 + 0 ], %r1584;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1583 + 0 ], %r1584;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1587 + 0 ], %r1588;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1587 + 0 ], %r1588;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1583 + 0 ], %r1584;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1583 + 0 ], %r1584;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1587 + 0 ], %r1588;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1587 + 0 ], %r1588;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1583 + 0 ], %r1584;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1583 + 0 ], %r1584;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1587 + 0 ], %r1588;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1587 + 0 ], %r1588;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1583 + 0 ], %r1584;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1583 + 0 ], %r1584;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1587 + 0 ], %r1588;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1587 + 0 ], %r1588;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1583 + 0 ], %r1584;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1583 + 0 ], %r1584;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1587 + 0 ], %r1588;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1587 + 0 ], %r1588;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1583 + 0 ], %r1584;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1583 + 0 ], %r1584;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1587 + 0 ], %r1588;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1587 + 0 ], %r1588;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f9932, [%r1583];
	ld.shared.f32 	%f9933, [%r1587];
	bar.sync 	0;
	mov.b32 	%r1648, %f8308;
	// begin inline asm
	@%p744 st.shared.b32 [ %r1583 + 0 ], %r1648;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1583 + 0 ], %r1648;
	// end inline asm
	mov.b32 	%r1652, %f8310;
	// begin inline asm
	@%p744 st.shared.b32 [ %r1587 + 0 ], %r1652;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1587 + 0 ], %r1652;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1583 + 0 ], %r1648;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1583 + 0 ], %r1648;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1587 + 0 ], %r1652;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1587 + 0 ], %r1652;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1583 + 0 ], %r1648;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1583 + 0 ], %r1648;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1587 + 0 ], %r1652;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1587 + 0 ], %r1652;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1583 + 0 ], %r1648;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1583 + 0 ], %r1648;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1587 + 0 ], %r1652;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1587 + 0 ], %r1652;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1583 + 0 ], %r1648;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1583 + 0 ], %r1648;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1587 + 0 ], %r1652;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1587 + 0 ], %r1652;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1583 + 0 ], %r1648;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1583 + 0 ], %r1648;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1587 + 0 ], %r1652;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1587 + 0 ], %r1652;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1583 + 0 ], %r1648;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1583 + 0 ], %r1648;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1587 + 0 ], %r1652;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1587 + 0 ], %r1652;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1583 + 0 ], %r1648;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1583 + 0 ], %r1648;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1587 + 0 ], %r1652;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r1587 + 0 ], %r1652;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f9934, [%r1583];
	ld.shared.f32 	%f9935, [%r1587];
	mul.f32 	%f10216, %f10216, %f9932;
	mul.f32 	%f10217, %f10217, %f9932;
	mul.f32 	%f10218, %f10218, %f9933;
	mul.f32 	%f10219, %f10219, %f9933;
	mul.f32 	%f10220, %f10220, %f9932;
	mul.f32 	%f10221, %f10221, %f9932;
	mul.f32 	%f10222, %f10222, %f9933;
	mul.f32 	%f10223, %f10223, %f9933;
	mul.f32 	%f10224, %f10224, %f9932;
	mul.f32 	%f10225, %f10225, %f9932;
	mul.f32 	%f10226, %f10226, %f9933;
	mul.f32 	%f10227, %f10227, %f9933;
	mul.f32 	%f10228, %f10228, %f9932;
	mul.f32 	%f10229, %f10229, %f9932;
	mul.f32 	%f10230, %f10230, %f9933;
	mul.f32 	%f10231, %f10231, %f9933;
	mul.f32 	%f10232, %f10232, %f9932;
	mul.f32 	%f10233, %f10233, %f9932;
	mul.f32 	%f10234, %f10234, %f9933;
	mul.f32 	%f10235, %f10235, %f9933;
	mul.f32 	%f10236, %f10236, %f9932;
	mul.f32 	%f10237, %f10237, %f9932;
	mul.f32 	%f10238, %f10238, %f9933;
	mul.f32 	%f10239, %f10239, %f9933;
	mul.f32 	%f10240, %f10240, %f9932;
	mul.f32 	%f10241, %f10241, %f9932;
	mul.f32 	%f10242, %f10242, %f9933;
	mul.f32 	%f10243, %f10243, %f9933;
	mul.f32 	%f10244, %f10244, %f9932;
	mul.f32 	%f10245, %f10245, %f9932;
	mul.f32 	%f10246, %f10246, %f9933;
	mul.f32 	%f10247, %f10247, %f9933;
	mul.f32 	%f10248, %f10248, %f9932;
	mul.f32 	%f10249, %f10249, %f9932;
	mul.f32 	%f10250, %f10250, %f9933;
	mul.f32 	%f10251, %f10251, %f9933;
	mul.f32 	%f10252, %f10252, %f9932;
	mul.f32 	%f10253, %f10253, %f9932;
	mul.f32 	%f10254, %f10254, %f9933;
	mul.f32 	%f10255, %f10255, %f9933;
	mul.f32 	%f10256, %f10256, %f9932;
	mul.f32 	%f10257, %f10257, %f9932;
	mul.f32 	%f10258, %f10258, %f9933;
	mul.f32 	%f10259, %f10259, %f9933;
	mul.f32 	%f10260, %f10260, %f9932;
	mul.f32 	%f10261, %f10261, %f9932;
	mul.f32 	%f10262, %f10262, %f9933;
	mul.f32 	%f10263, %f10263, %f9933;
	mul.f32 	%f10264, %f10264, %f9932;
	mul.f32 	%f10265, %f10265, %f9932;
	mul.f32 	%f10266, %f10266, %f9933;
	mul.f32 	%f10267, %f10267, %f9933;
	mul.f32 	%f10268, %f10268, %f9932;
	mul.f32 	%f10269, %f10269, %f9932;
	mul.f32 	%f10270, %f10270, %f9933;
	mul.f32 	%f10271, %f10271, %f9933;
	mul.f32 	%f10272, %f10272, %f9932;
	mul.f32 	%f10273, %f10273, %f9932;
	mul.f32 	%f10274, %f10274, %f9933;
	mul.f32 	%f10275, %f10275, %f9933;
	mul.f32 	%f10276, %f10276, %f9932;
	mul.f32 	%f10277, %f10277, %f9932;
	mul.f32 	%f10278, %f10278, %f9933;
	mul.f32 	%f10279, %f10279, %f9933;
	mul.f32 	%f10280, %f10280, %f9934;
	mul.f32 	%f10281, %f10281, %f9934;
	mul.f32 	%f10282, %f10282, %f9935;
	mul.f32 	%f10283, %f10283, %f9935;
	mul.f32 	%f10284, %f10284, %f9934;
	mul.f32 	%f10285, %f10285, %f9934;
	mul.f32 	%f10286, %f10286, %f9935;
	mul.f32 	%f10287, %f10287, %f9935;
	mul.f32 	%f10288, %f10288, %f9934;
	mul.f32 	%f10289, %f10289, %f9934;
	mul.f32 	%f10290, %f10290, %f9935;
	mul.f32 	%f10291, %f10291, %f9935;
	mul.f32 	%f10292, %f10292, %f9934;
	mul.f32 	%f10293, %f10293, %f9934;
	mul.f32 	%f10294, %f10294, %f9935;
	mul.f32 	%f10295, %f10295, %f9935;
	mul.f32 	%f10296, %f10296, %f9934;
	mul.f32 	%f10297, %f10297, %f9934;
	mul.f32 	%f10298, %f10298, %f9935;
	mul.f32 	%f10299, %f10299, %f9935;
	mul.f32 	%f10300, %f10300, %f9934;
	mul.f32 	%f10301, %f10301, %f9934;
	mul.f32 	%f10302, %f10302, %f9935;
	mul.f32 	%f10303, %f10303, %f9935;
	mul.f32 	%f10304, %f10304, %f9934;
	mul.f32 	%f10305, %f10305, %f9934;
	mul.f32 	%f10306, %f10306, %f9935;
	mul.f32 	%f10307, %f10307, %f9935;
	mul.f32 	%f10308, %f10308, %f9934;
	mul.f32 	%f10309, %f10309, %f9934;
	mul.f32 	%f10310, %f10310, %f9935;
	mul.f32 	%f10311, %f10311, %f9935;
	mul.f32 	%f10312, %f10312, %f9934;
	mul.f32 	%f10313, %f10313, %f9934;
	mul.f32 	%f10314, %f10314, %f9935;
	mul.f32 	%f10315, %f10315, %f9935;
	mul.f32 	%f10316, %f10316, %f9934;
	mul.f32 	%f10317, %f10317, %f9934;
	mul.f32 	%f10318, %f10318, %f9935;
	mul.f32 	%f10319, %f10319, %f9935;
	mul.f32 	%f10320, %f10320, %f9934;
	mul.f32 	%f10321, %f10321, %f9934;
	mul.f32 	%f10322, %f10322, %f9935;
	mul.f32 	%f10323, %f10323, %f9935;
	mul.f32 	%f10324, %f10324, %f9934;
	mul.f32 	%f10325, %f10325, %f9934;
	mul.f32 	%f10326, %f10326, %f9935;
	mul.f32 	%f10327, %f10327, %f9935;
	mul.f32 	%f10328, %f10328, %f9934;
	mul.f32 	%f10329, %f10329, %f9934;
	mul.f32 	%f10330, %f10330, %f9935;
	mul.f32 	%f10331, %f10331, %f9935;
	mul.f32 	%f10332, %f10332, %f9934;
	mul.f32 	%f10333, %f10333, %f9934;
	mul.f32 	%f10334, %f10334, %f9935;
	mul.f32 	%f10335, %f10335, %f9935;
	mul.f32 	%f10336, %f10336, %f9934;
	mul.f32 	%f10337, %f10337, %f9934;
	mul.f32 	%f10338, %f10338, %f9935;
	mul.f32 	%f10339, %f10339, %f9935;
	mul.f32 	%f10340, %f10340, %f9934;
	mul.f32 	%f10341, %f10341, %f9934;
	mul.f32 	%f10342, %f10342, %f9935;
	mul.f32 	%f10343, %f10343, %f9935;
	.loc	1 260 20                        // prefix_prefill.py:260:20
	mul.wide.s32 	%rd805, %r2983, 2;
	add.s64 	%rd700, %rd62, %rd805;
	add.s64 	%rd701, %rd63, %rd805;
	add.s64 	%rd702, %rd64, %rd805;
	add.s64 	%rd703, %rd65, %rd805;
	add.s64 	%rd704, %rd66, %rd805;
	add.s64 	%rd705, %rd67, %rd805;
	add.s64 	%rd706, %rd68, %rd805;
	add.s64 	%rd707, %rd69, %rd805;
	.loc	1 259 20                        // prefix_prefill.py:259:20
	// begin inline asm
	mov.u32 %r1711, 0x0;
	mov.u32 %r1712, 0x0;
	mov.u32 %r1713, 0x0;
	mov.u32 %r1714, 0x0;
	@%p468 ld.global.v4.b32 { %r1711, %r1712, %r1713, %r1714 }, [ %rd700 + 0 ];
	@!%p468 mov.u32 %r1711, %r621;
	@!%p468 mov.u32 %r1712, %r621;
	@!%p468 mov.u32 %r1713, %r621;
	@!%p468 mov.u32 %r1714, %r621;
	// end inline asm
	// begin inline asm
	mov.u32 %r1719, 0x0;
	mov.u32 %r1720, 0x0;
	mov.u32 %r1721, 0x0;
	mov.u32 %r1722, 0x0;
	@%p473 ld.global.v4.b32 { %r1719, %r1720, %r1721, %r1722 }, [ %rd701 + 0 ];
	@!%p473 mov.u32 %r1719, %r621;
	@!%p473 mov.u32 %r1720, %r621;
	@!%p473 mov.u32 %r1721, %r621;
	@!%p473 mov.u32 %r1722, %r621;
	// end inline asm
	// begin inline asm
	mov.u32 %r1727, 0x0;
	mov.u32 %r1728, 0x0;
	mov.u32 %r1729, 0x0;
	mov.u32 %r1730, 0x0;
	@%p478 ld.global.v4.b32 { %r1727, %r1728, %r1729, %r1730 }, [ %rd702 + 0 ];
	@!%p478 mov.u32 %r1727, %r621;
	@!%p478 mov.u32 %r1728, %r621;
	@!%p478 mov.u32 %r1729, %r621;
	@!%p478 mov.u32 %r1730, %r621;
	// end inline asm
	// begin inline asm
	mov.u32 %r1735, 0x0;
	mov.u32 %r1736, 0x0;
	mov.u32 %r1737, 0x0;
	mov.u32 %r1738, 0x0;
	@%p483 ld.global.v4.b32 { %r1735, %r1736, %r1737, %r1738 }, [ %rd703 + 0 ];
	@!%p483 mov.u32 %r1735, %r621;
	@!%p483 mov.u32 %r1736, %r621;
	@!%p483 mov.u32 %r1737, %r621;
	@!%p483 mov.u32 %r1738, %r621;
	// end inline asm
	// begin inline asm
	mov.u32 %r1743, 0x0;
	mov.u32 %r1744, 0x0;
	mov.u32 %r1745, 0x0;
	mov.u32 %r1746, 0x0;
	@%p488 ld.global.v4.b32 { %r1743, %r1744, %r1745, %r1746 }, [ %rd704 + 0 ];
	@!%p488 mov.u32 %r1743, %r621;
	@!%p488 mov.u32 %r1744, %r621;
	@!%p488 mov.u32 %r1745, %r621;
	@!%p488 mov.u32 %r1746, %r621;
	// end inline asm
	// begin inline asm
	mov.u32 %r1751, 0x0;
	mov.u32 %r1752, 0x0;
	mov.u32 %r1753, 0x0;
	mov.u32 %r1754, 0x0;
	@%p493 ld.global.v4.b32 { %r1751, %r1752, %r1753, %r1754 }, [ %rd705 + 0 ];
	@!%p493 mov.u32 %r1751, %r621;
	@!%p493 mov.u32 %r1752, %r621;
	@!%p493 mov.u32 %r1753, %r621;
	@!%p493 mov.u32 %r1754, %r621;
	// end inline asm
	// begin inline asm
	mov.u32 %r1759, 0x0;
	mov.u32 %r1760, 0x0;
	mov.u32 %r1761, 0x0;
	mov.u32 %r1762, 0x0;
	@%p498 ld.global.v4.b32 { %r1759, %r1760, %r1761, %r1762 }, [ %rd706 + 0 ];
	@!%p498 mov.u32 %r1759, %r621;
	@!%p498 mov.u32 %r1760, %r621;
	@!%p498 mov.u32 %r1761, %r621;
	@!%p498 mov.u32 %r1762, %r621;
	// end inline asm
	// begin inline asm
	mov.u32 %r1767, 0x0;
	mov.u32 %r1768, 0x0;
	mov.u32 %r1769, 0x0;
	mov.u32 %r1770, 0x0;
	@%p503 ld.global.v4.b32 { %r1767, %r1768, %r1769, %r1770 }, [ %rd707 + 0 ];
	@!%p503 mov.u32 %r1767, %r621;
	@!%p503 mov.u32 %r1768, %r621;
	@!%p503 mov.u32 %r1769, %r621;
	@!%p503 mov.u32 %r1770, %r621;
	// end inline asm
	bar.sync 	0;
	st.shared.v4.b32 	[%r463], {%r1711, %r1712, %r1713, %r1714};
	st.shared.v4.b32 	[%r463+1024], {%r1719, %r1720, %r1721, %r1722};
	st.shared.v4.b32 	[%r463+2048], {%r1727, %r1728, %r1729, %r1730};
	st.shared.v4.b32 	[%r463+3072], {%r1735, %r1736, %r1737, %r1738};
	st.shared.v4.b32 	[%r463+4096], {%r1743, %r1744, %r1745, %r1746};
	st.shared.v4.b32 	[%r463+5120], {%r1751, %r1752, %r1753, %r1754};
	st.shared.v4.b32 	[%r463+6144], {%r1759, %r1760, %r1761, %r1762};
	st.shared.v4.b32 	[%r463+7168], {%r1767, %r1768, %r1769, %r1770};
	.loc	1 264 17                        // prefix_prefill.py:264:17
	mov.b32 	%r1775, %f8176;
	// begin inline asm
	cvt.rn.bf16.f32 %rs321, %r1775;
	// end inline asm
	mov.b32 	%r1776, %f8178;
	// begin inline asm
	cvt.rn.bf16.f32 %rs322, %r1776;
	// end inline asm
	mov.b32 	%r1777, %f8180;
	// begin inline asm
	cvt.rn.bf16.f32 %rs323, %r1777;
	// end inline asm
	mov.b32 	%r1778, %f8182;
	// begin inline asm
	cvt.rn.bf16.f32 %rs324, %r1778;
	// end inline asm
	mov.b32 	%r1779, %f8184;
	// begin inline asm
	cvt.rn.bf16.f32 %rs325, %r1779;
	// end inline asm
	mov.b32 	%r1780, %f8186;
	// begin inline asm
	cvt.rn.bf16.f32 %rs326, %r1780;
	// end inline asm
	mov.b32 	%r1781, %f8188;
	// begin inline asm
	cvt.rn.bf16.f32 %rs327, %r1781;
	// end inline asm
	mov.b32 	%r1782, %f8190;
	// begin inline asm
	cvt.rn.bf16.f32 %rs328, %r1782;
	// end inline asm
	mov.b32 	%r1783, %f8192;
	// begin inline asm
	cvt.rn.bf16.f32 %rs329, %r1783;
	// end inline asm
	mov.b32 	%r1784, %f8194;
	// begin inline asm
	cvt.rn.bf16.f32 %rs330, %r1784;
	// end inline asm
	mov.b32 	%r1785, %f8196;
	// begin inline asm
	cvt.rn.bf16.f32 %rs331, %r1785;
	// end inline asm
	mov.b32 	%r1786, %f8198;
	// begin inline asm
	cvt.rn.bf16.f32 %rs332, %r1786;
	// end inline asm
	mov.b32 	%r1787, %f8200;
	// begin inline asm
	cvt.rn.bf16.f32 %rs333, %r1787;
	// end inline asm
	mov.b32 	%r1788, %f8202;
	// begin inline asm
	cvt.rn.bf16.f32 %rs334, %r1788;
	// end inline asm
	mov.b32 	%r1789, %f8204;
	// begin inline asm
	cvt.rn.bf16.f32 %rs335, %r1789;
	// end inline asm
	mov.b32 	%r1790, %f8206;
	// begin inline asm
	cvt.rn.bf16.f32 %rs336, %r1790;
	// end inline asm
	mov.b32 	%r1791, %f8208;
	// begin inline asm
	cvt.rn.bf16.f32 %rs337, %r1791;
	// end inline asm
	mov.b32 	%r1792, %f8210;
	// begin inline asm
	cvt.rn.bf16.f32 %rs338, %r1792;
	// end inline asm
	mov.b32 	%r1793, %f8212;
	// begin inline asm
	cvt.rn.bf16.f32 %rs339, %r1793;
	// end inline asm
	mov.b32 	%r1794, %f8214;
	// begin inline asm
	cvt.rn.bf16.f32 %rs340, %r1794;
	// end inline asm
	mov.b32 	%r1795, %f8216;
	// begin inline asm
	cvt.rn.bf16.f32 %rs341, %r1795;
	// end inline asm
	mov.b32 	%r1796, %f8218;
	// begin inline asm
	cvt.rn.bf16.f32 %rs342, %r1796;
	// end inline asm
	mov.b32 	%r1797, %f8220;
	// begin inline asm
	cvt.rn.bf16.f32 %rs343, %r1797;
	// end inline asm
	mov.b32 	%r1798, %f8222;
	// begin inline asm
	cvt.rn.bf16.f32 %rs344, %r1798;
	// end inline asm
	mov.b32 	%r1799, %f8224;
	// begin inline asm
	cvt.rn.bf16.f32 %rs345, %r1799;
	// end inline asm
	mov.b32 	%r1800, %f8226;
	// begin inline asm
	cvt.rn.bf16.f32 %rs346, %r1800;
	// end inline asm
	mov.b32 	%r1801, %f8228;
	// begin inline asm
	cvt.rn.bf16.f32 %rs347, %r1801;
	// end inline asm
	mov.b32 	%r1802, %f8230;
	// begin inline asm
	cvt.rn.bf16.f32 %rs348, %r1802;
	// end inline asm
	mov.b32 	%r1803, %f8232;
	// begin inline asm
	cvt.rn.bf16.f32 %rs349, %r1803;
	// end inline asm
	mov.b32 	%r1804, %f8234;
	// begin inline asm
	cvt.rn.bf16.f32 %rs350, %r1804;
	// end inline asm
	mov.b32 	%r1805, %f8236;
	// begin inline asm
	cvt.rn.bf16.f32 %rs351, %r1805;
	// end inline asm
	mov.b32 	%r1806, %f8238;
	// begin inline asm
	cvt.rn.bf16.f32 %rs352, %r1806;
	// end inline asm
	mov.b32 	%r1807, %f8240;
	// begin inline asm
	cvt.rn.bf16.f32 %rs353, %r1807;
	// end inline asm
	mov.b32 	%r1808, %f8242;
	// begin inline asm
	cvt.rn.bf16.f32 %rs354, %r1808;
	// end inline asm
	mov.b32 	%r1809, %f8244;
	// begin inline asm
	cvt.rn.bf16.f32 %rs355, %r1809;
	// end inline asm
	mov.b32 	%r1810, %f8246;
	// begin inline asm
	cvt.rn.bf16.f32 %rs356, %r1810;
	// end inline asm
	mov.b32 	%r1811, %f8248;
	// begin inline asm
	cvt.rn.bf16.f32 %rs357, %r1811;
	// end inline asm
	mov.b32 	%r1812, %f8250;
	// begin inline asm
	cvt.rn.bf16.f32 %rs358, %r1812;
	// end inline asm
	mov.b32 	%r1813, %f8252;
	// begin inline asm
	cvt.rn.bf16.f32 %rs359, %r1813;
	// end inline asm
	mov.b32 	%r1814, %f8254;
	// begin inline asm
	cvt.rn.bf16.f32 %rs360, %r1814;
	// end inline asm
	mov.b32 	%r1815, %f8256;
	// begin inline asm
	cvt.rn.bf16.f32 %rs361, %r1815;
	// end inline asm
	mov.b32 	%r1816, %f8258;
	// begin inline asm
	cvt.rn.bf16.f32 %rs362, %r1816;
	// end inline asm
	mov.b32 	%r1817, %f8260;
	// begin inline asm
	cvt.rn.bf16.f32 %rs363, %r1817;
	// end inline asm
	mov.b32 	%r1818, %f8262;
	// begin inline asm
	cvt.rn.bf16.f32 %rs364, %r1818;
	// end inline asm
	mov.b32 	%r1819, %f8264;
	// begin inline asm
	cvt.rn.bf16.f32 %rs365, %r1819;
	// end inline asm
	mov.b32 	%r1820, %f8266;
	// begin inline asm
	cvt.rn.bf16.f32 %rs366, %r1820;
	// end inline asm
	mov.b32 	%r1821, %f8268;
	// begin inline asm
	cvt.rn.bf16.f32 %rs367, %r1821;
	// end inline asm
	mov.b32 	%r1822, %f8270;
	// begin inline asm
	cvt.rn.bf16.f32 %rs368, %r1822;
	// end inline asm
	mov.b32 	%r1823, %f8272;
	// begin inline asm
	cvt.rn.bf16.f32 %rs369, %r1823;
	// end inline asm
	mov.b32 	%r1824, %f8274;
	// begin inline asm
	cvt.rn.bf16.f32 %rs370, %r1824;
	// end inline asm
	mov.b32 	%r1825, %f8276;
	// begin inline asm
	cvt.rn.bf16.f32 %rs371, %r1825;
	// end inline asm
	mov.b32 	%r1826, %f8278;
	// begin inline asm
	cvt.rn.bf16.f32 %rs372, %r1826;
	// end inline asm
	mov.b32 	%r1827, %f8280;
	// begin inline asm
	cvt.rn.bf16.f32 %rs373, %r1827;
	// end inline asm
	mov.b32 	%r1828, %f8282;
	// begin inline asm
	cvt.rn.bf16.f32 %rs374, %r1828;
	// end inline asm
	mov.b32 	%r1829, %f8284;
	// begin inline asm
	cvt.rn.bf16.f32 %rs375, %r1829;
	// end inline asm
	mov.b32 	%r1830, %f8286;
	// begin inline asm
	cvt.rn.bf16.f32 %rs376, %r1830;
	// end inline asm
	mov.b32 	%r1831, %f8288;
	// begin inline asm
	cvt.rn.bf16.f32 %rs377, %r1831;
	// end inline asm
	mov.b32 	%r1832, %f8290;
	// begin inline asm
	cvt.rn.bf16.f32 %rs378, %r1832;
	// end inline asm
	mov.b32 	%r1833, %f8292;
	// begin inline asm
	cvt.rn.bf16.f32 %rs379, %r1833;
	// end inline asm
	mov.b32 	%r1834, %f8294;
	// begin inline asm
	cvt.rn.bf16.f32 %rs380, %r1834;
	// end inline asm
	mov.b32 	%r1835, %f8296;
	// begin inline asm
	cvt.rn.bf16.f32 %rs381, %r1835;
	// end inline asm
	mov.b32 	%r1836, %f8298;
	// begin inline asm
	cvt.rn.bf16.f32 %rs382, %r1836;
	// end inline asm
	mov.b32 	%r1837, %f8300;
	// begin inline asm
	cvt.rn.bf16.f32 %rs383, %r1837;
	// end inline asm
	mov.b32 	%r1838, %f8302;
	// begin inline asm
	cvt.rn.bf16.f32 %rs384, %r1838;
	// end inline asm
	.loc	1 266 24                        // prefix_prefill.py:266:24
	// begin inline asm
	fence.proxy.async.shared::cta;
	// end inline asm
	bar.sync 	0;
	mov.b32 	%r2005, {%rs321, %rs322};
	mov.b32 	%r2006, {%rs323, %rs324};
	mov.b32 	%r2007, {%rs325, %rs326};
	mov.b32 	%r2008, {%rs327, %rs328};
	mov.b32 	%r2009, {%rs329, %rs330};
	mov.b32 	%r2010, {%rs331, %rs332};
	mov.b32 	%r2011, {%rs333, %rs334};
	mov.b32 	%r2012, {%rs335, %rs336};
	mov.b32 	%r2013, {%rs337, %rs338};
	mov.b32 	%r2014, {%rs339, %rs340};
	mov.b32 	%r2015, {%rs341, %rs342};
	mov.b32 	%r2016, {%rs343, %rs344};
	mov.b32 	%r2017, {%rs345, %rs346};
	mov.b32 	%r2018, {%rs347, %rs348};
	mov.b32 	%r2019, {%rs349, %rs350};
	mov.b32 	%r2020, {%rs351, %rs352};
	mov.b32 	%r2021, {%rs353, %rs354};
	mov.b32 	%r2022, {%rs355, %rs356};
	mov.b32 	%r2023, {%rs357, %rs358};
	mov.b32 	%r2024, {%rs359, %rs360};
	mov.b32 	%r2025, {%rs361, %rs362};
	mov.b32 	%r2026, {%rs363, %rs364};
	mov.b32 	%r2027, {%rs365, %rs366};
	mov.b32 	%r2028, {%rs367, %rs368};
	mov.b32 	%r2029, {%rs369, %rs370};
	mov.b32 	%r2030, {%rs371, %rs372};
	mov.b32 	%r2031, {%rs373, %rs374};
	mov.b32 	%r2032, {%rs375, %rs376};
	mov.b32 	%r2033, {%rs377, %rs378};
	mov.b32 	%r2034, {%rs379, %rs380};
	mov.b32 	%r2035, {%rs381, %rs382};
	mov.b32 	%r2036, {%rs383, %rs384};
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.bf16.bf16 {%f10216,%f10217,%f10218,%f10219,%f10220,%f10221,%f10222,%f10223,%f10224,%f10225,%f10226,%f10227,%f10228,%f10229,%f10230,%f10231,%f10232,%f10233,%f10234,%f10235,%f10236,%f10237,%f10238,%f10239,%f10240,%f10241,%f10242,%f10243,%f10244,%f10245,%f10246,%f10247,%f10248,%f10249,%f10250,%f10251,%f10252,%f10253,%f10254,%f10255,%f10256,%f10257,%f10258,%f10259,%f10260,%f10261,%f10262,%f10263,%f10264,%f10265,%f10266,%f10267,%f10268,%f10269,%f10270,%f10271,%f10272,%f10273,%f10274,%f10275,%f10276,%f10277,%f10278,%f10279}, {%r2005,%r2006,%r2007,%r2008}, %rd669, %p744, 1, 1, 1;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.bf16.bf16 {%f10216,%f10217,%f10218,%f10219,%f10220,%f10221,%f10222,%f10223,%f10224,%f10225,%f10226,%f10227,%f10228,%f10229,%f10230,%f10231,%f10232,%f10233,%f10234,%f10235,%f10236,%f10237,%f10238,%f10239,%f10240,%f10241,%f10242,%f10243,%f10244,%f10245,%f10246,%f10247,%f10248,%f10249,%f10250,%f10251,%f10252,%f10253,%f10254,%f10255,%f10256,%f10257,%f10258,%f10259,%f10260,%f10261,%f10262,%f10263,%f10264,%f10265,%f10266,%f10267,%f10268,%f10269,%f10270,%f10271,%f10272,%f10273,%f10274,%f10275,%f10276,%f10277,%f10278,%f10279}, {%r2009,%r2010,%r2011,%r2012}, %rd709, %p744, 1, 1, 1;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.bf16.bf16 {%f10216,%f10217,%f10218,%f10219,%f10220,%f10221,%f10222,%f10223,%f10224,%f10225,%f10226,%f10227,%f10228,%f10229,%f10230,%f10231,%f10232,%f10233,%f10234,%f10235,%f10236,%f10237,%f10238,%f10239,%f10240,%f10241,%f10242,%f10243,%f10244,%f10245,%f10246,%f10247,%f10248,%f10249,%f10250,%f10251,%f10252,%f10253,%f10254,%f10255,%f10256,%f10257,%f10258,%f10259,%f10260,%f10261,%f10262,%f10263,%f10264,%f10265,%f10266,%f10267,%f10268,%f10269,%f10270,%f10271,%f10272,%f10273,%f10274,%f10275,%f10276,%f10277,%f10278,%f10279}, {%r2013,%r2014,%r2015,%r2016}, %rd710, %p744, 1, 1, 1;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.bf16.bf16 {%f10216,%f10217,%f10218,%f10219,%f10220,%f10221,%f10222,%f10223,%f10224,%f10225,%f10226,%f10227,%f10228,%f10229,%f10230,%f10231,%f10232,%f10233,%f10234,%f10235,%f10236,%f10237,%f10238,%f10239,%f10240,%f10241,%f10242,%f10243,%f10244,%f10245,%f10246,%f10247,%f10248,%f10249,%f10250,%f10251,%f10252,%f10253,%f10254,%f10255,%f10256,%f10257,%f10258,%f10259,%f10260,%f10261,%f10262,%f10263,%f10264,%f10265,%f10266,%f10267,%f10268,%f10269,%f10270,%f10271,%f10272,%f10273,%f10274,%f10275,%f10276,%f10277,%f10278,%f10279}, {%r2017,%r2018,%r2019,%r2020}, %rd711, %p744, 1, 1, 1;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.bf16.bf16 {%f10280,%f10281,%f10282,%f10283,%f10284,%f10285,%f10286,%f10287,%f10288,%f10289,%f10290,%f10291,%f10292,%f10293,%f10294,%f10295,%f10296,%f10297,%f10298,%f10299,%f10300,%f10301,%f10302,%f10303,%f10304,%f10305,%f10306,%f10307,%f10308,%f10309,%f10310,%f10311,%f10312,%f10313,%f10314,%f10315,%f10316,%f10317,%f10318,%f10319,%f10320,%f10321,%f10322,%f10323,%f10324,%f10325,%f10326,%f10327,%f10328,%f10329,%f10330,%f10331,%f10332,%f10333,%f10334,%f10335,%f10336,%f10337,%f10338,%f10339,%f10340,%f10341,%f10342,%f10343}, {%r2021,%r2022,%r2023,%r2024}, %rd669, %p744, 1, 1, 1;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.bf16.bf16 {%f10280,%f10281,%f10282,%f10283,%f10284,%f10285,%f10286,%f10287,%f10288,%f10289,%f10290,%f10291,%f10292,%f10293,%f10294,%f10295,%f10296,%f10297,%f10298,%f10299,%f10300,%f10301,%f10302,%f10303,%f10304,%f10305,%f10306,%f10307,%f10308,%f10309,%f10310,%f10311,%f10312,%f10313,%f10314,%f10315,%f10316,%f10317,%f10318,%f10319,%f10320,%f10321,%f10322,%f10323,%f10324,%f10325,%f10326,%f10327,%f10328,%f10329,%f10330,%f10331,%f10332,%f10333,%f10334,%f10335,%f10336,%f10337,%f10338,%f10339,%f10340,%f10341,%f10342,%f10343}, {%r2025,%r2026,%r2027,%r2028}, %rd709, %p744, 1, 1, 1;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.bf16.bf16 {%f10280,%f10281,%f10282,%f10283,%f10284,%f10285,%f10286,%f10287,%f10288,%f10289,%f10290,%f10291,%f10292,%f10293,%f10294,%f10295,%f10296,%f10297,%f10298,%f10299,%f10300,%f10301,%f10302,%f10303,%f10304,%f10305,%f10306,%f10307,%f10308,%f10309,%f10310,%f10311,%f10312,%f10313,%f10314,%f10315,%f10316,%f10317,%f10318,%f10319,%f10320,%f10321,%f10322,%f10323,%f10324,%f10325,%f10326,%f10327,%f10328,%f10329,%f10330,%f10331,%f10332,%f10333,%f10334,%f10335,%f10336,%f10337,%f10338,%f10339,%f10340,%f10341,%f10342,%f10343}, {%r2029,%r2030,%r2031,%r2032}, %rd710, %p744, 1, 1, 1;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.bf16.bf16 {%f10280,%f10281,%f10282,%f10283,%f10284,%f10285,%f10286,%f10287,%f10288,%f10289,%f10290,%f10291,%f10292,%f10293,%f10294,%f10295,%f10296,%f10297,%f10298,%f10299,%f10300,%f10301,%f10302,%f10303,%f10304,%f10305,%f10306,%f10307,%f10308,%f10309,%f10310,%f10311,%f10312,%f10313,%f10314,%f10315,%f10316,%f10317,%f10318,%f10319,%f10320,%f10321,%f10322,%f10323,%f10324,%f10325,%f10326,%f10327,%f10328,%f10329,%f10330,%f10331,%f10332,%f10333,%f10334,%f10335,%f10336,%f10337,%f10338,%f10339,%f10340,%f10341,%f10342,%f10343}, {%r2033,%r2034,%r2035,%r2036}, %rd711, %p744, 1, 1, 1;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	// begin inline asm
	// wait for regs: %f10216,%f10217,%f10218,%f10219,%f10220,%f10221,%f10222,%f10223,%f10224,%f10225,%f10226,%f10227,%f10228,%f10229,%f10230,%f10231,%f10232,%f10233,%f10234,%f10235,%f10236,%f10237,%f10238,%f10239,%f10240,%f10241,%f10242,%f10243,%f10244,%f10245,%f10246,%f10247,%f10248,%f10249,%f10250,%f10251,%f10252,%f10253,%f10254,%f10255,%f10256,%f10257,%f10258,%f10259,%f10260,%f10261,%f10262,%f10263,%f10264,%f10265,%f10266,%f10267,%f10268,%f10269,%f10270,%f10271,%f10272,%f10273,%f10274,%f10275,%f10276,%f10277,%f10278,%f10279,%f10280,%f10281,%f10282,%f10283,%f10284,%f10285,%f10286,%f10287,%f10288,%f10289,%f10290,%f10291,%f10292,%f10293,%f10294,%f10295,%f10296,%f10297,%f10298,%f10299,%f10300,%f10301,%f10302,%f10303,%f10304,%f10305,%f10306,%f10307,%f10308,%f10309,%f10310,%f10311,%f10312,%f10313,%f10314,%f10315,%f10316,%f10317,%f10318,%f10319,%f10320,%f10321,%f10322,%f10323,%f10324,%f10325,%f10326,%f10327,%f10328,%f10329,%f10330,%f10331,%f10332,%f10333,%f10334,%f10335,%f10336,%f10337,%f10338,%f10339,%f10340,%f10341,%f10342,%f10343
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
$L__tmp25:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%f9936, %r1968;
	mov.b32 	%f9937, %r1972;
	mov.b32 	%f9938, %r1964;
	mov.b32 	%f9939, %r1960;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f9940, %f9927, %f9937;
	add.f32 	%f9941, %f9925, %f9936;
	add.f32 	%f9942, %f9921, %f9939;
	add.f32 	%f9943, %f9923, %f9938;
$L__tmp26:
	.loc	1 268 28                        // prefix_prefill.py:268:28
	fma.rn.f32 	%f10482, %f10482, %f8308, %f9941;
	fma.rn.f32 	%f10483, %f10483, %f8310, %f9940;
	fma.rn.f32 	%f10481, %f10481, %f8306, %f9943;
	fma.rn.f32 	%f10480, %f10480, %f8304, %f9942;
	.loc	1 231 24                        // prefix_prefill.py:231:24
	add.s64 	%rd855, %rd855, 64;
	add.s32 	%r2983, %r2983, %r471;
	add.s32 	%r2982, %r2982, %r473;
	setp.lt.u64 	%p743, %rd855, %rd106;
	mov.f32 	%f10208, %f2133;
	mov.f32 	%f10209, %f2134;
	mov.f32 	%f10210, %f2135;
	mov.f32 	%f10211, %f2136;
	@%p743 bra 	$L__BB0_39;
	bra.uni 	$L__BB0_40;
$L__BB0_37:                             // %._crit_edge.._crit_edge754_crit_edge
	.loc	1 271 16                        // prefix_prefill.py:271:16
	shl.b32 	%r2984, %r24, 1;
	shl.b32 	%r2985, %r23, 1;
$L__BB0_40:                             // %._crit_edge754
	.loc	1 271 16                        // prefix_prefill.py:271:16
	bar.sync 	0;
	shl.b32 	%r2805, %r2985, 2;
	add.s32 	%r2037, %r727, %r2805;
	mov.b32 	%r2038, %f10480;
	// begin inline asm
	@%p744 st.shared.b32 [ %r2037 + 0 ], %r2038;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2037 + 0 ], %r2038;
	// end inline asm
	shl.b32 	%r2807, %r2984, 2;
	add.s32 	%r2041, %r727, %r2807;
	mov.b32 	%r2042, %f10481;
	// begin inline asm
	@%p744 st.shared.b32 [ %r2041 + 0 ], %r2042;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2041 + 0 ], %r2042;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2037 + 0 ], %r2038;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2037 + 0 ], %r2038;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2041 + 0 ], %r2042;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2041 + 0 ], %r2042;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2037 + 0 ], %r2038;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2037 + 0 ], %r2038;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2041 + 0 ], %r2042;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2041 + 0 ], %r2042;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2037 + 0 ], %r2038;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2037 + 0 ], %r2038;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2041 + 0 ], %r2042;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2041 + 0 ], %r2042;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2037 + 0 ], %r2038;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2037 + 0 ], %r2038;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2041 + 0 ], %r2042;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2041 + 0 ], %r2042;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2037 + 0 ], %r2038;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2037 + 0 ], %r2038;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2041 + 0 ], %r2042;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2041 + 0 ], %r2042;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2037 + 0 ], %r2038;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2037 + 0 ], %r2038;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2041 + 0 ], %r2042;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2041 + 0 ], %r2042;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2037 + 0 ], %r2038;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2037 + 0 ], %r2038;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2041 + 0 ], %r2042;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2041 + 0 ], %r2042;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r2167, [%r2037];
	ld.shared.u32 	%r2173, [%r2041];
	bar.sync 	0;
	mov.b32 	%r2102, %f10482;
	// begin inline asm
	@%p744 st.shared.b32 [ %r2037 + 0 ], %r2102;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2037 + 0 ], %r2102;
	// end inline asm
	mov.b32 	%r2106, %f10483;
	// begin inline asm
	@%p744 st.shared.b32 [ %r2041 + 0 ], %r2106;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2041 + 0 ], %r2106;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2037 + 0 ], %r2102;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2037 + 0 ], %r2102;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2041 + 0 ], %r2106;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2041 + 0 ], %r2106;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2037 + 0 ], %r2102;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2037 + 0 ], %r2102;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2041 + 0 ], %r2106;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2041 + 0 ], %r2106;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2037 + 0 ], %r2102;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2037 + 0 ], %r2102;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2041 + 0 ], %r2106;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2041 + 0 ], %r2106;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2037 + 0 ], %r2102;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2037 + 0 ], %r2102;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2041 + 0 ], %r2106;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2041 + 0 ], %r2106;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2037 + 0 ], %r2102;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2037 + 0 ], %r2102;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2041 + 0 ], %r2106;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2041 + 0 ], %r2106;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2037 + 0 ], %r2102;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2037 + 0 ], %r2102;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2041 + 0 ], %r2106;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2041 + 0 ], %r2106;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2037 + 0 ], %r2102;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2037 + 0 ], %r2102;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2041 + 0 ], %r2106;
	// end inline asm
	// begin inline asm
	@%p744 st.shared.b32 [ %r2041 + 0 ], %r2106;
	// end inline asm
	bar.sync 	0;
	mov.b32 	%r2166, %f10216;
	// begin inline asm
	div.full.f32 %r2549, %r2166, %r2167;
	// end inline asm
	mov.b32 	%r2169, %f10217;
	// begin inline asm
	div.full.f32 %r2550, %r2169, %r2167;
	// end inline asm
	mov.b32 	%r2172, %f10218;
	// begin inline asm
	div.full.f32 %r2551, %r2172, %r2173;
	// end inline asm
	mov.b32 	%r2175, %f10219;
	// begin inline asm
	div.full.f32 %r2552, %r2175, %r2173;
	// end inline asm
	mov.b32 	%r2178, %f10220;
	// begin inline asm
	div.full.f32 %r2553, %r2178, %r2167;
	// end inline asm
	mov.b32 	%r2181, %f10221;
	// begin inline asm
	div.full.f32 %r2554, %r2181, %r2167;
	// end inline asm
	mov.b32 	%r2184, %f10222;
	// begin inline asm
	div.full.f32 %r2555, %r2184, %r2173;
	// end inline asm
	mov.b32 	%r2187, %f10223;
	// begin inline asm
	div.full.f32 %r2556, %r2187, %r2173;
	// end inline asm
	mov.b32 	%r2190, %f10224;
	// begin inline asm
	div.full.f32 %r2557, %r2190, %r2167;
	// end inline asm
	mov.b32 	%r2193, %f10225;
	// begin inline asm
	div.full.f32 %r2558, %r2193, %r2167;
	// end inline asm
	mov.b32 	%r2196, %f10226;
	// begin inline asm
	div.full.f32 %r2559, %r2196, %r2173;
	// end inline asm
	mov.b32 	%r2199, %f10227;
	// begin inline asm
	div.full.f32 %r2560, %r2199, %r2173;
	// end inline asm
	mov.b32 	%r2202, %f10228;
	// begin inline asm
	div.full.f32 %r2561, %r2202, %r2167;
	// end inline asm
	mov.b32 	%r2205, %f10229;
	// begin inline asm
	div.full.f32 %r2562, %r2205, %r2167;
	// end inline asm
	mov.b32 	%r2208, %f10230;
	// begin inline asm
	div.full.f32 %r2563, %r2208, %r2173;
	// end inline asm
	mov.b32 	%r2211, %f10231;
	// begin inline asm
	div.full.f32 %r2564, %r2211, %r2173;
	// end inline asm
	mov.b32 	%r2214, %f10232;
	// begin inline asm
	div.full.f32 %r2565, %r2214, %r2167;
	// end inline asm
	mov.b32 	%r2217, %f10233;
	// begin inline asm
	div.full.f32 %r2566, %r2217, %r2167;
	// end inline asm
	mov.b32 	%r2220, %f10234;
	// begin inline asm
	div.full.f32 %r2567, %r2220, %r2173;
	// end inline asm
	mov.b32 	%r2223, %f10235;
	// begin inline asm
	div.full.f32 %r2568, %r2223, %r2173;
	// end inline asm
	mov.b32 	%r2226, %f10236;
	// begin inline asm
	div.full.f32 %r2569, %r2226, %r2167;
	// end inline asm
	mov.b32 	%r2229, %f10237;
	// begin inline asm
	div.full.f32 %r2570, %r2229, %r2167;
	// end inline asm
	mov.b32 	%r2232, %f10238;
	// begin inline asm
	div.full.f32 %r2571, %r2232, %r2173;
	// end inline asm
	mov.b32 	%r2235, %f10239;
	// begin inline asm
	div.full.f32 %r2572, %r2235, %r2173;
	// end inline asm
	mov.b32 	%r2238, %f10240;
	// begin inline asm
	div.full.f32 %r2573, %r2238, %r2167;
	// end inline asm
	mov.b32 	%r2241, %f10241;
	// begin inline asm
	div.full.f32 %r2574, %r2241, %r2167;
	// end inline asm
	mov.b32 	%r2244, %f10242;
	// begin inline asm
	div.full.f32 %r2575, %r2244, %r2173;
	// end inline asm
	mov.b32 	%r2247, %f10243;
	// begin inline asm
	div.full.f32 %r2576, %r2247, %r2173;
	// end inline asm
	mov.b32 	%r2250, %f10244;
	// begin inline asm
	div.full.f32 %r2577, %r2250, %r2167;
	// end inline asm
	mov.b32 	%r2253, %f10245;
	// begin inline asm
	div.full.f32 %r2578, %r2253, %r2167;
	// end inline asm
	mov.b32 	%r2256, %f10246;
	// begin inline asm
	div.full.f32 %r2579, %r2256, %r2173;
	// end inline asm
	mov.b32 	%r2259, %f10247;
	// begin inline asm
	div.full.f32 %r2580, %r2259, %r2173;
	// end inline asm
	mov.b32 	%r2262, %f10248;
	// begin inline asm
	div.full.f32 %r2581, %r2262, %r2167;
	// end inline asm
	mov.b32 	%r2265, %f10249;
	// begin inline asm
	div.full.f32 %r2582, %r2265, %r2167;
	// end inline asm
	mov.b32 	%r2268, %f10250;
	// begin inline asm
	div.full.f32 %r2583, %r2268, %r2173;
	// end inline asm
	mov.b32 	%r2271, %f10251;
	// begin inline asm
	div.full.f32 %r2584, %r2271, %r2173;
	// end inline asm
	mov.b32 	%r2274, %f10252;
	// begin inline asm
	div.full.f32 %r2585, %r2274, %r2167;
	// end inline asm
	mov.b32 	%r2277, %f10253;
	// begin inline asm
	div.full.f32 %r2586, %r2277, %r2167;
	// end inline asm
	mov.b32 	%r2280, %f10254;
	// begin inline asm
	div.full.f32 %r2587, %r2280, %r2173;
	// end inline asm
	mov.b32 	%r2283, %f10255;
	// begin inline asm
	div.full.f32 %r2588, %r2283, %r2173;
	// end inline asm
	mov.b32 	%r2286, %f10256;
	// begin inline asm
	div.full.f32 %r2589, %r2286, %r2167;
	// end inline asm
	mov.b32 	%r2289, %f10257;
	// begin inline asm
	div.full.f32 %r2590, %r2289, %r2167;
	// end inline asm
	mov.b32 	%r2292, %f10258;
	// begin inline asm
	div.full.f32 %r2591, %r2292, %r2173;
	// end inline asm
	mov.b32 	%r2295, %f10259;
	// begin inline asm
	div.full.f32 %r2592, %r2295, %r2173;
	// end inline asm
	mov.b32 	%r2298, %f10260;
	// begin inline asm
	div.full.f32 %r2593, %r2298, %r2167;
	// end inline asm
	mov.b32 	%r2301, %f10261;
	// begin inline asm
	div.full.f32 %r2594, %r2301, %r2167;
	// end inline asm
	mov.b32 	%r2304, %f10262;
	// begin inline asm
	div.full.f32 %r2595, %r2304, %r2173;
	// end inline asm
	mov.b32 	%r2307, %f10263;
	// begin inline asm
	div.full.f32 %r2596, %r2307, %r2173;
	// end inline asm
	mov.b32 	%r2310, %f10264;
	// begin inline asm
	div.full.f32 %r2597, %r2310, %r2167;
	// end inline asm
	mov.b32 	%r2313, %f10265;
	// begin inline asm
	div.full.f32 %r2598, %r2313, %r2167;
	// end inline asm
	mov.b32 	%r2316, %f10266;
	// begin inline asm
	div.full.f32 %r2599, %r2316, %r2173;
	// end inline asm
	mov.b32 	%r2319, %f10267;
	// begin inline asm
	div.full.f32 %r2600, %r2319, %r2173;
	// end inline asm
	mov.b32 	%r2322, %f10268;
	// begin inline asm
	div.full.f32 %r2601, %r2322, %r2167;
	// end inline asm
	mov.b32 	%r2325, %f10269;
	// begin inline asm
	div.full.f32 %r2602, %r2325, %r2167;
	// end inline asm
	mov.b32 	%r2328, %f10270;
	// begin inline asm
	div.full.f32 %r2603, %r2328, %r2173;
	// end inline asm
	mov.b32 	%r2331, %f10271;
	// begin inline asm
	div.full.f32 %r2604, %r2331, %r2173;
	// end inline asm
	mov.b32 	%r2334, %f10272;
	// begin inline asm
	div.full.f32 %r2605, %r2334, %r2167;
	// end inline asm
	mov.b32 	%r2337, %f10273;
	// begin inline asm
	div.full.f32 %r2606, %r2337, %r2167;
	// end inline asm
	mov.b32 	%r2340, %f10274;
	// begin inline asm
	div.full.f32 %r2607, %r2340, %r2173;
	// end inline asm
	mov.b32 	%r2343, %f10275;
	// begin inline asm
	div.full.f32 %r2608, %r2343, %r2173;
	// end inline asm
	mov.b32 	%r2346, %f10276;
	// begin inline asm
	div.full.f32 %r2609, %r2346, %r2167;
	// end inline asm
	mov.b32 	%r2349, %f10277;
	// begin inline asm
	div.full.f32 %r2610, %r2349, %r2167;
	// end inline asm
	mov.b32 	%r2352, %f10278;
	// begin inline asm
	div.full.f32 %r2611, %r2352, %r2173;
	// end inline asm
	mov.b32 	%r2355, %f10279;
	// begin inline asm
	div.full.f32 %r2612, %r2355, %r2173;
	// end inline asm
	ld.shared.u32 	%r2359, [%r2037];
	mov.b32 	%r2358, %f10280;
	// begin inline asm
	div.full.f32 %r2613, %r2358, %r2359;
	// end inline asm
	mov.b32 	%r2361, %f10281;
	// begin inline asm
	div.full.f32 %r2614, %r2361, %r2359;
	// end inline asm
	ld.shared.u32 	%r2365, [%r2041];
	mov.b32 	%r2364, %f10282;
	// begin inline asm
	div.full.f32 %r2615, %r2364, %r2365;
	// end inline asm
	mov.b32 	%r2367, %f10283;
	// begin inline asm
	div.full.f32 %r2616, %r2367, %r2365;
	// end inline asm
	mov.b32 	%r2370, %f10284;
	// begin inline asm
	div.full.f32 %r2617, %r2370, %r2359;
	// end inline asm
	mov.b32 	%r2373, %f10285;
	// begin inline asm
	div.full.f32 %r2618, %r2373, %r2359;
	// end inline asm
	mov.b32 	%r2376, %f10286;
	// begin inline asm
	div.full.f32 %r2619, %r2376, %r2365;
	// end inline asm
	mov.b32 	%r2379, %f10287;
	// begin inline asm
	div.full.f32 %r2620, %r2379, %r2365;
	// end inline asm
	mov.b32 	%r2382, %f10288;
	// begin inline asm
	div.full.f32 %r2621, %r2382, %r2359;
	// end inline asm
	mov.b32 	%r2385, %f10289;
	// begin inline asm
	div.full.f32 %r2622, %r2385, %r2359;
	// end inline asm
	mov.b32 	%r2388, %f10290;
	// begin inline asm
	div.full.f32 %r2623, %r2388, %r2365;
	// end inline asm
	mov.b32 	%r2391, %f10291;
	// begin inline asm
	div.full.f32 %r2624, %r2391, %r2365;
	// end inline asm
	mov.b32 	%r2394, %f10292;
	// begin inline asm
	div.full.f32 %r2625, %r2394, %r2359;
	// end inline asm
	mov.b32 	%r2397, %f10293;
	// begin inline asm
	div.full.f32 %r2626, %r2397, %r2359;
	// end inline asm
	mov.b32 	%r2400, %f10294;
	// begin inline asm
	div.full.f32 %r2627, %r2400, %r2365;
	// end inline asm
	mov.b32 	%r2403, %f10295;
	// begin inline asm
	div.full.f32 %r2628, %r2403, %r2365;
	// end inline asm
	mov.b32 	%r2406, %f10296;
	// begin inline asm
	div.full.f32 %r2629, %r2406, %r2359;
	// end inline asm
	mov.b32 	%r2409, %f10297;
	// begin inline asm
	div.full.f32 %r2630, %r2409, %r2359;
	// end inline asm
	mov.b32 	%r2412, %f10298;
	// begin inline asm
	div.full.f32 %r2631, %r2412, %r2365;
	// end inline asm
	mov.b32 	%r2415, %f10299;
	// begin inline asm
	div.full.f32 %r2632, %r2415, %r2365;
	// end inline asm
	mov.b32 	%r2418, %f10300;
	// begin inline asm
	div.full.f32 %r2633, %r2418, %r2359;
	// end inline asm
	mov.b32 	%r2421, %f10301;
	// begin inline asm
	div.full.f32 %r2634, %r2421, %r2359;
	// end inline asm
	mov.b32 	%r2424, %f10302;
	// begin inline asm
	div.full.f32 %r2635, %r2424, %r2365;
	// end inline asm
	mov.b32 	%r2427, %f10303;
	// begin inline asm
	div.full.f32 %r2636, %r2427, %r2365;
	// end inline asm
	mov.b32 	%r2430, %f10304;
	// begin inline asm
	div.full.f32 %r2637, %r2430, %r2359;
	// end inline asm
	mov.b32 	%r2433, %f10305;
	// begin inline asm
	div.full.f32 %r2638, %r2433, %r2359;
	// end inline asm
	mov.b32 	%r2436, %f10306;
	// begin inline asm
	div.full.f32 %r2639, %r2436, %r2365;
	// end inline asm
	mov.b32 	%r2439, %f10307;
	// begin inline asm
	div.full.f32 %r2640, %r2439, %r2365;
	// end inline asm
	mov.b32 	%r2442, %f10308;
	// begin inline asm
	div.full.f32 %r2641, %r2442, %r2359;
	// end inline asm
	mov.b32 	%r2445, %f10309;
	// begin inline asm
	div.full.f32 %r2642, %r2445, %r2359;
	// end inline asm
	mov.b32 	%r2448, %f10310;
	// begin inline asm
	div.full.f32 %r2643, %r2448, %r2365;
	// end inline asm
	mov.b32 	%r2451, %f10311;
	// begin inline asm
	div.full.f32 %r2644, %r2451, %r2365;
	// end inline asm
	mov.b32 	%r2454, %f10312;
	// begin inline asm
	div.full.f32 %r2645, %r2454, %r2359;
	// end inline asm
	mov.b32 	%r2457, %f10313;
	// begin inline asm
	div.full.f32 %r2646, %r2457, %r2359;
	// end inline asm
	mov.b32 	%r2460, %f10314;
	// begin inline asm
	div.full.f32 %r2647, %r2460, %r2365;
	// end inline asm
	mov.b32 	%r2463, %f10315;
	// begin inline asm
	div.full.f32 %r2648, %r2463, %r2365;
	// end inline asm
	mov.b32 	%r2466, %f10316;
	// begin inline asm
	div.full.f32 %r2649, %r2466, %r2359;
	// end inline asm
	mov.b32 	%r2469, %f10317;
	// begin inline asm
	div.full.f32 %r2650, %r2469, %r2359;
	// end inline asm
	mov.b32 	%r2472, %f10318;
	// begin inline asm
	div.full.f32 %r2651, %r2472, %r2365;
	// end inline asm
	mov.b32 	%r2475, %f10319;
	// begin inline asm
	div.full.f32 %r2652, %r2475, %r2365;
	// end inline asm
	mov.b32 	%r2478, %f10320;
	// begin inline asm
	div.full.f32 %r2653, %r2478, %r2359;
	// end inline asm
	mov.b32 	%r2481, %f10321;
	// begin inline asm
	div.full.f32 %r2654, %r2481, %r2359;
	// end inline asm
	mov.b32 	%r2484, %f10322;
	// begin inline asm
	div.full.f32 %r2655, %r2484, %r2365;
	// end inline asm
	mov.b32 	%r2487, %f10323;
	// begin inline asm
	div.full.f32 %r2656, %r2487, %r2365;
	// end inline asm
	mov.b32 	%r2490, %f10324;
	// begin inline asm
	div.full.f32 %r2657, %r2490, %r2359;
	// end inline asm
	mov.b32 	%r2493, %f10325;
	// begin inline asm
	div.full.f32 %r2658, %r2493, %r2359;
	// end inline asm
	mov.b32 	%r2496, %f10326;
	// begin inline asm
	div.full.f32 %r2659, %r2496, %r2365;
	// end inline asm
	mov.b32 	%r2499, %f10327;
	// begin inline asm
	div.full.f32 %r2660, %r2499, %r2365;
	// end inline asm
	mov.b32 	%r2502, %f10328;
	// begin inline asm
	div.full.f32 %r2661, %r2502, %r2359;
	// end inline asm
	mov.b32 	%r2505, %f10329;
	// begin inline asm
	div.full.f32 %r2662, %r2505, %r2359;
	// end inline asm
	mov.b32 	%r2508, %f10330;
	// begin inline asm
	div.full.f32 %r2663, %r2508, %r2365;
	// end inline asm
	mov.b32 	%r2511, %f10331;
	// begin inline asm
	div.full.f32 %r2664, %r2511, %r2365;
	// end inline asm
	mov.b32 	%r2514, %f10332;
	// begin inline asm
	div.full.f32 %r2665, %r2514, %r2359;
	// end inline asm
	mov.b32 	%r2517, %f10333;
	// begin inline asm
	div.full.f32 %r2666, %r2517, %r2359;
	// end inline asm
	mov.b32 	%r2520, %f10334;
	// begin inline asm
	div.full.f32 %r2667, %r2520, %r2365;
	// end inline asm
	mov.b32 	%r2523, %f10335;
	// begin inline asm
	div.full.f32 %r2668, %r2523, %r2365;
	// end inline asm
	mov.b32 	%r2526, %f10336;
	// begin inline asm
	div.full.f32 %r2669, %r2526, %r2359;
	// end inline asm
	mov.b32 	%r2529, %f10337;
	// begin inline asm
	div.full.f32 %r2670, %r2529, %r2359;
	// end inline asm
	mov.b32 	%r2532, %f10338;
	// begin inline asm
	div.full.f32 %r2671, %r2532, %r2365;
	// end inline asm
	mov.b32 	%r2535, %f10339;
	// begin inline asm
	div.full.f32 %r2672, %r2535, %r2365;
	// end inline asm
	mov.b32 	%r2538, %f10340;
	// begin inline asm
	div.full.f32 %r2673, %r2538, %r2359;
	// end inline asm
	mov.b32 	%r2541, %f10341;
	// begin inline asm
	div.full.f32 %r2674, %r2541, %r2359;
	// end inline asm
	mov.b32 	%r2544, %f10342;
	// begin inline asm
	div.full.f32 %r2675, %r2544, %r2365;
	// end inline asm
	mov.b32 	%r2547, %f10343;
	// begin inline asm
	div.full.f32 %r2676, %r2547, %r2365;
	// end inline asm
	.loc	1 275 13                        // prefix_prefill.py:275:13
	mad.lo.s32 	%r2808, %r489, %r485, %r22;
	.loc	1 275 36                        // prefix_prefill.py:275:36
	mad.lo.s32 	%r2809, %r50, %r484, %r2808;
	mad.lo.s32 	%r2810, %r51, %r484, %r2808;
	mad.lo.s32 	%r2811, %r52, %r484, %r2808;
	mad.lo.s32 	%r2812, %r53, %r484, %r2808;
	mad.lo.s32 	%r2813, %r54, %r484, %r2808;
	mad.lo.s32 	%r2814, %r55, %r484, %r2808;
	mad.lo.s32 	%r2815, %r56, %r484, %r2808;
	mad.lo.s32 	%r2816, %r57, %r484, %r2808;
	mad.lo.s32 	%r2817, %r58, %r484, %r2808;
	mad.lo.s32 	%r2818, %r59, %r484, %r2808;
	mad.lo.s32 	%r2819, %r60, %r484, %r2808;
	mad.lo.s32 	%r2820, %r61, %r484, %r2808;
	mad.lo.s32 	%r2821, %r62, %r484, %r2808;
	mad.lo.s32 	%r2822, %r63, %r484, %r2808;
	mad.lo.s32 	%r2823, %r64, %r484, %r2808;
	mad.lo.s32 	%r2824, %r65, %r484, %r2808;
	.loc	1 276 21                        // prefix_prefill.py:276:21
	mul.wide.s32 	%rd822, %r2809, 2;
	add.s64 	%rd806, %rd189, %rd822;
	mul.wide.s32 	%rd823, %r2810, 2;
	add.s64 	%rd807, %rd189, %rd823;
	mul.wide.s32 	%rd824, %r2811, 2;
	add.s64 	%rd808, %rd189, %rd824;
	mul.wide.s32 	%rd825, %r2812, 2;
	add.s64 	%rd809, %rd189, %rd825;
	mul.wide.s32 	%rd826, %r2813, 2;
	add.s64 	%rd810, %rd189, %rd826;
	mul.wide.s32 	%rd827, %r2814, 2;
	add.s64 	%rd811, %rd189, %rd827;
	mul.wide.s32 	%rd828, %r2815, 2;
	add.s64 	%rd812, %rd189, %rd828;
	mul.wide.s32 	%rd829, %r2816, 2;
	add.s64 	%rd813, %rd189, %rd829;
	mul.wide.s32 	%rd830, %r2817, 2;
	add.s64 	%rd814, %rd189, %rd830;
	mul.wide.s32 	%rd831, %r2818, 2;
	add.s64 	%rd815, %rd189, %rd831;
	mul.wide.s32 	%rd832, %r2819, 2;
	add.s64 	%rd816, %rd189, %rd832;
	mul.wide.s32 	%rd833, %r2820, 2;
	add.s64 	%rd817, %rd189, %rd833;
	mul.wide.s32 	%rd834, %r2821, 2;
	add.s64 	%rd818, %rd189, %rd834;
	mul.wide.s32 	%rd835, %r2822, 2;
	add.s64 	%rd819, %rd189, %rd835;
	mul.wide.s32 	%rd836, %r2823, 2;
	add.s64 	%rd820, %rd189, %rd836;
	mul.wide.s32 	%rd837, %r2824, 2;
	add.s64 	%rd821, %rd189, %rd837;
	.loc	1 278 13                        // prefix_prefill.py:278:13
	// begin inline asm
	cvt.rn.bf16.f32 %rs736, %r2549;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs737, %r2550;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs738, %r2551;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs739, %r2552;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs740, %r2553;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs741, %r2554;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs742, %r2555;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs743, %r2556;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs744, %r2557;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs745, %r2558;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs746, %r2559;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs747, %r2560;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs748, %r2561;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs749, %r2562;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs750, %r2563;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs751, %r2564;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs752, %r2565;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs753, %r2566;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs754, %r2567;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs755, %r2568;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs756, %r2569;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs757, %r2570;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs758, %r2571;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs759, %r2572;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs760, %r2573;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs761, %r2574;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs762, %r2575;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs763, %r2576;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs764, %r2577;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs765, %r2578;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs766, %r2579;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs767, %r2580;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs768, %r2581;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs769, %r2582;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs770, %r2583;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs771, %r2584;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs772, %r2585;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs773, %r2586;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs774, %r2587;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs775, %r2588;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs776, %r2589;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs777, %r2590;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs778, %r2591;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs779, %r2592;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs780, %r2593;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs781, %r2594;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs782, %r2595;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs783, %r2596;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs784, %r2597;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs785, %r2598;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs786, %r2599;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs787, %r2600;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs788, %r2601;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs789, %r2602;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs790, %r2603;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs791, %r2604;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs792, %r2605;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs793, %r2606;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs794, %r2607;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs795, %r2608;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs796, %r2609;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs797, %r2610;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs798, %r2611;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs799, %r2612;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs800, %r2613;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs801, %r2614;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs802, %r2615;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs803, %r2616;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs804, %r2617;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs805, %r2618;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs806, %r2619;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs807, %r2620;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs808, %r2621;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs809, %r2622;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs810, %r2623;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs811, %r2624;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs812, %r2625;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs813, %r2626;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs814, %r2627;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs815, %r2628;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs816, %r2629;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs817, %r2630;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs818, %r2631;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs819, %r2632;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs820, %r2633;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs821, %r2634;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs822, %r2635;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs823, %r2636;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs824, %r2637;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs825, %r2638;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs826, %r2639;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs827, %r2640;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs828, %r2641;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs829, %r2642;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs830, %r2643;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs831, %r2644;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs832, %r2645;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs833, %r2646;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs834, %r2647;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs835, %r2648;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs836, %r2649;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs837, %r2650;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs838, %r2651;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs839, %r2652;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs840, %r2653;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs841, %r2654;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs842, %r2655;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs843, %r2656;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs844, %r2657;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs845, %r2658;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs846, %r2659;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs847, %r2660;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs848, %r2661;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs849, %r2662;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs850, %r2663;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs851, %r2664;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs852, %r2665;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs853, %r2666;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs854, %r2667;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs855, %r2668;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs856, %r2669;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs857, %r2670;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs858, %r2671;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs859, %r2672;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs860, %r2673;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs861, %r2674;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs862, %r2675;
	// end inline asm
	// begin inline asm
	cvt.rn.bf16.f32 %rs863, %r2676;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r2825, %r7, 5;
	and.b32  	%r2826, %r2825, 896;
	or.b32  	%r2827, %r9, %r10;
	shl.b32 	%r2828, %r2827, 6;
	or.b32  	%r2829, %r2828, %r2826;
	or.b32  	%r2830, %r2829, %r72;
	and.b32  	%r2831, %r19, 896;
	or.b32  	%r2832, %r22, %r2831;
	shr.u32 	%r2833, %r2829, 4;
	add.s32 	%r2834, %r2833, %r2830;
	shl.b32 	%r2835, %r2834, 1;
	add.s32 	%r2677, %r727, %r2835;
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2677 + 0 ], { %rs736, %rs737 };
	// end inline asm
	or.b32  	%r2836, %r2829, 1024;
	shr.u32 	%r2837, %r2836, 4;
	add.s32 	%r2838, %r2837, %r2830;
	shl.b32 	%r2839, %r2838, 1;
	add.s32 	%r2840, %r727, %r2839;
	add.s32 	%r2678, %r2840, 2048;
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2678 + 0 ], { %rs738, %rs739 };
	// end inline asm
	add.s32 	%r2679, %r2677, 16;
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2679 + 0 ], { %rs740, %rs741 };
	// end inline asm
	add.s32 	%r2680, %r2840, 2064;
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2680 + 0 ], { %rs742, %rs743 };
	// end inline asm
	add.s32 	%r2681, %r2677, 32;
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2681 + 0 ], { %rs744, %rs745 };
	// end inline asm
	and.b32  	%r2841, %r2837, 504;
	add.s32 	%r2842, %r2841, %r2830;
	shl.b32 	%r2843, %r2842, 1;
	add.s32 	%r2844, %r727, %r2843;
	add.s32 	%r2682, %r2844, 2080;
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2682 + 0 ], { %rs746, %rs747 };
	// end inline asm
	add.s32 	%r2683, %r2677, 48;
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2683 + 0 ], { %rs748, %rs749 };
	// end inline asm
	add.s32 	%r2684, %r2844, 2096;
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2684 + 0 ], { %rs750, %rs751 };
	// end inline asm
	add.s32 	%r2685, %r2677, 64;
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2685 + 0 ], { %rs752, %rs753 };
	// end inline asm
	add.s32 	%r2686, %r2844, 2112;
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2686 + 0 ], { %rs754, %rs755 };
	// end inline asm
	add.s32 	%r2687, %r2677, 80;
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2687 + 0 ], { %rs756, %rs757 };
	// end inline asm
	add.s32 	%r2688, %r2844, 2128;
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2688 + 0 ], { %rs758, %rs759 };
	// end inline asm
	add.s32 	%r2689, %r2677, 96;
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2689 + 0 ], { %rs760, %rs761 };
	// end inline asm
	add.s32 	%r2690, %r2844, 2144;
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2690 + 0 ], { %rs762, %rs763 };
	// end inline asm
	add.s32 	%r2691, %r2677, 112;
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2691 + 0 ], { %rs764, %rs765 };
	// end inline asm
	add.s32 	%r2692, %r2844, 2160;
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2692 + 0 ], { %rs766, %rs767 };
	// end inline asm
	add.s32 	%r2693, %r2677, 128;
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2693 + 0 ], { %rs768, %rs769 };
	// end inline asm
	add.s32 	%r2694, %r2844, 2176;
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2694 + 0 ], { %rs770, %rs771 };
	// end inline asm
	add.s32 	%r2695, %r2677, 144;
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2695 + 0 ], { %rs772, %rs773 };
	// end inline asm
	add.s32 	%r2696, %r2844, 2192;
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2696 + 0 ], { %rs774, %rs775 };
	// end inline asm
	add.s32 	%r2697, %r2677, 160;
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2697 + 0 ], { %rs776, %rs777 };
	// end inline asm
	add.s32 	%r2698, %r2844, 2208;
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2698 + 0 ], { %rs778, %rs779 };
	// end inline asm
	add.s32 	%r2699, %r2677, 176;
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2699 + 0 ], { %rs780, %rs781 };
	// end inline asm
	add.s32 	%r2700, %r2844, 2224;
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2700 + 0 ], { %rs782, %rs783 };
	// end inline asm
	add.s32 	%r2701, %r2677, 192;
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2701 + 0 ], { %rs784, %rs785 };
	// end inline asm
	add.s32 	%r2702, %r2844, 2240;
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2702 + 0 ], { %rs786, %rs787 };
	// end inline asm
	add.s32 	%r2703, %r2677, 208;
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2703 + 0 ], { %rs788, %rs789 };
	// end inline asm
	add.s32 	%r2704, %r2844, 2256;
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2704 + 0 ], { %rs790, %rs791 };
	// end inline asm
	add.s32 	%r2705, %r2677, 224;
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2705 + 0 ], { %rs792, %rs793 };
	// end inline asm
	add.s32 	%r2706, %r2844, 2272;
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2706 + 0 ], { %rs794, %rs795 };
	// end inline asm
	add.s32 	%r2707, %r2677, 240;
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2707 + 0 ], { %rs796, %rs797 };
	// end inline asm
	add.s32 	%r2708, %r2844, 2288;
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2708 + 0 ], { %rs798, %rs799 };
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r2845, %r2831, 4;
	add.s32 	%r2846, %r2832, %r2845;
	shl.b32 	%r2847, %r2846, 1;
	add.s32 	%r2848, %r727, %r2847;
	ld.shared.v4.u32 	{%r2741, %r2742, %r2743, %r2744}, [%r2848];
	or.b32  	%r2849, %r2831, 1024;
	shr.u32 	%r2850, %r2849, 4;
	add.s32 	%r2851, %r2850, %r2832;
	shl.b32 	%r2852, %r2851, 1;
	add.s32 	%r2853, %r727, %r2852;
	ld.shared.v4.u32 	{%r2745, %r2746, %r2747, %r2748}, [%r2853+2048];
	or.b32  	%r2854, %r2831, 2048;
	shr.u32 	%r2855, %r2854, 4;
	add.s32 	%r2856, %r2855, %r2832;
	shl.b32 	%r2857, %r2856, 1;
	add.s32 	%r2858, %r727, %r2857;
	ld.shared.v4.u32 	{%r2749, %r2750, %r2751, %r2752}, [%r2858+4096];
	or.b32  	%r2859, %r2831, 3072;
	shr.u32 	%r2860, %r2859, 4;
	add.s32 	%r2861, %r2860, %r2832;
	shl.b32 	%r2862, %r2861, 1;
	add.s32 	%r2863, %r727, %r2862;
	ld.shared.v4.u32 	{%r2753, %r2754, %r2755, %r2756}, [%r2863+6144];
	or.b32  	%r2864, %r2831, 4096;
	shr.u32 	%r2865, %r2864, 4;
	add.s32 	%r2866, %r2865, %r2832;
	shl.b32 	%r2867, %r2866, 1;
	add.s32 	%r2868, %r727, %r2867;
	ld.shared.v4.u32 	{%r2757, %r2758, %r2759, %r2760}, [%r2868+8192];
	or.b32  	%r2869, %r2831, 5120;
	shr.u32 	%r2870, %r2869, 4;
	add.s32 	%r2871, %r2870, %r2832;
	shl.b32 	%r2872, %r2871, 1;
	add.s32 	%r2873, %r727, %r2872;
	ld.shared.v4.u32 	{%r2761, %r2762, %r2763, %r2764}, [%r2873+10240];
	or.b32  	%r2874, %r2831, 6144;
	shr.u32 	%r2875, %r2874, 4;
	add.s32 	%r2876, %r2875, %r2832;
	shl.b32 	%r2877, %r2876, 1;
	add.s32 	%r2878, %r727, %r2877;
	ld.shared.v4.u32 	{%r2765, %r2766, %r2767, %r2768}, [%r2878+12288];
	or.b32  	%r2879, %r2831, 7168;
	shr.u32 	%r2880, %r2879, 4;
	add.s32 	%r2881, %r2880, %r2832;
	shl.b32 	%r2882, %r2881, 1;
	add.s32 	%r2883, %r727, %r2882;
	ld.shared.v4.u32 	{%r2769, %r2770, %r2771, %r2772}, [%r2883+14336];
	bar.sync 	0;
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2677 + 0 ], { %rs800, %rs801 };
	// end inline asm
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2678 + 0 ], { %rs802, %rs803 };
	// end inline asm
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2679 + 0 ], { %rs804, %rs805 };
	// end inline asm
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2680 + 0 ], { %rs806, %rs807 };
	// end inline asm
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2681 + 0 ], { %rs808, %rs809 };
	// end inline asm
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2682 + 0 ], { %rs810, %rs811 };
	// end inline asm
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2683 + 0 ], { %rs812, %rs813 };
	// end inline asm
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2684 + 0 ], { %rs814, %rs815 };
	// end inline asm
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2685 + 0 ], { %rs816, %rs817 };
	// end inline asm
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2686 + 0 ], { %rs818, %rs819 };
	// end inline asm
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2687 + 0 ], { %rs820, %rs821 };
	// end inline asm
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2688 + 0 ], { %rs822, %rs823 };
	// end inline asm
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2689 + 0 ], { %rs824, %rs825 };
	// end inline asm
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2690 + 0 ], { %rs826, %rs827 };
	// end inline asm
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2691 + 0 ], { %rs828, %rs829 };
	// end inline asm
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2692 + 0 ], { %rs830, %rs831 };
	// end inline asm
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2693 + 0 ], { %rs832, %rs833 };
	// end inline asm
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2694 + 0 ], { %rs834, %rs835 };
	// end inline asm
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2695 + 0 ], { %rs836, %rs837 };
	// end inline asm
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2696 + 0 ], { %rs838, %rs839 };
	// end inline asm
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2697 + 0 ], { %rs840, %rs841 };
	// end inline asm
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2698 + 0 ], { %rs842, %rs843 };
	// end inline asm
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2699 + 0 ], { %rs844, %rs845 };
	// end inline asm
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2700 + 0 ], { %rs846, %rs847 };
	// end inline asm
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2701 + 0 ], { %rs848, %rs849 };
	// end inline asm
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2702 + 0 ], { %rs850, %rs851 };
	// end inline asm
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2703 + 0 ], { %rs852, %rs853 };
	// end inline asm
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2704 + 0 ], { %rs854, %rs855 };
	// end inline asm
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2705 + 0 ], { %rs856, %rs857 };
	// end inline asm
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2706 + 0 ], { %rs858, %rs859 };
	// end inline asm
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2707 + 0 ], { %rs860, %rs861 };
	// end inline asm
	// begin inline asm
	@%p744 st.shared.v2.b16 [ %r2708 + 0 ], { %rs862, %rs863 };
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r2773, %r2774, %r2775, %r2776}, [%r2848];
	ld.shared.v4.u32 	{%r2777, %r2778, %r2779, %r2780}, [%r2853+2048];
	ld.shared.v4.u32 	{%r2781, %r2782, %r2783, %r2784}, [%r2858+4096];
	ld.shared.v4.u32 	{%r2785, %r2786, %r2787, %r2788}, [%r2863+6144];
	ld.shared.v4.u32 	{%r2789, %r2790, %r2791, %r2792}, [%r2868+8192];
	ld.shared.v4.u32 	{%r2793, %r2794, %r2795, %r2796}, [%r2873+10240];
	ld.shared.v4.u32 	{%r2797, %r2798, %r2799, %r2800}, [%r2878+12288];
	ld.shared.v4.u32 	{%r2801, %r2802, %r2803, %r2804}, [%r2883+14336];
	// begin inline asm
	@%p4 st.global.v4.b32 [ %rd806 + 0 ], { %r2741, %r2742, %r2743, %r2744 };
	// end inline asm
	// begin inline asm
	@%p9 st.global.v4.b32 [ %rd807 + 0 ], { %r2745, %r2746, %r2747, %r2748 };
	// end inline asm
	// begin inline asm
	@%p14 st.global.v4.b32 [ %rd808 + 0 ], { %r2749, %r2750, %r2751, %r2752 };
	// end inline asm
	// begin inline asm
	@%p19 st.global.v4.b32 [ %rd809 + 0 ], { %r2753, %r2754, %r2755, %r2756 };
	// end inline asm
	// begin inline asm
	@%p24 st.global.v4.b32 [ %rd810 + 0 ], { %r2757, %r2758, %r2759, %r2760 };
	// end inline asm
	// begin inline asm
	@%p29 st.global.v4.b32 [ %rd811 + 0 ], { %r2761, %r2762, %r2763, %r2764 };
	// end inline asm
	// begin inline asm
	@%p34 st.global.v4.b32 [ %rd812 + 0 ], { %r2765, %r2766, %r2767, %r2768 };
	// end inline asm
	// begin inline asm
	@%p39 st.global.v4.b32 [ %rd813 + 0 ], { %r2769, %r2770, %r2771, %r2772 };
	// end inline asm
	// begin inline asm
	@%p44 st.global.v4.b32 [ %rd814 + 0 ], { %r2773, %r2774, %r2775, %r2776 };
	// end inline asm
	// begin inline asm
	@%p49 st.global.v4.b32 [ %rd815 + 0 ], { %r2777, %r2778, %r2779, %r2780 };
	// end inline asm
	// begin inline asm
	@%p54 st.global.v4.b32 [ %rd816 + 0 ], { %r2781, %r2782, %r2783, %r2784 };
	// end inline asm
	// begin inline asm
	@%p59 st.global.v4.b32 [ %rd817 + 0 ], { %r2785, %r2786, %r2787, %r2788 };
	// end inline asm
	// begin inline asm
	@%p64 st.global.v4.b32 [ %rd818 + 0 ], { %r2789, %r2790, %r2791, %r2792 };
	// end inline asm
	// begin inline asm
	@%p69 st.global.v4.b32 [ %rd819 + 0 ], { %r2793, %r2794, %r2795, %r2796 };
	// end inline asm
	// begin inline asm
	@%p74 st.global.v4.b32 [ %rd820 + 0 ], { %r2797, %r2798, %r2799, %r2800 };
	// end inline asm
	// begin inline asm
	@%p79 st.global.v4.b32 [ %rd821 + 0 ], { %r2801, %r2802, %r2803, %r2804 };
	// end inline asm
	.loc	1 280 4                         // prefix_prefill.py:280:4
	ret;
$L__tmp27:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/data/home/scyb494/.conda/envs/verl/lib/python3.10/site-packages/vllm/attention/ops/prefix_prefill.py"
	.file	2 "/data/home/scyb494/.conda/envs/verl/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 256                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xf9 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 112                                 // DW_AT_name
.b8 114
.b8 101
.b8 102
.b8 105
.b8 120
.b8 95
.b8 112
.b8 114
.b8 101
.b8 102
.b8 105
.b8 108
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 100
.b8 97
.b8 116
.b8 97
.b8 47
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 115
.b8 99
.b8 121
.b8 98
.b8 52
.b8 57
.b8 52
.b8 47
.b8 46
.b8 99
.b8 111
.b8 110
.b8 100
.b8 97
.b8 47
.b8 101
.b8 110
.b8 118
.b8 115
.b8 47
.b8 118
.b8 101
.b8 114
.b8 108
.b8 47
.b8 108
.b8 105
.b8 98
.b8 47
.b8 112
.b8 121
.b8 116
.b8 104
.b8 111
.b8 110
.b8 51
.b8 46
.b8 49
.b8 48
.b8 47
.b8 115
.b8 105
.b8 116
.b8 101
.b8 45
.b8 112
.b8 97
.b8 99
.b8 107
.b8 97
.b8 103
.b8 101
.b8 115
.b8 47
.b8 118
.b8 108
.b8 108
.b8 109
.b8 47
.b8 97
.b8 116
.b8 116
.b8 101
.b8 110
.b8 116
.b8 105
.b8 111
.b8 110
.b8 47
.b8 111
.b8 112
.b8 115
.b8 0
.b8 2                                   // Abbrev [2] 0x7f:0xe DW_TAG_subprogram
.b8 95                                  // DW_AT_name
.b8 102
.b8 119
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8d:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 127                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa2:0x18 DW_TAG_inlined_subroutine
.b32 127                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp18                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 190                                 // DW_AT_call_line
.b8 38                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xba:0x18 DW_TAG_inlined_subroutine
.b32 127                                // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp20                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 192                                 // DW_AT_call_line
.b8 22                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd2:0x18 DW_TAG_inlined_subroutine
.b32 127                                // DW_AT_abstract_origin
.b64 $L__tmp21                          // DW_AT_low_pc
.b64 $L__tmp22                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 252                                 // DW_AT_call_line
.b8 38                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xea:0x18 DW_TAG_inlined_subroutine
.b32 127                                // DW_AT_abstract_origin
.b64 $L__tmp23                          // DW_AT_low_pc
.b64 $L__tmp26                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 254                                 // DW_AT_call_line
.b8 22                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
